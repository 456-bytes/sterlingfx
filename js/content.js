! function (e) {
    function t(t) {
        for (var i, r, s = t[0], l = t[1], c = t[2], d = 0, f = []; d < s.length; d++) r = s[d], Object.prototype.hasOwnProperty.call(o, r) && o[r] && f.push(o[r][0]), o[r] = 0;
        for (i in l) Object.prototype.hasOwnProperty.call(l, i) && (e[i] = l[i]);
        for (u && u(t); f.length;) f.shift()();
        return a.push.apply(a, c || []), n()
    }

    function n() {
        for (var e, t = 0; t < a.length; t++) {
            for (var n = a[t], i = !0, s = 1; s < n.length; s++) {
                var l = n[s];
                0 !== o[l] && (i = !1)
            }
            i && (a.splice(t--, 1), e = r(r.s = n[0]))
        }
        return e
    }
    var i = {},
        o = {
            2: 0
        },
        a = [];

    function r(t) {
        if (i[t]) return i[t].exports;
        var n = i[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return e[t].call(n.exports, n, n.exports, r), n.l = !0, n.exports
    }
    r.m = e, r.c = i, r.d = function (e, t, n) {
        r.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: n
        })
    }, r.r = function (e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, r.t = function (e, t) {
        if (1 & t && (e = r(e)), 8 & t) return e;
        if (4 & t && "object" == typeof e && e && e.__esModule) return e;
        var n = Object.create(null);
        if (r.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var i in e) r.d(n, i, function (t) {
                return e[t]
            }.bind(null, i));
        return n
    }, r.n = function (e) {
        var t = e && e.__esModule ? function () {
            return e.default
        } : function () {
            return e
        };
        return r.d(t, "a", t), t
    }, r.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, r.p = "";
    var s = window.webpackJsonp = window.webpackJsonp || [],
        l = s.push.bind(s);
    s.push = t, s = s.slice();
    for (var c = 0; c < s.length; c++) t(s[c]);
    var u = l;
    a.push([754, 0]), n()
}({
    15: function (e, t, n) {
        "use strict";
        n.d(t, "b", (function () {
            return i
        })), n.d(t, "D", (function () {
            return o
        })), n.d(t, "C", (function () {
            return a
        })), n.d(t, "I", (function () {
            return r
        })), n.d(t, "fb", (function () {
            return _
        })), n.d(t, "e", (function () {
            return s
        })), n.d(t, "K", (function () {
            return l
        })), n.d(t, "H", (function () {
            return c
        })), n.d(t, "nb", (function () {
            return u
        })), n.d(t, "a", (function () {
            return d
        })), n.d(t, "n", (function () {
            return f
        })), n.d(t, "G", (function () {
            return p
        })), n.d(t, "L", (function () {
            return h
        })), n.d(t, "gb", (function () {
            return g
        })), n.d(t, "hb", (function () {
            return m
        })), n.d(t, "d", (function () {
            return v
        })), n.d(t, "p", (function () {
            return b
        })), n.d(t, "j", (function () {
            return y
        })), n.d(t, "P", (function () {
            return w
        })), n.d(t, "k", (function () {
            return u
        })), n.d(t, "l", (function () {
            return S
        })), n.d(t, "ib", (function () {
            return O
        })), n.d(t, "N", (function () {
            return k
        })), n.d(t, "x", (function () {
            return C
        })), n.d(t, "r", (function () {
            return D
        })), n.d(t, "s", (function () {
            return E
        })), n.d(t, "q", (function () {
            return P
        })), n.d(t, "v", (function () {
            return A
        })), n.d(t, "y", (function () {
            return x
        })), n.d(t, "u", (function () {
            return M
        })), n.d(t, "w", (function () {
            return T
        })), n.d(t, "m", (function () {
            return I
        })), n.d(t, "o", (function () {
            return L
        })), n.d(t, "bb", (function () {
            return j
        })), n.d(t, "ab", (function () {
            return R
        })), n.d(t, "z", (function () {
            return z
        })), n.d(t, "mb", (function () {
            return F
        })), n.d(t, "M", (function () {
            return B
        })), n.d(t, "t", (function () {
            return N
        })), n.d(t, "i", (function () {
            return U
        })), n.d(t, "O", (function () {
            return V
        })), n.d(t, "cb", (function () {
            return te
        })), n.d(t, "c", (function () {
            return H
        })), n.d(t, "W", (function () {
            return q
        })), n.d(t, "Z", (function () {
            return K
        })), n.d(t, "V", (function () {
            return W
        })), n.d(t, "X", (function () {
            return G
        })), n.d(t, "T", (function () {
            return Y
        })), n.d(t, "Y", (function () {
            return Q
        })), n.d(t, "U", (function () {
            return J
        })), n.d(t, "S", (function () {
            return $
        })), n.d(t, "f", (function () {
            return X
        })), n.d(t, "g", (function () {
            return Z
        })), n.d(t, "h", (function () {
            return ee
        })), n.d(t, "jb", (function () {
            return ne
        })), n.d(t, "ob", (function () {
            return ie
        })), n.d(t, "R", (function () {
            return oe
        })), n.d(t, "A", (function () {
            return ae
        })), n.d(t, "db", (function () {
            return re
        })), n.d(t, "B", (function () {
            return se
        })), n.d(t, "J", (function () {
            return le
        })), n.d(t, "lb", (function () {
            return ce
        })), n.d(t, "eb", (function () {
            return ue
        })), n.d(t, "E", (function () {
            return de
        })), n.d(t, "F", (function () {
            return fe
        })), n.d(t, "kb", (function () {
            return _e
        })), n.d(t, "Q", (function () {
            return pe
        }));
        var i = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "25",
                            height: "25",
                            viewBox: "0 0 63 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M2.907 55a2.549 2.549 0 01-2.548-2.55c0-1.408 1.14-2.55 2.548-2.55h57.068a2.549 2.549 0 012.547 2.55c0 1.408-1.14 2.55-2.547 2.55H2.907zm0-16.634a2.549 2.549 0 01-2.548-2.55c0-1.407 1.14-2.549 2.548-2.549h57.068a2.549 2.549 0 012.547 2.55c0 1.408-1.14 2.55-2.547 2.55H2.907zm0-16.633a2.549 2.549 0 01-2.548-2.55c0-1.408 1.14-2.55 2.548-2.55h57.068a2.549 2.549 0 012.547 2.55c0 1.408-1.14 2.55-2.547 2.55H2.907zm0-16.634A2.549 2.549 0 01.359 2.55C.36 1.143 1.5 0 2.907 0h57.068a2.549 2.549 0 012.547 2.55c0 1.408-1.14 2.55-2.547 2.55H2.907z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            o = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "25",
                            height: "25",
                            viewBox: "0 0 55 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M55 12.89v7.735a2.148 2.148 0 11-4.297 0v-7.734c0-4.739-3.855-8.594-8.594-8.594H12.891c-4.739 0-8.594 3.855-8.594 8.594v29.218c0 4.739 3.855 8.594 8.594 8.594h29.218c2.19 0 4.276-.824 5.873-2.32a2.148 2.148 0 112.938 3.136A12.845 12.845 0 0142.11 55H12.89C5.784 55 0 49.217 0 42.11V12.89C0 5.784 5.783 0 12.89 0h29.22C49.216 0 55 5.783 55 12.89zm-8.594.967a2.148 2.148 0 00-2.148-2.148H10.742a2.148 2.148 0 100 4.297h33.516a2.148 2.148 0 002.148-2.149zM32.258 30.094l-1.432.859a9.096 9.096 0 010 5.555l1.432.859a2.148 2.148 0 01-2.211 3.684l-1.458-.874a9.129 9.129 0 01-4.312 2.427v1.869a2.148 2.148 0 11-4.297 0v-1.87a9.129 9.129 0 01-4.39-2.508l-1.594.956a2.147 2.147 0 11-2.21-3.685l1.61-.966a9.105 9.105 0 01.001-5.339l-1.612-.967a2.148 2.148 0 112.211-3.684l1.594.956a9.128 9.128 0 014.39-2.508v-1.87a2.148 2.148 0 114.297 0v1.87a9.129 9.129 0 014.312 2.426l1.458-.874a2.148 2.148 0 112.21 3.684zm-5.295 3.636a4.84 4.84 0 00-4.834-4.834 4.84 4.84 0 00-4.834 4.834 4.84 4.84 0 004.834 4.834 4.84 4.84 0 004.834-4.834zm26.134-4.278l-4.328-4.239a2.148 2.148 0 00-3.007 3.07l4.32 4.23c.4.403.621.936.621 1.502 0 .569-.222 1.103-.626 1.506l-4.328 4.315a2.148 2.148 0 103.033 3.043l4.328-4.315a6.382 6.382 0 001.89-4.55 6.382 6.382 0 00-1.89-4.549l-.013-.013zm-15.5 6.534h6.768a2.148 2.148 0 100-4.297h-6.767a2.148 2.148 0 100 4.297z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            a = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "25",
                            height: "25",
                            viewBox: "0 0 42 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M15.509 54.646a4.57 4.57 0 004.995-.993l6.875-6.875a4.552 4.552 0 001.342-3.24V28.183l11.41-17.435a6.859 6.859 0 00.398-7.086A6.86 6.86 0 0034.451 0H6.95A6.861 6.861 0 00.87 3.662c-1.193 2.259-1.04 4.974.376 7.05L12.68 28.182v22.23c0 1.86 1.11 3.521 2.829 4.233zM4.925 5.804c.193-.367.779-1.22 2.026-1.22h27.5c1.246 0 1.832.853 2.027 1.22a2.266 2.266 0 01-.159 2.398L24.512 26.245c-.03.046-.048.095-.074.142-.044.08-.092.16-.127.247-.03.073-.047.148-.069.222-.02.069-.044.135-.06.206-.019.1-.023.2-.03.301-.002.046-.014.09-.014.137v16.037l-6.875 6.875V27.5c0-.05-.011-.094-.015-.142-.006-.099-.01-.196-.03-.293-.014-.076-.041-.147-.062-.22-.021-.07-.037-.141-.066-.209a2.295 2.295 0 00-.14-.268c-.023-.04-.038-.083-.063-.122l-.017-.025v-.001L5.055 8.167c-.7-1.03-.326-1.995-.131-2.363z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            r = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "25",
                            height: "25",
                            viewBox: "0 0 55 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M22.643 45.244C10.169 45.244.02 35.096.02 22.622S10.169 0 22.643 0s22.622 10.148 22.622 22.622-10.148 22.622-22.622 22.622zm0-40.956c-10.11 0-18.333 8.225-18.333 18.334s8.224 18.333 18.333 18.333c10.109 0 18.333-8.224 18.333-18.333 0-10.11-8.224-18.334-18.333-18.334zm31.643 50.019a2.144 2.144 0 000-3.033L44.69 41.68a2.144 2.144 0 10-3.032 3.032l9.595 9.596c.419.418.968.628 1.517.628.548 0 1.097-.21 1.516-.628z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            s = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "27",
                            height: "27",
                            viewBox: "0 0 55 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M54.881 40.372l-1.577-11.597a12.807 12.807 0 00-3.495-7.21 12.806 12.806 0 00-7.08-3.754l-2.88-.498.005-10.868a6.443 6.443 0 00-1.845-4.543A6.317 6.317 0 0033.466 0c-3.585 0-6.502 2.891-6.502 6.444l-.007 10.881-2.464.445a12.857 12.857 0 00-10.486 10.948l-1.98 14.55c-.576 4.239-4.237 7.435-8.515 7.435H2.149a2.148 2.148 0 100 4.297h39.96A12.889 12.889 0 0054.88 40.372zm-6.3 7.39a8.592 8.592 0 01-6.473 2.941H13.12a12.89 12.89 0 003.165-6.856l1.98-14.55a8.572 8.572 0 016.99-7.299l4.231-.763a2.148 2.148 0 001.767-2.113l.008-12.677c0-1.164 1.01-2.148 2.205-2.148 1.173 0 2.091.944 2.091 2.147L35.55 19.12c0 1.045.752 1.94 1.782 2.118l4.664.807a8.562 8.562 0 017.05 7.31l1.578 11.596a8.593 8.593 0 01-2.042 6.81zm-3.368-8.465a12.88 12.88 0 01-.135 4.303 2.15 2.15 0 01-4.211-.853c.19-.94.22-1.905.089-2.87l-.241-1.772a2.149 2.149 0 014.257-.58l.241 1.772zm-17.187 0c.197 1.448.15 2.9-.138 4.316a2.15 2.15 0 01-4.21-.858c.192-.942.222-1.91.09-2.878l-.24-1.765a2.148 2.148 0 014.258-.58l.24 1.765zm8.594 0a12.88 12.88 0 01-.136 4.303 2.15 2.15 0 01-4.21-.853c.19-.94.22-1.905.088-2.87l-.241-1.772a2.149 2.149 0 014.258-.58l.24 1.772zM0 7.627a2.686 2.686 0 115.372 0 2.686 2.686 0 01-5.371 0zm8.702 6.66a2.686 2.686 0 115.371 0 2.686 2.686 0 01-5.371 0zm-1.611 16.65a2.686 2.686 0 110 5.372 2.686 2.686 0 010-5.371zM5.372 24.17a2.686 2.686 0 11-5.371 0 2.686 2.686 0 015.371 0zM2.686 41.035a2.686 2.686 0 100 5.371 2.686 2.686 0 000-5.37zm42.11-10.742a2.148 2.148 0 00-2.149-2.148H24.6a2.148 2.148 0 100 4.296h18.047a2.148 2.148 0 002.149-2.148z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            l = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "23",
                            height: "25",
                            viewBox: "0 0 67 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M23.802 30.913a2.705 2.705 0 110 5.41h-8.244a2.705 2.705 0 110-5.41h1.417V13.01a2.705 2.705 0 115.41 0v17.904h1.417zm-4.122 8.244a2.705 2.705 0 012.705 2.705v1.374a2.705 2.705 0 11-5.41 0v-1.374a2.705 2.705 0 012.705-2.705zm31.557-8.244a2.705 2.705 0 110 5.41h-8.243a2.705 2.705 0 110-5.41h1.417V13.01a2.705 2.705 0 115.41 0v17.904h1.416zm-4.121 8.244a2.705 2.705 0 012.704 2.705v1.374a2.705 2.705 0 11-5.41 0v-1.374a2.705 2.705 0 012.706-2.705zm-9.532-20.609a2.705 2.705 0 110 5.41H29.34a2.705 2.705 0 110-5.41h1.417v-5.539a2.705 2.705 0 115.41 0v5.539h1.417zm-4.122 8.244a2.705 2.705 0 012.705 2.704v13.74a2.705 2.705 0 11-5.41 0v-13.74a2.705 2.705 0 012.705-2.704zM50.851 55H15.813C7.292 55 .36 48.067.36 39.546v-24.09C.36 6.935 7.293 0 15.816 0H50.85c8.523 0 15.457 6.934 15.457 15.457v24.086C66.308 48.066 59.374 55 50.85 55zM15.816 5.152c-5.682 0-10.305 4.623-10.305 10.305v24.089c0 5.68 4.622 10.302 10.302 10.302h35.038c5.682 0 10.304-4.623 10.304-10.305V15.457c0-5.682-4.622-10.305-10.304-10.305H15.816z",
                            fill: "#000",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            c = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "24",
                            height: "24",
                            viewBox: "0 0 38 38",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M8.93 37.994h14.22c4.901 0 8.888-3.987 8.888-8.887v-11.11c0-4.9-3.987-8.887-8.888-8.887H8.93c-4.9 0-8.887 3.987-8.887 8.887v11.11c0 4.9 3.987 8.887 8.887 8.887zm14.22-25.922a5.932 5.932 0 015.925 5.925v11.11a5.932 5.932 0 01-5.925 5.925H8.93a5.932 5.932 0 01-5.925-5.925v-11.11a5.932 5.932 0 015.925-5.925h14.22zm-4.189 7.999a1.852 1.852 0 110-3.703 1.852 1.852 0 010 3.703zm16.04 3.7V8.887a5.932 5.932 0 00-5.926-5.925h-14.22c-1.94 0-3.76.952-4.869 2.548a1.481 1.481 0 01-2.432-1.69A8.897 8.897 0 0114.855 0h14.22c4.901 0 8.888 3.987 8.888 8.888V23.77a1.481 1.481 0 11-2.963 0zM7.997 28.942l3.645-3.826a2.216 2.216 0 012.818-.064l2.252 1.842.019.015c1.069.845 2.236 1.272 3.373 1.235.878-.029 2.193-.356 3.467-1.751l.033-.038 2.148-2.518a1.481 1.481 0 10-2.254-1.922l-2.13 2.497c-.89.965-1.726 1.018-2.79.18l-2.253-1.842-.02-.015a5.172 5.172 0 00-6.682.211 1.493 1.493 0 00-.082.08L5.852 26.9a1.481 1.481 0 102.146 2.043z",
                            fill: "#000",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            u = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "24",
                            height: "24",
                            viewBox: "0 0 64 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#000",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M53.836 9.335H9.577c-5.563 0-9.873 4.9-9.136 10.426l3.637 27.247C4.686 51.564 8.613 55 13.214 55H50.2c4.6 0 8.528-3.436 9.136-7.992l3.636-27.247c.736-5.52-3.568-10.426-9.136-10.426zm3.88 9.725l-3.637 27.248a3.925 3.925 0 01-3.88 3.394H13.215a3.925 3.925 0 01-3.88-3.394L5.698 19.06a3.909 3.909 0 013.88-4.427h44.258a3.908 3.908 0 013.88 4.427z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M25.85 24.35v15.887l12.905-7.944L25.85 24.35zm16.562 11.924L27.67 45.349a4.677 4.677 0 01-7.127-3.98v-18.15a4.675 4.675 0 017.127-3.981l14.742 9.075a4.674 4.674 0 010 7.96zM10.196 5.298h43.02a2.648 2.648 0 002.648-2.649A2.648 2.648 0 0053.217 0h-43.02a2.648 2.648 0 00-2.648 2.65 2.648 2.648 0 002.647 2.648z"
                        }
                    })])]))
                }
            },
            d = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "24",
                            height: "24",
                            viewBox: "0 0 63 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#000",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M53.594 9.46H9.575c-5.533 0-9.82 4.877-9.086 10.378L4.105 46.96c.605 4.535 4.511 7.955 9.087 7.955h36.785c4.575 0 8.482-3.42 9.086-7.955l3.617-27.123c.733-5.495-3.548-10.378-9.086-10.378zm3.858 9.68l-3.616 27.124a3.905 3.905 0 01-3.859 3.378H13.192a3.905 3.905 0 01-3.859-3.378L5.717 19.141a3.89 3.89 0 013.858-4.407h44.019a3.889 3.889 0 013.858 4.407zM10.154 5.358h42.861a2.637 2.637 0 100-5.274H10.154a2.637 2.637 0 100 5.274z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M42.14 24.472l-8.037-4.019c-1.75-.874-3.816.399-3.816 2.36v8.077h-2.721c-4.408 0-7.995 3.587-7.995 7.995 0 4.408 3.587 7.995 7.995 7.995 4.408 0 7.995-3.587 7.995-7.995V27.08l4.22 2.11a2.637 2.637 0 002.359-4.717zM30.287 38.885c0 1.5-1.22 2.72-2.721 2.72-1.5 0-2.72-1.22-2.72-2.72 0-1.5 1.22-2.72 2.72-2.72h2.72v2.72z"
                        }
                    })])]))
                }
            },
            f = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "24",
                            height: "24",
                            viewBox: "0 0 56 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#000",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M53.067 11.458h-6.875V2.292A2.293 2.293 0 0043.901 0H7.234A6.882 6.882 0 00.36 6.875v41.25A6.882 6.882 0 007.234 55h41.25a6.882 6.882 0 006.875-6.875V13.75a2.293 2.293 0 00-2.292-2.292zM7.234 50.417a2.294 2.294 0 01-2.292-2.292V6.875a2.294 2.294 0 012.292-2.292H41.61v43.542c0 .804.147 1.573.401 2.292H7.234zm43.542-2.292a2.294 2.294 0 01-2.292 2.292 2.294 2.294 0 01-2.292-2.292V16.042h4.584v32.083z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M34.734 11.458H11.817a2.293 2.293 0 000 4.584h22.917a2.293 2.293 0 000-4.584zM30.15 25.208H11.818a2.293 2.293 0 000 4.584h18.334a2.293 2.293 0 000-4.584zM27.86 32.083H11.816a2.293 2.293 0 000 4.584H27.86a2.293 2.293 0 000-4.584zM25.567 38.958h-13.75a2.293 2.293 0 000 4.584h13.75a2.293 2.293 0 000-4.584z"
                        }
                    })])]))
                }
            },
            _ = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "16",
                            height: "16",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 50 50"
                        }, u),
                        ...d
                    }, a.concat([n("circle", {
                        attrs: {
                            cx: "25",
                            cy: "25",
                            r: "25",
                            fill: "#d75a4a"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "none",
                            stroke: "#fff",
                            "stroke-width": "2",
                            "stroke-linecap": "round",
                            "stroke-miterlimit": "10",
                            d: "M16 34l9-9 9-9M16 16l9 9 9 9"
                        }
                    })]))
                }
            },
            p = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "76",
                            height: "60",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            "fill-rule": "nonzero",
                            fill: "none"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M73.508 50h-4.984a2.497 2.497 0 002.492-2.5c0-1.382-1.116-2.5-2.492-2.5h-4.983a2.497 2.497 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5h-7.476a2.497 2.497 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5H69.77a2.497 2.497 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5h-6.23a2.496 2.496 0 002.492-2.5c0-1.38-1.115-2.5-2.492-2.5H61.05a2.496 2.496 0 002.491-2.5c0-1.38-1.115-2.5-2.491-2.5h12.459A2.496 2.496 0 0076 17.5c0-1.38-1.116-2.5-2.492-2.5h-4.984a2.496 2.496 0 002.492-2.5c0-1.38-1.116-2.5-2.492-2.5H63.54a2.496 2.496 0 002.492-2.5c0-1.38-1.116-2.5-2.492-2.5h-3.737a2.496 2.496 0 002.492-2.5c0-1.38-1.116-2.5-2.492-2.5H22.426a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h-8.721a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h-2.492a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h7.476a2.496 2.496 0 00-2.492 2.5c0 1.38 1.115 2.5 2.492 2.5H4.984a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h6.23a2.496 2.496 0 00-2.493 2.5c0 1.38 1.116 2.5 2.492 2.5h-6.23a2.496 2.496 0 00-2.491 2.5c0 1.38 1.116 2.5 2.492 2.5H2.492A2.495 2.495 0 000 37.5C0 38.88 1.116 40 2.492 40h6.23a2.495 2.495 0 00-2.492 2.5c0 1.38 1.115 2.5 2.491 2.5H6.23a2.495 2.495 0 00-2.492 2.5c0 1.38 1.115 2.5 2.492 2.5h12.459a2.495 2.495 0 00-2.492 2.5c0 1.38 1.115 2.5 2.492 2.5h-4.984a2.495 2.495 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h42.36a2.497 2.497 0 002.492-2.5c0-1.382-1.115-2.5-2.492-2.5h17.443A2.497 2.497 0 0076 52.5c0-1.382-1.116-2.5-2.492-2.5z",
                            fill: "#656D78",
                            opacity: ".146"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M46.698 19.392v7.915h9.864V10.981c0-.606-.496-1.102-1.102-1.102H22.792c-.606 0-1.102.496-1.102 1.102v7.309h23.906c.606 0 1.102.496 1.102 1.102z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M46.698 19.392v7.915h7.3V12.453H24.253v5.837h21.342c.606 0 1.102.496 1.102 1.102z",
                            fill: "#FF435E"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#C30621",
                            d: "M24.254 12.453H27.2v5.837h-2.946z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M29.302 28.41c0-.607.496-1.103 1.102-1.103h16.294v-7.915c0-.606-.496-1.102-1.102-1.102H12.93c-.607 0-1.103.496-1.103 1.102v21.844c0 .607.496 1.102 1.103 1.102h16.373V28.41z",
                            fill: "#E1EAF8"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M29.302 28.41c0-.607.496-1.103 1.102-1.103h13.73v-6.443H14.391v18.9H29.3V28.41z",
                            fill: "#4396FF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M28.095 28.405a4.112 4.112 0 00-4.096 3.852 3.261 3.261 0 00-1.914-.618 3.29 3.29 0 00-3.205 2.57 5.97 5.97 0 00-1.047-.282v5.838h11.469V28.587a4.084 4.084 0 00-1.207-.182z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M17.833 33.927V20.864H14.39v13.482a5.95 5.95 0 013.442-.419z",
                            fill: "#1E69C9"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M16.801 33.838a5.95 5.95 0 00-2.41.508v5.419h3.442v-5.838a5.997 5.997 0 00-1.032-.09z",
                            fill: "#E1EAF8"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M64.174 50.253c0 .606-.496 1.102-1.103 1.102H30.404a1.105 1.105 0 01-1.102-1.102V28.41c0-.606.496-1.102 1.102-1.102H63.07c.607 0 1.103.496 1.103 1.102v21.844z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#43D9FF",
                            d: "M31.866 29.88h29.743v18.902H31.866z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M61.22 44.51l-6.694-6.72a.55.55 0 00-.777 0l-6.965 6.992 3.597 3.61c.213.214.14.39-.163.39h10.84c.303 0 .551-.248.551-.551v-2.78a1.54 1.54 0 00-.389-.941z",
                            fill: "#08D074"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M43.603 35.213a2.383 2.383 0 00-2.378-2.387 2.382 2.382 0 00-2.378 2.387 2.382 2.382 0 002.378 2.387 2.383 2.383 0 002.378-2.387z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M40.738 35.213c0-.98.59-1.823 1.432-2.19a2.382 2.382 0 00-3.324 2.19 2.382 2.382 0 003.324 2.19 2.387 2.387 0 01-1.432-2.19z",
                            fill: "#E1EAF8"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M63.071 26.48h-5.683V20.7a.826.826 0 10-1.653 0v5.782h-3.629a.826.826 0 100 1.653h10.965a.28.28 0 01.276.275v21.844a.28.28 0 01-.276.276H30.404a.28.28 0 01-.276-.276V28.41a.28.28 0 01.276-.275h18.175a.827.827 0 100-1.653h-1.054v-7.089a1.93 1.93 0 00-1.929-1.929h-23.08v-6.482c0-.149.126-.275.276-.275H55.46c.15 0 .275.126.275.275v6.082a.826.826 0 101.653 0V10.98a1.93 1.93 0 00-1.928-1.928H22.792a1.93 1.93 0 00-1.929 1.928v6.482H12.93A1.93 1.93 0 0011 19.392v21.844a1.93 1.93 0 001.929 1.929h15.546v7.088a1.93 1.93 0 001.929 1.929H63.07A1.93 1.93 0 0065 50.253V28.41a1.93 1.93 0 00-1.929-1.928zm-34.42 1.131c-.218.496-.173 1.34-.176 1.645v12.256H12.93a.28.28 0 01-.276-.276V19.392a.28.28 0 01.276-.275h32.667a.28.28 0 01.276.275v7.089H30.404a1.93 1.93 0 00-1.754 1.13z",
                            fill: "#000"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M50.38 48.391l-6.587-6.612a.55.55 0 00-.778 0l-2.684 2.694a.55.55 0 01-.778 0l-4.198-4.214v8.523h14.863c.304 0 .376-.176.163-.39z",
                            fill: "#07A45B"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M34.554 40.236a.55.55 0 01.778 0l.023.023V29.88h-3.49v13.605c0-.302.176-.726.39-.941l2.3-2.308z",
                            fill: "#2FC2E7"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M31.866 48.23v.552h.55a.553.553 0 01-.55-.551z",
                            fill: "#434C54"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M35.332 40.236a.55.55 0 00-.778 0l-2.3 2.308a1.539 1.539 0 00-.388.941v4.746c0 .303.248.55.55.55h2.939V40.26l-.023-.023z",
                            fill: "#067843"
                        }
                    })])]))
                }
            },
            h = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "25",
                            height: "25",
                            viewBox: "0 0 55 55",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M44.912 2.149a6.866 6.866 0 00-9.702.001l-7.382 7.394a2.285 2.285 0 103.234 3.23l7.382-7.392a2.293 2.293 0 013.236-.001l8.08 8.08a2.292 2.292 0 010 3.237l-17.062 17.06a2.292 2.292 0 01-3.237.002l-4.035-4.034a2.286 2.286 0 00-3.232 3.232l4.035 4.034a6.836 6.836 0 004.85 2.006c1.61 0 3.203-.59 4.49-1.712.127-.083.249-.182.36-.294L52.993 19.93c2.673-2.676 2.673-7.027 0-9.701l-8.08-8.08z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M24.093 42.376l-7.395 7.383a2.292 2.292 0 01-3.237.001l-8.08-8.08a2.293 2.293 0 010-3.236l17.063-17.062a2.293 2.293 0 013.236-.001l4.046 4.045a2.284 2.284 0 103.232-3.231l-4.046-4.046c-2.562-2.563-6.65-2.641-9.342-.294a2.312 2.312 0 00-.36.294L2.147 35.211a6.87 6.87 0 00.001 9.701l8.08 8.08a6.838 6.838 0 004.851 2.006 6.84 6.84 0 004.849-2.005l7.395-7.383a2.286 2.286 0 00-3.23-3.234z"
                        }
                    })])]))
                }
            },
            g = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "28",
                            height: "28",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "none",
                            "fill-rule": "evenodd"
                        }
                    }, [n("circle", {
                        attrs: {
                            stroke: "#ccc",
                            cx: "14",
                            cy: "14",
                            r: "13.5"
                        }
                    }), n("text", {
                        attrs: {
                            "font-family": "Aan55, Aganè",
                            "font-size": "14",
                            fill: "#ccc"
                        }
                    }, [n("tspan", {
                        attrs: {
                            x: "10",
                            y: "18"
                        }
                    }, [i("+")])])])]))
                }
            },
            m = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "20",
                            viewBox: "0 0 28 28",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "none",
                            "fill-rule": "evenodd"
                        }
                    }, [n("circle", {
                        attrs: {
                            stroke: "#ccc",
                            cx: "14",
                            cy: "14",
                            r: "13.5"
                        }
                    }), n("text", {
                        attrs: {
                            "font-family": "Aan55, Aganè",
                            "font-size": "18",
                            fill: "#ccc"
                        }
                    }, [n("tspan", {
                        attrs: {
                            x: "9",
                            y: "19"
                        }
                    }, [i("+")])])])]))
                }
            },
            v = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 100 100",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("circle", {
                        staticClass: "circle__svg-circle",
                        attrs: {
                            cx: "50",
                            cy: "50",
                            r: "45"
                        }
                    })]))
                }
            },
            b = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            xmlns: "http://www.w3.org/2000/svg",
                            width: "14",
                            height: "14"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        staticClass: "icon_stroke_repaint",
                        attrs: {
                            d: "M7 0v8M4 4l3 5 3-5m-9 6.078V12a1 1 0 001 1h10a1 1 0 001-1v-2",
                            fill: "none"
                        }
                    })]))
                }
            },
            y = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: ["icon_fill_repaint", r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            class: "icon_fill_repaint",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 52.974 52.974",
                            width: "15",
                            height: "15"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M49.467 3.51c-4.677-4.679-12.291-4.681-16.97 0l-9.192 9.192a.999.999 0 101.414 1.414l9.192-9.192a9.927 9.927 0 017.07-2.915c2.681 0 5.191 1.036 7.071 2.916s2.916 4.391 2.916 7.071c0 2.68-1.036 5.19-2.916 7.07L36.033 31.088c-3.898 3.898-10.244 3.898-14.143 0a.999.999 0 10-1.414 1.414c2.34 2.339 5.412 3.509 8.485 3.509s6.146-1.17 8.485-3.509L49.467 20.48a11.914 11.914 0 003.502-8.485c0-3.214-1.244-6.227-3.502-8.485z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M26.84 40.279l-7.778 7.778a9.928 9.928 0 01-7.071 2.916 9.93 9.93 0 01-7.071-2.916c-3.898-3.898-3.898-10.243 0-14.142l11.314-11.314c3.899-3.898 10.244-3.896 14.142 0a.999.999 0 101.414-1.414c-4.677-4.679-12.291-4.681-16.97 0L3.505 32.502a11.914 11.914 0 00-3.501 8.485c0 3.214 1.244 6.227 3.502 8.484s5.271 3.502 8.484 3.502c3.215 0 6.228-1.244 8.485-3.502l7.778-7.778a.999.999 0 10-1.413-1.414z"
                        }
                    })]))
                }
            },
            w = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: ["icon_fill_repaint", r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            class: "icon_fill_repaint",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 58.424 58.424",
                            width: "15",
                            height: "15"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M57.417 14.489L43.007 0v8.652c-3.875.031-6.701.909-8.557 1.771H1.007v48h48V22.945l8.41-8.456zm-14.185-3.838c.243 0 .492.004.744.012l1.03.03V4.848l9.59 9.642-5.59 5.619-.948.953-3.052 3.069V18.528l-.765-.185c-.119-.029-2.943-.69-6.714.24-1.151.285-2.47.747-3.861 1.478A19.025 19.025 0 0029.6 22.95a22.674 22.674 0 00-2.68 2.961c.115-2.535.85-6.373 3.761-9.92a17.741 17.741 0 012.488-2.477l.031-.025a5.677 5.677 0 01.289-.214c.052-.037.106-.075.167-.116l.09-.06c.086-.057.18-.116.283-.179l.043-.026c1.445-.873 4.459-2.243 9.16-2.243zm3.775 14.305v31.468h-44v-44h28.358c-.069.06-.131.121-.198.181a18.263 18.263 0 00-.717.674 16.496 16.496 0 00-.663.686c-.1.109-.199.218-.296.327a21.077 21.077 0 00-.872 1.067 15.046 15.046 0 00-.508.705 19.47 19.47 0 00-1.061 1.747c-.068.127-.132.254-.196.381a15.982 15.982 0 00-.335.705c-.047.106-.095.211-.14.317-.054.127-.105.254-.156.38a13.502 13.502 0 00-.26.692 12.093 12.093 0 00-.225.681 12.37 12.37 0 00-.193.667c-.026.096-.052.192-.076.288-.031.125-.06.247-.088.37-.021.091-.043.182-.062.272-.027.124-.05.245-.074.367-.017.087-.035.174-.05.26-.022.122-.041.242-.061.362l-.039.245c-.018.12-.033.237-.048.354l-.03.233c-.014.117-.025.231-.036.345l-.021.216c-.01.114-.017.224-.025.335a15.903 15.903 0 00-.029.525l-.008.186-.006.313-.003.165c-.001.104 0 .204.001.303l.001.144.008.278.004.137.013.259.006.117c.005.085.011.163.018.241l.007.097.021.226.007.072.023.203.006.053a18.146 18.146 0 00.027.211c.017.117.031.204.042.264l.003.018.012.063.5 2.573 1.341-2.252c4.445-7.467 10.111-9.137 13.61-9.374a13.316 13.316 0 012.467.055v8.818l4.001-4.02z"
                        }
                    })]))
                }
            },
            S = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "13",
                            height: "13",
                            xmlns: "http://www.w3.org/2000/svg",
                            "xmlns:xlink": "http://www.w3.org/1999/xlink"
                        }, u),
                        ...d
                    }, a.concat([n("defs", [n("path", {
                        attrs: {
                            id: "a",
                            d: "M0 0h12.22v12.22H0z"
                        }
                    })]), n("g", {
                        attrs: {
                            fill: "none",
                            "fill-rule": "evenodd"
                        }
                    }, [n("mask", {
                        attrs: {
                            id: "b",
                            fill: "#fff"
                        }
                    }, [n("use", {
                        attrs: {
                            "xlink:href": "#a"
                        }
                    })]), n("path", {
                        attrs: {
                            d: "M11.438 0H.781A.78.78 0 000 .78v10.66c0 .43.35.78.78.78h10.66c.43 0 .78-.35.78-.78V.78a.782.782 0 00-.782-.78",
                            fill: "#DB4437",
                            mask: "url(#b)"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M9.714 8.321L8.321 9.713a.169.169 0 01-.243 0L6.11 7.745 4.14 9.714a.17.17 0 01-.243 0L2.504 8.32a.172.172 0 010-.243L4.472 6.11 2.502 4.14a.172.172 0 010-.243l1.395-1.393a.17.17 0 01.242 0l1.97 1.969 1.968-1.97a.17.17 0 01.243 0l1.393 1.394a.17.17 0 010 .243L7.745 6.11l1.97 1.968a.172.172 0 010 .243",
                            fill: "#FFF",
                            mask: "url(#b)"
                        }
                    })])]))
                }
            },
            O = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#fff",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M10 20a9.935 9.935 0 007.071-2.93A9.934 9.934 0 0020 10a9.934 9.934 0 00-2.929-7.071A9.936 9.936 0 0010.001 0H10a9.934 9.934 0 00-7.071 2.93A9.935 9.935 0 000 10c0 2.671 1.04 5.183 2.929 7.071A9.936 9.936 0 009.999 20zM3.635 3.636A8.942 8.942 0 0110 1c2.405 0 4.665.936 6.365 2.636A8.94 8.94 0 0119 10a8.942 8.942 0 01-2.635 6.364A8.942 8.942 0 0110 19.001a8.942 8.942 0 01-6.365-2.636A8.94 8.94 0 011 10c0-2.405.935-4.665 2.635-6.365z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M15.667 15.96H4.583c-.35 0-.583-.238-.583-.597V4.598C4 4.239 4.233 4 4.583 4h4.084c.35 0 .583.24.583.598v.598h6.417c.35 0 .583.24.583.598v2.392c0 .36-.233.598-.583.598s-.584-.239-.584-.598V6.392H8.667c-.35 0-.584-.24-.584-.598v-.598H5.167v9.569h10.5c.35 0 .583.239.583.598s-.233.598-.583.598z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M15.667 15.96H4.583a.526.526 0 01-.466-.238C4 15.542 4 15.422 4 15.243l1.75-7.176a.571.571 0 01.583-.479h11.084c.175 0 .35.06.466.24.117.179.117.298.117.478l-1.75 7.176a.571.571 0 01-.583.479zM5.342 14.766H15.2l1.458-5.98H6.8l-1.458 5.98z"
                        }
                    })])]))
                }
            },
            k = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            xmlns: "http://www.w3.org/2000/svg",
                            width: "20",
                            height: "20"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "evenodd"
                        }
                    }, [n("path", {
                        attrs: {
                            "fill-rule": "nonzero",
                            d: "M10 20a9.935 9.935 0 007.071-2.93A9.934 9.934 0 0020 10a9.934 9.934 0 00-2.929-7.071A9.936 9.936 0 0010.001 0H10a9.934 9.934 0 00-7.071 2.93A9.935 9.935 0 000 10a9.932 9.932 0 002.929 7.071A9.936 9.936 0 009.999 20zM3.635 3.636A8.942 8.942 0 0110 1c2.405 0 4.665.936 6.365 2.636A8.94 8.94 0 0119 10a8.942 8.942 0 01-2.635 6.364A8.942 8.942 0 0110 19.001a8.942 8.942 0 01-6.365-2.636A8.94 8.94 0 011 10a8.94 8.94 0 012.635-6.365z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M6 4h5.76l3.49 3.33v9.13H6V4zm1 1v10.46h7.25V7.33L11.76 5H7z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M11.5 4.5v3h3z"
                        }
                    })])]))
                }
            },
            C = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M10 0C4.477 0 0 4.477 0 10s4.477 10 10 10 10-4.477 10-10S15.523 0 10 0zm0 19a9 9 0 110-18 9 9 0 010 18z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M6.992 15l8-5-8-5v10zm1-8l5 3-5 3V7z"
                        }
                    })])]))
                }
            },
            D = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            xmlns: "http://www.w3.org/2000/svg",
                            width: "20",
                            height: "20"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "evenodd"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M10 20a9.935 9.935 0 007.071-2.93A9.934 9.934 0 0020 10a9.934 9.934 0 00-2.929-7.071A9.936 9.936 0 0010.001 0H10a9.934 9.934 0 00-7.071 2.93A9.935 9.935 0 000 10c0 2.671 1.04 5.183 2.929 7.071A9.936 9.936 0 009.999 20zM3.635 3.636A8.942 8.942 0 0110 1c2.405 0 4.665.936 6.365 2.636A8.94 8.94 0 0119 10a8.942 8.942 0 01-2.635 6.364A8.942 8.942 0 0110 19.001a8.942 8.942 0 01-6.365-2.636A8.94 8.94 0 011 10c0-2.405.935-4.665 2.635-6.365z",
                            "fill-rule": "nonzero"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M8.707 9l4.95 4.95-.707.706L8 9.706z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M12.95 9L8 13.95l.707.706 4.95-4.95z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M6 4h5.76l3.49 3.33v9.13H6V4zm1 1v10.46h7.25V7.33L11.76 5H7z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M11.5 4.5v3h3z"
                        }
                    })])]))
                }
            },
            E = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "evenodd"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M10 20a9.935 9.935 0 007.071-2.93A9.934 9.934 0 0020 10a9.934 9.934 0 00-2.929-7.071A9.936 9.936 0 0010.001 0H10a9.934 9.934 0 00-7.071 2.93A9.935 9.935 0 000 10c0 2.671 1.04 5.183 2.929 7.071A9.936 9.936 0 009.999 20zM3.635 3.636A8.942 8.942 0 0110 1c2.405 0 4.665.936 6.365 2.636A8.94 8.94 0 0119 10a8.942 8.942 0 01-2.635 6.364A8.942 8.942 0 0110 19.001a8.942 8.942 0 01-6.365-2.636A8.94 8.94 0 011 10c0-2.405.935-4.665 2.635-6.365z",
                            "fill-rule": "nonzero"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M8 8h7v1H8zM8 5h7v1H8zM5 5h1v1H5zM5 8h1v1H5zM8.707 11l4.95 4.95-.707.706L8 11.706z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M12.95 11L8 15.95l.707.706 4.95-4.95z"
                        }
                    })])]))
                }
            },
            P = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "evenodd"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M10 20a9.935 9.935 0 007.071-2.93A9.934 9.934 0 0020 10a9.934 9.934 0 00-2.929-7.071A9.935 9.935 0 0010.001 0H10a9.934 9.934 0 00-7.071 2.93A9.935 9.935 0 000 10c0 2.671 1.04 5.183 2.929 7.071A9.935 9.935 0 009.999 20zM3.636 3.636A8.942 8.942 0 0110 1c2.405 0 4.665.936 6.364 2.636A8.941 8.941 0 0119 10a8.942 8.942 0 01-2.636 6.364A8.941 8.941 0 0110 19.001a8.941 8.941 0 01-6.364-2.636A8.941 8.941 0 011 10c0-2.405.936-4.665 2.636-6.365z",
                            "fill-rule": "nonzero"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M13.536 5.757l.707.707-7.779 7.779-.707-.707z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M14.243 13.536l-.707.707-7.779-7.779.707-.707z"
                        }
                    })])]))
                }
            },
            A = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M8 5h1v10H8zM11 5h1v10h-1z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M10 0a9.933 9.933 0 00-7.07 2.93A9.931 9.931 0 000 10c0 2.67 1.04 5.182 2.93 7.07A9.932 9.932 0 0010 20c2.67 0 5.182-1.04 7.07-2.93A9.932 9.932 0 0020 10c0-2.67-1.04-5.182-2.93-7.07A9.932 9.932 0 0010 0zm6.364 16.364A8.94 8.94 0 0110 19a8.939 8.939 0 01-6.364-2.637A8.938 8.938 0 011 10a8.94 8.94 0 012.636-6.364A8.94 8.94 0 0110 1c2.404 0 4.664.937 6.364 2.637A8.938 8.938 0 0119 10a8.94 8.94 0 01-2.636 6.364z"
                        }
                    })])]))
                }
            },
            x = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 19c-4.969 0-9-4.031-9-9s4.031-9 9-9 9 4.031 9 9-4.031 9-9 9z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M15.692 6.308a.369.369 0 00-.461.288L15 7.52a5.545 5.545 0 00-5-3.096A5.58 5.58 0 004.423 10a5.58 5.58 0 0010.98 1.404.37.37 0 00-.268-.462.37.37 0 00-.462.27A4.837 4.837 0 0110 14.808 4.81 4.81 0 015.192 10 4.81 4.81 0 0110 5.192c2 0 3.77 1.212 4.48 3.058l-1.442-.346a.369.369 0 00-.461.288.369.369 0 00.288.462l2.135.52c.038 0 .058.018.096.018a.37.37 0 00.366-.288l.519-2.096c.038-.231-.077-.443-.289-.5z"
                        }
                    })])]))
                }
            },
            T = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "9",
                            height: "12",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#F8E71C",
                            "fill-rule": "evenodd"
                        }
                    }, [n("rect", {
                        attrs: {
                            x: "5",
                            width: "3.5",
                            height: "12",
                            rx: "1"
                        }
                    }), n("rect", {
                        attrs: {
                            width: "3.5",
                            height: "12",
                            rx: "1"
                        }
                    })])]))
                }
            },
            M = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: ["error_icon", r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            class: "error_icon",
                            baseProfile: "basic",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 131.7 114.2"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            fill: "#DB4437",
                            d: "M0 114.1L66 .1l65.7 114z"
                        }
                    }), n("linearGradient", {
                        attrs: {
                            id: "a",
                            gradientUnits: "userSpaceOnUse",
                            x1: "64.419",
                            y1: "88.756",
                            x2: "91.92",
                            y2: "116.257"
                        }
                    }, [n("stop", {
                        attrs: {
                            offset: "0",
                            "stop-color": "#b44437"
                        }
                    }), n("stop", {
                        attrs: {
                            offset: ".727",
                            "stop-color": "#db4437"
                        }
                    })]), n("path", {
                        attrs: {
                            fill: "url(#a)",
                            d: "M59.8 96.1l17.9 18 23.6-.5-29.5-29.5"
                        }
                    }), n("linearGradient", {
                        attrs: {
                            id: "b",
                            gradientUnits: "userSpaceOnUse",
                            x1: "66.79",
                            y1: "61.134",
                            x2: "103.459",
                            y2: "97.803"
                        }
                    }, [n("stop", {
                        attrs: {
                            offset: "0",
                            "stop-color": "#b94437"
                        }
                    }), n("stop", {
                        attrs: {
                            offset: ".221",
                            "stop-color": "#bf4437"
                        }
                    }), n("stop", {
                        attrs: {
                            offset: ".525",
                            "stop-color": "#d14437"
                        }
                    }), n("stop", {
                        attrs: {
                            offset: ".658",
                            "stop-color": "#db4437"
                        }
                    })]), n("path", {
                        attrs: {
                            fill: "url(#b)",
                            d: "M59.8 72.1l41.5 41.5L119 95.9 71.8 48.1z"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#FFF",
                            d: "M59.8 48.1h12v24h-12zM59.8 84.1h12v12h-12z"
                        }
                    })]))
                }
            },
            I = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            xmlns: "http://www.w3.org/2000/svg",
                            width: "12",
                            height: "12"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M1 1l10 10m0-10L1 11",
                            fill: "none",
                            "fill-rule": "evenodd",
                            stroke: "#E84118",
                            "stroke-width": "2"
                        }
                    })]))
                }
            },
            L = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            xmlns: "http://www.w3.org/2000/svg",
                            width: "14",
                            height: "14"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M7 0v8M4 4l3 5 3-5m-9 6.078V12a1 1 0 001 1h10a1 1 0 001-1v-2",
                            fill: "none",
                            "fill-rule": "evenodd",
                            stroke: "#FFF",
                            "stroke-width": "2"
                        }
                    })]))
                }
            },
            j = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: ["icon_fill_repaint", r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            class: "icon_fill_repaint",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 60 60"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M45.563 29.174l-22-15A1 1 0 0022 15v30a.999.999 0 001.563.826l22-15a1 1 0 000-1.652zM24 43.107V16.893L43.225 30 24 43.107z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M30 0C13.458 0 0 13.458 0 30s13.458 30 30 30 30-13.458 30-30S46.542 0 30 0zm0 58C14.561 58 2 45.439 2 30S14.561 2 30 2s28 12.561 28 28-12.561 28-28 28z"
                        }
                    })]))
                }
            },
            R = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: ["icon_fill_repaint", r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            class: "icon_fill_repaint",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 60 60"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M30 0C13.458 0 0 13.458 0 30s13.458 30 30 30 30-13.458 30-30S46.542 0 30 0zm0 58C14.561 58 2 45.439 2 30S14.561 2 30 2s28 12.561 28 28-12.561 28-28 28z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M33 46h8V14h-8v32zm2-30h4v28h-4V16zM19 46h8V14h-8v32zm2-30h4v28h-4V16z"
                        }
                    })]))
                }
            },
            z = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "18",
                            height: "17",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#B6BDC4",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M16.341 7.247a1 1 0 011.318 1.506L9 16.329.341 8.753A1 1 0 011.66 7.247L9 13.671l7.341-6.424z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M16.341.247a1 1 0 111.318 1.506L9 9.329.341 1.753A1 1 0 011.66.247L9 6.671 16.341.247z"
                        }
                    })])]))
                }
            },
            B = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "88",
                            height: "64",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            "fill-rule": "nonzero",
                            fill: "none"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M10.067 20.201c-8.192 6.693-13.899 15.168-6.95 23.412 6.95 8.244 17.319 2.022 30.659 10.168 13.34 8.147 31.887 14.629 43.965 3.371 12.078-11.258 12.078-31.549 3.496-43.613-8.582-12.065-25.262-19.332-35.705-7.57C35.088 17.73 20.012 12.076 10.067 20.2z",
                            fill: "#E9EAEB"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M39.13 38.34a23.3 23.3 0 00-1.2 7.43 10.4 10.4 0 00-1.05.86c-2.19-1-6.47-1.7-11.37 1.37l-1.06.64a3 3 0 01-4.23-1.23l-2.85-5.66A2 2 0 0118.44 39c4.5-1.66 6.06 3 6.06 3a16 16 0 0114.62-3.66h.01z",
                            fill: "#E9EAEB"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M65.71 29.8l-.43.92a2.93 2.93 0 01-2.49-.64c-3.3-2.74-2.85-2.37-3-2.45A11 11 0 0062.24 25l1.93.83a3 3 0 011.54 3.97z",
                            fill: "#BCBCBC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M67.54 51.28c-3.61 4.32-8.48 4-12.7.37a3 3 0 001.46-1.46l.85-1.85a7.1 7.1 0 004.27 2.09 4 4 0 003-1.71 2.76 2.76 0 00.71-2.38c-.35-2-2.51-4.15-4.46-5.71l1.73-3.72c5.31 3.88 9.23 9.45 5.14 14.37z",
                            fill: "#607D8B"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M45 26.5a53.85 53.85 0 00-3.9 6.89A15.67 15.67 0 0138 34a3 3 0 01-2.68-1.66l-4-8a3 3 0 011.34-4A2.93 2.93 0 0134 20a3 3 0 012.68 1.66l3 5.9 5.23-1.16a.41.41 0 00.09.1z",
                            fill: "#E9EAEB"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M62.61 36.53l-.17.37-1.73 3.72-3.56 7.71-.85 1.85a3 3 0 01-4.07 1.43L50 50.48c1.52-.71 3.46-2.41 4-6.48.51-3.57 2.84-6.88 5-9.26a9 9 0 003.61 1.79z",
                            fill: "#BCBCBC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M73.44 33.63L69 35.68a9 9 0 01-10-.94c-2.17 2.38-4.5 5.69-5 9.26-.58 4.07-2.52 5.77-4 6.48a5.25 5.25 0 01-2 .52s-8.5 0-11 7l-.48 1.11a3 3 0 01-4.16 1.46l-5.6-3a2 2 0 01-.76-2.82c2.73-4.31 7-.75 7-.75a11.13 11.13 0 013.87-7.37 10.4 10.4 0 011.05-.86 23.3 23.3 0 011.2-7.43 41.53 41.53 0 011.93-5A53.85 53.85 0 0145 26.5a11 11 0 0012.22 2.68 10.46 10.46 0 002.64-1.55c.12.08-.33-.29 3 2.45a3 3 0 003.35.33l4.42-2a3 3 0 012.88 5.26l-.07-.04z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M74.63 29.56a3 3 0 00-4.07-1.19h-.07a3 3 0 011.14 1.16 3 3 0 01-1.19 4.07L66 35.68a8.87 8.87 0 01-2.81 1 9 9 0 005.81-1l4.42-2.05a3 3 0 001.21-4.07zM56 34.74c-2.17 2.38-4.5 5.69-5 9.26-.58 4.07-2.52 5.77-4 6.48a5.25 5.25 0 01-2 .52s-8.5 0-11 7l-.48 1.11a3 3 0 01-1.26 1.41h.1a3 3 0 004.16-1.46L37 58c2.5-7 11-7 11-7a5.25 5.25 0 002-.52c1.52-.71 3.46-2.41 4-6.48a17.26 17.26 0 014-8 8.77 8.77 0 01-2-1.26z",
                            fill: "#BCBCBC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M64 19a10.89 10.89 0 01-1.76 6 11 11 0 01-2.42 2.67 10.46 10.46 0 01-2.64 1.55A11 11 0 0145 26.5a.41.41 0 01-.09-.1 10 10 0 01-1.47-2C49.58 28.21 59 24.91 59 19c0-6.06-9.63-9.1-15.59-5.36A11 11 0 0164 19z",
                            fill: "#FFDC00"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M53 8a11.31 11.31 0 00-1.55.11 11 11 0 015.37 19.52 10.46 10.46 0 01-2.64 1.55 11.13 11.13 0 01-2.67.72c1.92.27 3.878.021 5.67-.72a10.46 10.46 0 002.64-1.55A11 11 0 0062.24 25 11 11 0 0053 8z",
                            fill: "#FEC108"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M59 19c0 5.91-9.42 9.21-15.6 5.36-.18-.32-.34-.65-.49-1a10.86 10.86 0 01.51-9.72C49.37 9.9 59 12.94 59 19z",
                            fill: "#02A9F4"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M48 12.1c4.26.52 8 3.12 8 6.9 0 3.78-3.71 6.39-8 6.92 5.4.63 11-2.36 11-6.92 0-4.56-5.68-7.51-11-6.9z",
                            fill: "#0377BC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M34 3.564V16H18.782a.777.777 0 01-.56-1.321l4.353-4.353a.777.777 0 000-1.088l-4.353-4.352a.777.777 0 01.56-1.322H34z",
                            fill: "#F44335"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#C81E1E",
                            d: "M29.5 4H34v12h-4.5z"
                        }
                    }), n("g", [n("path", {
                        attrs: {
                            d: "M70.13 27.46L67 28.94a4 4 0 00-2.38-4.07l-.91-.39a12 12 0 10-20.61 1.29l-2.92.65-2.61-5.21a3.94 3.94 0 00-2.31-2 2 2 0 00-.26-.06V4a1 1 0 00-1-1H18.21a1.5 1.5 0 00-1.06 2.56L20.59 10l-3.44 4.44A1.5 1.5 0 0018.21 17H33v2.13a4 4 0 00-2.57 5.66l4 8a4 4 0 004.45 2.13l.5-.12c-.34.81-.64 1.6-.91 2.38a17.07 17.07 0 00-13.63 3.25 5.24 5.24 0 00-6.75-2.38 3 3 0 00-1.61 4.14l2.83 5.67a4 4 0 003.58 2.21A5.53 5.53 0 0026 48.85a11.55 11.55 0 019-1.8 11.88 11.88 0 00-2.74 5.3c-2.71-1.37-5.36-.87-7.09 1.86a3 3 0 001.12 4.29c6 3.15 6.14 3.42 7.47 3.42a4 4 0 003.67-2.41l.51-1.17C40.17 52.1 47.68 52 48 52a5.75 5.75 0 001.91-.42c1.85.93 2.88 1.7 4.71 1.19 4.57 3.62 9.83 3.74 13.68-.85a7.74 7.74 0 001.79-6.45c-.54-3-2.72-5.68-5-7.69a9.94 9.94 0 004.33-1.19l4.48-2.08a4 4 0 00-.77-7.35 4 4 0 00-3 .3zm-6.35-.75a2 2 0 011 2.67l-.18.4c-.87 0-1.19-.47-3.26-2.18a10.24 10.24 0 001.23-1.4l1.21.51zm-2.89-13.86a10 10 0 01-14.25 13.84C56.72 28.86 64 19.88 57.69 14c-2.82-2.65-7.23-3.49-11.07-2.66a10 10 0 0114.27 1.51zM44.17 23.63c-.12-.22-.25-.44-.35-.67a10 10 0 01.32-8.58C49.67 11.12 58 14 58 19s-8.17 7.91-13.83 4.63zM19.41 15l2.94-3.94a1.49 1.49 0 000-2.12L19.41 5H33v10H19.41zm19 18a2 2 0 01-2.22-1.06l-4-8a2 2 0 013.58-1.78l3 5.9a1 1 0 001.11.53l3.06-.68c-.75 1.24-1.65 2.84-2.53 4.66l-2 .43zM25 47.14c-1.16.7-1.67 1.13-2.65.85A2 2 0 0121.1 47l-2.83-5.7a1 1 0 01.52-1.38 3.36 3.36 0 012.73 0 4.56 4.56 0 012 2.42 1 1 0 001.61.43 15.08 15.08 0 0112.74-3.67 24.23 24.23 0 00-.93 6.13l-.28.23c-1.92-.7-6.35-1.64-11.66 1.68zm27.7 3.59l-.7-.36a9.59 9.59 0 003-6.23c.44-3.08 2.39-6 4.16-8 .65.415 1.35.75 2.08 1l-5.85 12.63a2 2 0 01-2.71.96h.02zm11.5-4.22a1.78 1.78 0 01-.49 1.57c-1 1.21-1.76 1.35-2.27 1.35a5.51 5.51 0 01-3-1.36l2.69-5.83c1.75 1.61 2.87 3.11 3.05 4.27h.02zm2.59 4.13c-2.88 3.44-6.62 3.6-10.28 1a5.37 5.37 0 001-1.74C60.4 52 63 52 65.23 49.36c2.52-3-.28-6.46-3.29-9l.88-1.89c4.23 3.41 7.37 8.05 3.95 12.17h.02zm7.15-19.08a1.92 1.92 0 01-.9 1.16l-4.5 2.08a8 8 0 01-8.89-.8 1 1 0 00-1.38.1c-2.09 2.29-4.7 5.85-5.26 9.79-.52 3.62-2.17 5.1-3.47 5.71A4.24 4.24 0 0148 50c-.38 0-9.24.09-11.92 7.6l-.48 1.12a2 2 0 01-2.77 1l-5.6-3a1 1 0 01-.37-1.44A3.18 3.18 0 0129 53.65a5 5 0 013.34 1.12A1 1 0 0034 54.1C34.91 45 47 43 47.15 43a1.011 1.011 0 10-.3-2A24.73 24.73 0 0039 43.84c.47-5.35 3.25-11.2 6.14-15.78a11.94 11.94 0 0014.64.82l2.36 2a3.9 3.9 0 003.14.88c.62 0 2-.73 5.76-2.47a2 2 0 012.88 2.27h.02z",
                            fill: "#000"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M51 15a1 1 0 00-1-1c-2.08 0-6 1-6 5a1 1 0 002 0c0-2.94 3.82-3 4-3a1 1 0 001-1zM23 25a1 1 0 00-1 1v1h-1a1 1 0 000 2h1v1a1 1 0 002 0v-1h1a1 1 0 000-2h-1v-1a1 1 0 00-1-1z",
                            fill: "#000"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M29.828 7.172a1.333 1.333 0 00-1.885 0L27 8.114l-.943-.942a1.333 1.333 0 00-1.885 1.885l.942.943-.942.943a1.333 1.333 0 101.885 1.885l.943-.942.943.942a1.333 1.333 0 001.885-1.885L28.886 10l.942-.943c.521-.52.521-1.365 0-1.885z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M50 58h-1v-1a1 1 0 00-2 0v1h-1a1 1 0 000 2h1v1a1 1 0 002 0v-1h1a1 1 0 000-2zM69 13a1 1 0 001-1v-1h1a1 1 0 000-2h-1V8a1 1 0 00-2 0v1h-1a1 1 0 000 2h1v1a1 1 0 001 1z",
                            fill: "#000"
                        }
                    })])])]))
                }
            },
            F = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "79",
                            height: "80",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            "fill-rule": "nonzero",
                            fill: "none"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M76.508 61h-4.984a2.497 2.497 0 002.492-2.5c0-1.382-1.116-2.5-2.492-2.5h-4.983a2.497 2.497 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5h-7.476a2.497 2.497 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5H72.77a2.497 2.497 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5h-6.23a2.496 2.496 0 002.492-2.5c0-1.38-1.115-2.5-2.492-2.5H64.05a2.496 2.496 0 002.491-2.5c0-1.38-1.115-2.5-2.491-2.5h12.459A2.496 2.496 0 0079 28.5c0-1.38-1.116-2.5-2.492-2.5h-4.984a2.496 2.496 0 002.492-2.5c0-1.38-1.116-2.5-2.492-2.5H66.54a2.496 2.496 0 002.492-2.5c0-1.38-1.116-2.5-2.492-2.5h-3.737a2.496 2.496 0 002.492-2.5c0-1.38-1.116-2.5-2.492-2.5H25.426a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h-8.721a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h-2.492a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h7.476a2.496 2.496 0 00-2.492 2.5c0 1.38 1.115 2.5 2.492 2.5H7.984a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h6.23a2.496 2.496 0 00-2.493 2.5c0 1.38 1.116 2.5 2.492 2.5h-6.23a2.496 2.496 0 00-2.491 2.5c0 1.38 1.116 2.5 2.492 2.5H5.492A2.495 2.495 0 003 48.5C3 49.88 4.116 51 5.492 51h6.23a2.495 2.495 0 00-2.492 2.5c0 1.38 1.115 2.5 2.491 2.5H9.23a2.495 2.495 0 00-2.492 2.5c0 1.38 1.115 2.5 2.492 2.5h12.459a2.495 2.495 0 00-2.492 2.5c0 1.38 1.115 2.5 2.492 2.5h-4.984a2.495 2.495 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h42.36a2.497 2.497 0 002.492-2.5c0-1.382-1.115-2.5-2.492-2.5h17.443A2.497 2.497 0 0079 63.5c0-1.382-1.116-2.5-2.492-2.5z",
                            fill: "#656D78",
                            opacity: ".146"
                        }
                    }), n("g", {
                        attrs: {
                            fill: "#3A3847"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M68.334 62.458a.63.63 0 01-.633-.625.62.62 0 01.62-.624h.013a.625.625 0 110 1.25zM19.45 1.25a.63.63 0 01-.633-.625.62.62 0 01.62-.625h.013a.626.626 0 110 1.25zM47.024 3.748a.63.63 0 01-.633-.625.62.62 0 01.62-.625h.013c.345 0 .627.28.627.625a.626.626 0 01-.627.624zM.649 18.737a.63.63 0 01-.633-.624.62.62 0 01.62-.625h.013a.626.626 0 110 1.25zM10.675 52.465a.631.631 0 01-.633-.625c0-.346.274-.624.62-.624h.013a.625.625 0 110 1.249zM41.947 78.697a.631.631 0 01-.633-.624c0-.347.274-.625.62-.625h.013a.625.625 0 110 1.249zM72.092 79.946a.63.63 0 01-.633-.624.62.62 0 01.62-.625h.013a.625.625 0 110 1.25zM58.307 46.22a.631.631 0 01-.633-.625.62.62 0 01.62-.625h.013a.625.625 0 110 1.25zM73.346 41.222a.63.63 0 01-.632-.625.62.62 0 01.619-.624h.013c.346 0 .627.279.627.624a.626.626 0 01-.627.625zM65.826 58.708a.63.63 0 01-.633-.624.62.62 0 01.62-.625h.013a.625.625 0 110 1.25z"
                        }
                    })]), n("path", {
                        attrs: {
                            d: "M27.458 19.107c.214.215.39.443.542.694-.492.82-1.3 1.856-2.322 2.877-1.021 1.022-2.056 1.83-2.877 2.322a3.591 3.591 0 01-.694-.542 3.786 3.786 0 010-5.35 3.786 3.786 0 015.35 0z",
                            fill: "#AC92EC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M23.41 20.428a3.643 3.643 0 014.456-.535l.008-.012a3.457 3.457 0 00-.523-.67 3.65 3.65 0 00-5.158 0 3.65 3.65 0 000 5.16c.206.206.426.376.669.522l.012-.008a3.643 3.643 0 01.535-4.457z",
                            opacity: ".3",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M28.51 20a3.27 3.27 0 01-.471 4.04 3.27 3.27 0 01-4.039.47c.712-.427 1.61-1.128 2.496-2.014.886-.886 1.587-1.784 2.013-2.496z",
                            fill: "#AC92EC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M20.477 60.527c.704.69.691 1.82 0 2.525-.702.69-7.728 6.582-8.419 5.892-.702-.702 5.192-7.727 5.895-8.417a1.775 1.775 0 012.524 0z",
                            fill: "#FFCE54"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M20.723 62.914c.721-.736.734-1.916 0-2.638a1.852 1.852 0 00-2.634 0c-.735.722-6.888 8.059-6.154 8.792.72.721 8.055-5.433 8.788-6.154zM8.417 72.587c-2.188-2.188 4.847-12.77 7.036-14.946 2.175-2.188 5.718-2.188 7.905 0a5.582 5.582 0 010 7.908c-2.187 2.188-12.754 9.214-14.941 7.038z",
                            fill: "#FC6E51"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M23.278 57.657c-1.252-1.245-2.946-1.754-4.575-1.57 1.217.134 2.4.64 3.333 1.57a5.526 5.526 0 010 7.857c-1.776 1.767-9.073 6.704-12.92 7.336 3.203.625 12.165-5.35 14.162-7.336a5.525 5.525 0 000-7.857z",
                            opacity: ".3",
                            fill: "#000"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M9.664 72.507C7.5 70.333 14.46 59.82 16.626 57.657c.92-.93 2.088-1.436 3.29-1.571-1.612-.184-3.288.326-4.52 1.57C13.23 59.82 6.27 70.334 8.434 72.508c.406.406 1.105.49 1.987.343-.302-.06-.57-.157-.757-.343z",
                            opacity: ".5",
                            fill: "#FFF"
                        }
                    }), n("g", {
                        attrs: {
                            fill: "#A0D468"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M70.988 55.755a1.32 1.32 0 011.314 1.314c0 .724-.592 1.315-1.314 1.315-.723 0-1.314-.59-1.314-1.315a1.32 1.32 0 011.314-1.314z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M72.302 57.07a1.32 1.32 0 00-1.314-1.315 1.32 1.32 0 00-1.314 1.314c0 .724.591 1.315 1.314 1.315.722 0 1.314-.59 1.314-1.315zm-3.286-3.943a5.906 5.906 0 015.914 5.914 5.914 5.914 0 01-11.827 0 5.905 5.905 0 015.913-5.914z"
                        }
                    })]), n("path", {
                        attrs: {
                            d: "M64.306 59.78a5.443 5.443 0 015.45-5.452c1.2 0 2.296.395 3.193 1.048a5.425 5.425 0 00-4.404-2.259 5.443 5.443 0 00-5.45 5.45c0 1.818.896 3.41 2.258 4.401a5.398 5.398 0 01-1.047-3.189z",
                            opacity: ".5",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M72.654 57.201a5.441 5.441 0 01-5.45 5.451c-1.199 0-2.295-.395-3.192-1.045a5.443 5.443 0 009.855-3.194c0-1.817-.897-3.41-2.258-4.398a5.39 5.39 0 011.045 3.186z",
                            opacity: ".2",
                            fill: "#000"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M55.68 14.389c4.448-4.424 12.473-5.3 14.25-3.537 1.788 1.775 1.788 8.836-3.566 14.148l-.882-.887-8.92-8.837L55 15.064l.68-.675z",
                            fill: "#FED012"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M69.92 10.581c-.18-.179-.436-.323-.73-.446 1.186 2.581.65 8.713-4.1 13.467l.373.372.884.897c5.365-5.365 5.365-12.498 3.572-14.29z",
                            opacity: ".2",
                            fill: "#000"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M56.922 15.893l.006-.007c3.847-4.128 10.465-5.27 13-4.127-.145-.34-.315-.629-.51-.838-1.709-1.828-9.425-.92-13.701 3.669-.157.168-.375.403-.654.7l1.502.22.357.383z",
                            opacity: ".3",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M56.83 25.18a4 4 0 010 5.65 4.011 4.011 0 01-5.66 0 4 4 0 010-5.65 3.988 3.988 0 015.66 0z",
                            fill: "#5D9CEC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M51.397 26.36a3.58 3.58 0 014.479-.546 3.587 3.587 0 00-5.696-.697 3.79 3.79 0 000 5.273c.21.214.445.386.687.537-.852-1.436-.682-3.328.53-4.566z",
                            opacity: ".5",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M47.831 33.172a4.007 4.007 0 010 5.657 4.007 4.007 0 01-5.661 0 4.004 4.004 0 010-5.657 4.005 4.005 0 015.661 0z",
                            fill: "#5D9CEC"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M43.415 34.444a3.64 3.64 0 014.479-.535 3.628 3.628 0 00-.526-.682 3.643 3.643 0 00-5.17 0 3.65 3.65 0 000 5.159c.21.209.444.377.687.525a3.644 3.644 0 01.53-4.467z",
                            opacity: ".5",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M32.6 37.894l.4.4A2511.998 2511.998 0 0025.306 46l-.013-.012C24.043 43.87 18 42.768 18 42.768c8.845-8.86 14.6-4.874 14.6-4.874z",
                            fill: "#E6E9ED"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M43.112 48.486S47.058 54.211 38.314 63c0 0-1.138-6.236-3.314-7.332 1.903-1.916 4.6-4.63 7.63-7.668l.482.486z",
                            fill: "#CCD1D9"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M31.36 60l-1.721-1.76-.878.888s-.855.872-4.308-2.66c-3.453-3.52-2.587-4.404-2.587-4.404l.867-.875L21 49.417s1.087-1.109 2.855-2.908c1.88-1.933 4.528-4.641 7.505-7.674C39.754 30.237 51.358 18.37 54.652 15l.855.886 8.639 8.823.854.886c-2.612 2.67-14.398 14.725-23.293 23.834A5897.307 5897.307 0 0031.36 60zm23.292-29.114a3.804 3.804 0 000-5.291 3.597 3.597 0 00-5.186 0 3.804 3.804 0 000 5.291 3.617 3.617 0 005.186 0zm-8.625 8.822a3.803 3.803 0 000-5.29 3.615 3.615 0 00-5.186 0 3.8 3.8 0 000 5.29 3.617 3.617 0 005.186 0z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M65.073 24.187l-1.112-1.15.745.783a53484.825 53484.825 0 00-23.325 24.143 6102.681 6102.681 0 00-7.539 7.787c-1.76 1.822-2.823 2.92-2.823 2.92l1.222 1.265 2.823-2.92c1.88-1.946 4.545-4.702 7.54-7.788C51.51 40 63.312 27.79 65.927 25.084l-.855-.897z",
                            opacity: ".2",
                            fill: "#000"
                        }
                    }), n("g", {
                        attrs: {
                            fill: "#3A3847"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M37.924 64.026a.617.617 0 01-.61-.508c-.416-2.27-1.589-6.12-2.963-6.837a.625.625 0 01-.369-.566c0-.438.507-.747.902-.554 1.841.921 2.94 4.628 3.403 6.579 7.21-7.742 4.071-12.606 3.93-12.816a.618.618 0 011.019-.704c.173.252 4.14 6.223-4.874 15.224a.616.616 0 01-.438.182zM24.122 46.2a.621.621 0 01-.533-.302c-.797-1.35-4.59-2.488-6.795-2.89a.622.622 0 01-.48-.422.624.624 0 01.154-.624c9.014-9.015 14.984-5.059 15.235-4.886a.618.618 0 01-.701 1.02c-.216-.144-5.08-3.264-12.829 3.941 1.898.447 5.453 1.492 6.482 3.23a.62.62 0 01-.533.933zM11.846 69.345a.842.842 0 01-.614-.24.852.852 0 01-.242-.626c.008-1.758 6.059-8.694 6.373-9.003.913-.931 2.553-.939 3.495.002.963.945.967 2.517.003 3.496-.072.073-7.226 6.37-9.015 6.37zm7.258-9.357c-.328 0-.636.128-.866.363-.885.868-4.735 5.604-5.76 7.505 1.91-1.03 6.633-4.896 7.508-5.757a1.26 1.26 0 00.36-.878 1.193 1.193 0 00-.36-.863 1.24 1.24 0 00-.882-.37z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M9.42 73.201c-.727 0-1.296-.198-1.69-.592-.398-.397-.599-.97-.597-1.705.006-3.878 5.71-12.17 7.603-14.052a6.12 6.12 0 014.368-1.813c1.654 0 3.208.646 4.378 1.816a6.14 6.14 0 011.816 4.373 6.145 6.145 0 01-1.816 4.374c-1.894 1.896-10.209 7.599-14.062 7.599zm9.684-16.924a4.892 4.892 0 00-3.493 1.45c-1.982 1.971-7.236 9.91-7.24 13.18-.002.391.077.67.233.826.153.153.428.23.816.23 3.248 0 11.205-5.254 13.187-7.236a4.913 4.913 0 001.453-3.499c0-1.32-.516-2.562-1.453-3.498a4.918 4.918 0 00-3.503-1.453zM31.747 59.594a.618.618 0 01-.438-1.056l2.86-2.86c1.906-1.906 4.605-4.604 7.64-7.626 9.022-9.036 20.98-20.994 23.629-23.642 2.228-2.228 3.723-5.064 4.21-7.985.437-2.618-.06-4.506-.707-5.153-.415-.415-1.447-.662-2.762-.662h-.007c-2.99.002-7.505 1.306-10.355 4.165l-.671.67a50623.13 50623.13 0 00-22.961 22.973c-3.02 3.01-5.706 5.693-7.612 7.613l-2.898 2.884a.618.618 0 11-.875-.875l2.898-2.884a2213.41 2213.41 0 017.613-7.614c8.515-8.528 19.618-19.631 22.961-22.974l.668-.668c3.117-3.125 7.886-4.526 11.23-4.528h.01c1.194 0 2.79.178 3.637 1.025 1.954 1.954 2.112 9.273-3.504 14.888-2.65 2.648-14.606 14.607-23.63 23.642-3.034 3.022-5.733 5.72-7.638 7.625l-2.86 2.86a.617.617 0 01-.438.182z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M26.486 54.345a.619.619 0 01-.438-1.056L36.547 42.79a.619.619 0 11.875.875L26.924 54.164a.616.616 0 01-.438.181zM24.74 52.6a.617.617 0 01-.437-.182L20.8 48.915a.618.618 0 11.875-.875l3.503 3.503a.619.619 0 01-.437 1.057zM31.747 59.594a.617.617 0 01-.437-.181l-3.503-3.504a.618.618 0 11.875-.875l3.503 3.504a.618.618 0 01-.438 1.056zM52.752 31.8a4.334 4.334 0 01-3.07-1.264 4.335 4.335 0 01-.003-6.126c1.65-1.648 4.503-1.644 6.139 0a4.335 4.335 0 01-.003 6.124 4.302 4.302 0 01-3.063 1.267zm0-7.43c-.827 0-1.607.326-2.197.915a3.098 3.098 0 000 4.374c1.177 1.165 3.218 1.167 4.385 0a3.098 3.098 0 000-4.374 3.06 3.06 0 00-2.188-.914zM43.997 40.553a4.331 4.331 0 01-4.337-4.33c0-1.157.45-2.244 1.268-3.061 1.648-1.636 4.485-1.635 6.135-.003a4.337 4.337 0 01.002 6.126 4.333 4.333 0 01-3.068 1.268zm0-7.421a3.095 3.095 0 00-3.099 3.092c0 .825.322 1.601.906 2.185 1.173 1.164 3.204 1.17 4.388-.002a3.095 3.095 0 00-.003-4.37 3.098 3.098 0 00-2.192-.905zM67.744 64.57a6.196 6.196 0 01-6.189-6.19 6.198 6.198 0 016.19-6.189 6.197 6.197 0 016.189 6.19 6.196 6.196 0 01-6.19 6.189zm0-11.141a4.957 4.957 0 00-4.951 4.951 4.956 4.956 0 004.951 4.952c2.731 0 4.952-2.22 4.952-4.952 0-2.73-2.22-4.951-4.952-4.951z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M69.601 58.38a1.858 1.858 0 01-1.856-1.856 1.86 1.86 0 011.856-1.857 1.86 1.86 0 011.857 1.857 1.858 1.858 0 01-1.857 1.856zm0-2.475a.62.62 0 00-.619.619.62.62 0 00.62.619.62.62 0 00.618-.62.62.62 0 00-.619-.618zM52.271 71.997a.618.618 0 01-.619-.619v-4.952a.62.62 0 011.238 0v4.952a.618.618 0 01-.619.619z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M53.509 69.521h-2.476a.618.618 0 110-1.238h2.476a.62.62 0 010 1.238zM27.514 76.948a.618.618 0 01-.619-.619v-4.951a.62.62 0 011.238 0v4.951a.618.618 0 01-.62.62z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M28.752 74.473h-2.476a.618.618 0 110-1.238h2.476a.62.62 0 010 1.238zM12.473 15.526a.619.619 0 01-.619-.62v-4.95a.619.619 0 111.238 0v4.951a.618.618 0 01-.619.619z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M13.711 13.05h-2.476a.619.619 0 110-1.238h2.476a.619.619 0 110 1.238zM37.417 11.342a.619.619 0 01-.62-.619V5.772a.619.619 0 111.239 0v4.951a.619.619 0 01-.62.619z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M38.655 8.866h-2.476a.619.619 0 110-1.237h2.476a.619.619 0 110 1.237zM3.994 39.813a.619.619 0 01-.619-.619v-4.951a.619.619 0 111.238 0v4.951a.619.619 0 01-.619.619z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M5.232 37.337H2.757a.619.619 0 110-1.238h2.475a.619.619 0 110 1.238zM25.044 26.194a4.308 4.308 0 01-2.276-.648 4.101 4.101 0 01-.792-.62 4.334 4.334 0 010-6.124c1.635-1.634 4.49-1.634 6.124 0 .242.242.446.503.624.799a4.299 4.299 0 01-.624 5.325 4.29 4.29 0 01-3.056 1.268zm-.006-7.421a3.07 3.07 0 00-2.187.904 3.097 3.097 0 000 4.374c.17.17.354.314.562.44 1.202.743 2.82.552 3.812-.44a3.07 3.07 0 00.443-3.804 3.069 3.069 0 00-2.63-1.474z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M21.84 26.094a1.01 1.01 0 01-.741-.288.619.619 0 01.783-.951c.092-.011.359-.068.911-.375.805-.484 1.79-1.279 2.686-2.175.896-.896 1.692-1.88 2.185-2.703.3-.538.355-.802.365-.894a.619.619 0 01.951-.784c.595.599.145 1.598-.245 2.297-.56.937-1.402 1.981-2.38 2.96-.979.977-2.023 1.82-2.943 2.37-.467.261-1.054.543-1.571.543zM65.009 24.587a.617.617 0 01-.438-.18l-8.764-8.753a.619.619 0 11.875-.875l8.764 8.752a.618.618 0 01-.437 1.056zM28.772 58.842c-.787 0-2.147-.61-4.469-2.933-1.926-1.917-2.902-3.413-2.904-4.446 0-.469.195-.713.28-.798a.618.618 0 01.96.77c-.011.147.033 1.102 2.538 3.6 2.503 2.502 3.483 2.555 3.605 2.55a.62.62 0 01.766.962c-.157.157-.402.295-.776.295z"
                        }
                    })])])]))
                }
            },
            N = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "19",
                            height: "15",
                            viewBox: "0 0 19 18",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M9.488 9.512l4.744-4.744h-3.558V.024H8.302v4.744H4.744l4.744 4.744zm4.313-1.94L12.47 8.9l4.82 1.797-7.803 2.91-7.803-2.91L6.505 8.9l-1.33-1.33L0 9.511v4.745l9.488 3.558 9.488-3.558V9.512l-5.175-1.94z",
                            fill: "#000",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            U = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "19",
                            height: "15",
                            viewBox: "0 0 19 19",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M17.486 8.59l-3.559 3.558a5.03 5.03 0 01-7.116 0 5.027 5.027 0 01-.764-1.014L7.701 9.48c.078-.08.176-.125.268-.178.115.39.314.76.621 1.067.981.982 2.578.98 3.558 0l3.558-3.558a2.518 2.518 0 000-3.558 2.519 2.519 0 00-3.558 0l-1.265 1.266a6.313 6.313 0 00-3.21-.35l2.696-2.695a5.033 5.033 0 017.117 7.116zm-9.409 5.851l-1.266 1.267a2.52 2.52 0 01-3.558 0 2.52 2.52 0 010-3.56L6.81 8.59a2.518 2.518 0 013.558 0c.307.307.507.677.622 1.067.093-.054.19-.098.268-.177l1.653-1.653a4.945 4.945 0 00-.764-1.016 5.032 5.032 0 00-7.116 0L1.474 10.37a5.033 5.033 0 007.116 7.116l2.697-2.696a6.31 6.31 0 01-3.21-.349z",
                            fill: "#000",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            V = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "15",
                            height: "15",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 1000 1000"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M292.19 12.89c-21.64 5.74-40.85 22.08-49.91 42.4-3.53 7.51-4.2 18.55-5.08 94.74l-1.1 86.13-86.13 1.1c-81.93 1.1-86.57 1.33-96.06 5.74-15.9 7.51-27.83 19.43-35.78 35.77l-7.29 14.8-.66 314.69c-.44 314.25-.44 314.69 4.2 329.93 3.97 13.25 6.63 17.22 18.33 29.15 11.92 11.71 15.9 14.35 29.15 18.33 15.24 4.64 15.68 4.64 329.93 4.19l314.69-.66 14.8-7.29c16.34-7.95 28.27-19.88 35.78-35.78 4.42-9.5 4.64-14.13 5.74-96.06l1.1-86.13 86.13-1.1c81.93-1.1 86.57-1.33 96.06-5.74 15.9-7.51 27.83-19.43 35.78-35.77l7.29-14.8.66-314.69c.44-314.25.44-314.69-4.19-329.93-3.98-13.25-6.63-17.23-18.33-29.15-11.7-11.48-16.12-14.35-28.71-18.33-15.02-4.64-16.12-4.64-325.73-4.42-238.74.01-312.94.67-320.67 2.88zm622.98 373.43v301.44H312.29V84.88h602.88v301.44zM237.2 509.33v197.21l6.4 13.25c7.51 15.68 19.21 28.05 34.45 36l11.04 5.96 199.2.66 199.42.44v152.38H84.83V312.35H237.2v196.98z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M562.94 163.28c-30.03 10.82-33.35 51.9-5.52 68.24 7.29 4.42 11.7 4.64 79.28 5.3l71.55.66-119.47 119.69c-82.38 82.6-120.58 122.35-123.01 127.87-4.64 11.48-4.2 21.64 1.77 32.68 9.05 17 29.15 24.07 47.48 16.56 5.52-2.43 45.27-40.63 127.87-123.01L762.58 291.8l.66 71.55c.66 67.58.88 71.99 5.3 79.28 5.3 9.28 16.34 17 26.72 18.99 17.67 3.31 37.76-9.72 42.62-27.38 1.55-6.63 2.21-44.83 1.77-128.09l-.66-118.59-5.08-8.17c-2.87-4.42-8.83-10.38-13.25-13.25l-8.17-5.08-120.36-.44c-99.82-.43-121.91.01-129.19 2.66z"
                        }
                    })]))
                }
            },
            H = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "10",
                            height: "7",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M9.652 6.006H.348c-.279 0-.434-.295-.262-.496L4.738.116a.354.354 0 01.524 0L9.914 5.51c.172.201.017.496-.262.496z",
                            fill: "#FFF"
                        }
                    })]))
                }
            },
            q = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 17 19",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            d: "M15.734 11.497l-12.068 6.89a2 2 0 01-2.992-1.736V2.869a2 2 0 012.992-1.736l12.068 6.89a2 2 0 010 3.474z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            K = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 15 15",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("rect", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            x: ".378",
                            y: ".76",
                            width: "14",
                            height: "14",
                            rx: "2",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            W = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 15 15",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            d: "M10.171.76h3a1 1 0 011 1v12a1 1 0 01-1 1h-3a1 1 0 01-1-1v-12a1 1 0 011-1zm-9 0h3a1 1 0 011 1v12a1 1 0 01-1 1h-3a1 1 0 01-1-1v-12a1 1 0 011-1z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            G = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 12 8",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            d: "M7.022 5.552l2.601 1.541a1 1 0 001.51-.86V1.134a1 1 0 00-1.51-.86l-2.601 1.54v-.68a1 1 0 00-1.51-.86L1.208 2.823a1 1 0 000 1.72l4.304 2.55a1 1 0 001.51-.86v-.68z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            Y = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 11 8",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            d: "M4.527 5.565L2.023 7.01a1 1 0 01-1.5-.866v-4.92a1 1 0 011.5-.865L4.527 1.8v-.577a1 1 0 011.5-.866l4.264 2.46a1 1 0 010 1.732L6.026 7.01a1 1 0 01-1.5-.867v-.578z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            Q = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 16 13",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            d: "M7.887 10.981a.685.685 0 01-1.123.528l-3.75-3.107H1.015a.686.686 0 01-.686-.686V4.983c0-.379.307-.686.686-.686h1.998l3.75-3.108a.684.684 0 011.124.529v9.263zm2.637-1.071a.685.685 0 01-.534-.2l-.092-.092a.686.686 0 01-.067-.893 3.959 3.959 0 00.785-2.375c0-.927-.308-1.796-.89-2.513a.685.685 0 01.047-.917l.092-.092a.687.687 0 011.016.051 5.425 5.425 0 011.235 3.471c0 1.194-.378 2.33-1.092 3.286a.686.686 0 01-.5.274zm2.836 2.12a.687.687 0 01-1.01.042l-.09-.09a.686.686 0 01-.04-.927 7.323 7.323 0 001.716-4.705A7.302 7.302 0 0012.1 1.504a.686.686 0 01.028-.939l.09-.09a.686.686 0 01.999.028 8.795 8.795 0 012.22 5.847 8.814 8.814 0 01-2.076 5.68z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            J = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 18 11",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            d: "M7.887 9.981a.685.685 0 01-1.123.528l-3.75-3.107H1.015a.686.686 0 01-.686-.686V3.983c0-.379.307-.686.686-.686h1.998L6.764.189a.684.684 0 011.124.529V9.98z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M13.75 4.289l2.475-2.475a.75.75 0 011.06 1.06L14.812 5.35l2.475 2.475a.75.75 0 01-1.061 1.061L13.75 6.41l-2.475 2.475a.75.75 0 01-1.06-1.06l2.474-2.476-2.475-2.474a.75.75 0 111.061-1.061l2.475 2.475z"
                        }
                    })])]))
                }
            },
            $ = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "15",
                            height: "15",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M8.916 13.861v-.787a.5.5 0 01.5-.5h1.82c1.067 0 1.45-.394 1.45-1.49V9.203a.5.5 0 01.5-.5h.74a.5.5 0 01.5.5v1.883c0 2.082-1.162 3.276-3.19 3.276h-1.82a.5.5 0 01-.5-.5zm-2.979 0a.5.5 0 01-.5.5h-1.82c-2.027 0-3.19-1.194-3.19-3.276V9.202a.5.5 0 01.5-.5h.74a.5.5 0 01.5.5v1.883c0 1.095.384 1.49 1.45 1.49h1.82a.5.5 0 01.5.5v.786zm2.98-13a.5.5 0 01.5-.5h1.82c2.027 0 3.19 1.195 3.19 3.277v1.883a.5.5 0 01-.5.5h-.74a.5.5 0 01-.5-.5V3.638c0-1.095-.384-1.49-1.45-1.49h-1.82a.5.5 0 01-.5-.5V.862zm-2.98 0v.788a.5.5 0 01-.5.5h-1.82c-1.066 0-1.45.394-1.45 1.49V5.52a.5.5 0 01-.5.5h-.74a.5.5 0 01-.5-.5V3.638C.427 1.556 1.59.361 3.617.361h1.82a.5.5 0 01.5.5z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            X = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "20",
                            height: "15",
                            viewBox: "0 0 23 20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            "fill-rule": "nonzero",
                            fill: "none"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M18.343 4.808c-.711-3.265-3.848-5.317-7.006-4.582-1.6.372-2.975 1.419-3.793 2.887h-.055c-2.3.006-4.27 1.706-4.685 4.045-2.092.792-3.167 3.187-2.4 5.349.581 1.642 2.093 2.735 3.785 2.736h2.567v-.759H4.189c-1.822 0-3.3-1.529-3.298-3.413 0-1.503.953-2.829 2.345-3.264a.376.376 0 00.257-.313c.267-2.072 1.975-3.62 3.996-3.623.056 0 .11.004.166.008l.078.005a.368.368 0 00.345-.202c1.314-2.595 4.413-3.597 6.923-2.24 1.4.758 2.383 2.14 2.667 3.747a.374.374 0 00.284.303c2.374.535 3.878 2.96 3.36 5.414-.44 2.085-2.224 3.574-4.29 3.578h-1.466v.759h1.467c2.835-.002 5.131-2.38 5.13-5.31-.002-2.403-1.565-4.505-3.81-5.125z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M11.415 7.773a.358.358 0 00-.518 0l-3.2 3.274.518.536 2.574-2.627v8.56h.734v-8.56l2.574 2.627.518-.536-3.2-3.274zM14.09 17.896v.379H8.222v-.38h-.734v.759c0 .21.164.38.367.38h6.6c.202 0 .367-.17.367-.38v-.758h-.734z"
                        }
                    })])]))
                }
            },
            Z = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 33 31",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M14.823 17.397l-8.187-5.28a.734.734 0 00-.858.045l-5.504 4.43a.734.734 0 00.062 1.188l8.188 5.28a.734.734 0 00.857-.045l5.505-4.43a.734.734 0 00-.063-1.188zM17.274 18.585l5.504 4.43a.734.734 0 00.858.045l8.187-5.28a.734.734 0 00.063-1.188l-5.505-4.43a.734.734 0 00-.857-.045l-8.188 5.28a.734.734 0 00-.062 1.188zM14.886 4.592L9.38.162a.734.734 0 00-.857-.045L.336 5.397a.734.734 0 00-.062 1.188l5.504 4.43a.734.734 0 00.858.045l8.187-5.28a.734.734 0 00.063-1.188zM31.823 5.397L23.636.117a.734.734 0 00-.858.045l-5.504 4.43a.734.734 0 00.062 1.188l8.188 5.28a.734.734 0 00.857-.045l5.505-4.43a.734.734 0 00-.063-1.188z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M15.486 19.145L9.32 24.062a.666.666 0 01-.775.04l-1.52-.98A.666.666 0 006 23.68v.53c0 .232.122.448.32.569l9.178 5.563a.666.666 0 00.69 0l9.177-5.563a.666.666 0 00.32-.57v-.472a.666.666 0 00-1.026-.56l-1.43.923a.666.666 0 01-.777-.04l-6.135-4.915a.666.666 0 00-.831 0z"
                        }
                    })])]))
                }
            },
            ee = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            viewBox: "0 0 32 29",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M22.323 17.806l.088.152h.177l8.5-.037.525-.004-.264-.453L21.29.151 21.203 0h-.177l-8.501.035L12 .037l.265.453 10.058 17.316zM15.139 9.09l-.09-.153-4.376-7.485L10.408 1l-.262.453L.09 18.83l-.09.15.09.152 4.376 7.488.265.451.263-.453L15.052 9.24l.087-.152zM10.837 20h-.175l-.088.15-4.313 7.4-.261.455h20.695l.088-.154 4.314-7.4.26-.451h-20.52z"
                        }
                    })])]))
                }
            },
            te = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "14",
                            height: "14",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        staticClass: "icon_fill_repaint",
                        attrs: {
                            d: "M1 1v3.996h4V.999H1zm10.5 12.989h-3a.5.5 0 110-1h3a.5.5 0 110 1h1-1zM1 0h4a1 1 0 011 1v3.996a1 1 0 01-1 1H1a1 1 0 01-1-1V.999A1 1 0 011 0zm12.004 1H7.5a.5.5 0 110-1h6.004a.5.5 0 01.5.5v5.9a.5.5 0 01-1 0V1zm-2 5.973V4.364a.5.5 0 011 0v3.108a.5.5 0 01-.5.5H8.5a.5.5 0 01-.5-.5V2.498a.5.5 0 011 0v4.475h2.003zm-5 2.017H3.768a.5.5 0 110-.999h2.736a.5.5 0 01.5.5v5.01a.5.5 0 01-.5.499H.5a.5.5 0 01-.5-.5V7.494a.5.5 0 011 0V13h5.004V8.99zm6.997 1.002H8.5a.5.5 0 110-1h5a.5.5 0 01.5.5v3.89a.5.5 0 01-1 0v-3.39zM3 10.997h.525a.5.5 0 110 .999H2.5a.5.5 0 01-.5-.5v-1.005a.5.5 0 011 0v.506z",
                            fill: "#000",
                            "fill-rule": "nonzero",
                            "stroke-width": ".75"
                        }
                    })]))
                }
            },
            ne = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "77",
                            height: "61",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "none",
                            "fill-rule": "evenodd"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M73.555 50.485H68.57a2.497 2.497 0 002.492-2.5c0-1.382-1.116-2.5-2.492-2.5h-4.983a2.497 2.497 0 002.491-2.5c0-1.382-1.115-2.5-2.491-2.5h-7.476a2.497 2.497 0 002.492-2.5c0-1.382-1.116-2.5-2.492-2.5h13.705a2.497 2.497 0 002.492-2.5c0-1.382-1.116-2.5-2.492-2.5h-6.23a2.496 2.496 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5h-2.491a2.496 2.496 0 002.491-2.5c0-1.381-1.115-2.5-2.491-2.5h12.459a2.496 2.496 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5H68.57a2.496 2.496 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5h-4.984a2.496 2.496 0 002.492-2.5c0-1.381-1.116-2.5-2.492-2.5H59.85a2.496 2.496 0 002.491-2.5c0-1.381-1.115-2.5-2.491-2.5H22.473a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h-8.721a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5H11.26a2.496 2.496 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h7.475a2.496 2.496 0 00-2.491 2.5c0 1.38 1.115 2.5 2.491 2.5H5.031a2.496 2.496 0 00-2.492 2.5c0 1.38 1.115 2.5 2.492 2.5h6.23a2.496 2.496 0 00-2.493 2.5c0 1.38 1.116 2.5 2.492 2.5H5.03a2.496 2.496 0 00-2.491 2.5c0 1.38 1.115 2.5 2.492 2.5H2.539a2.495 2.495 0 00-2.492 2.5c0 1.38 1.116 2.5 2.492 2.5h6.23a2.495 2.495 0 00-2.492 2.5c0 1.379 1.115 2.5 2.491 2.5H6.276a2.495 2.495 0 00-2.491 2.5c0 1.379 1.115 2.5 2.491 2.5h12.46a2.495 2.495 0 00-2.492 2.5c0 1.379 1.115 2.5 2.491 2.5h-4.983a2.495 2.495 0 00-2.492 2.5c0 1.379 1.116 2.5 2.492 2.5h42.36a2.497 2.497 0 002.492-2.5c0-1.382-1.116-2.5-2.492-2.5h17.443a2.497 2.497 0 002.492-2.5c0-1.382-1.116-2.5-2.492-2.5z",
                            fill: "#656D78",
                            "fill-rule": "nonzero",
                            opacity: ".146"
                        }
                    }), n("g", {
                        attrs: {
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M52.158 18.584v33.437c0 .673-.543 1.218-1.213 1.218h-26.89c-.67 0-1.213-.545-1.213-1.218V7.979c0-.673.543-1.218 1.213-1.218h26.89c.67 0 1.213.545 1.213 1.218v8.102",
                            fill: "#A2A8AE"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#D64330",
                            d: "M28.42 12.493h18.16v35.014H28.42z"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#E35F46",
                            d: "M43.264 16.243h3.316v31.264H28.42V16.243h12.115"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#F26E5C",
                            d: "M28.42 31.876h18.16v15.633H28.42z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M25.495 52.53V7.993c0-.68.49-1.232 1.093-1.232h-1.907c-.603 0-1.093.552-1.093 1.232v44.536c0 .68.49 1.232 1.093 1.232h1.907c-.604 0-1.093-.551-1.093-1.231z",
                            fill: "#666A6F"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M51.691 6.761h-15.67a31.012 31.012 0 00-2.667 12.622c0 13.11 8.1 24.32 19.55 28.86V7.98c0-.673-.543-1.218-1.213-1.218z",
                            opacity: ".1",
                            fill: "#F5F5F5"
                        }
                    }), n("g", {
                        attrs: {
                            transform: "translate(22 6)"
                        }
                    }, [n("ellipse", {
                        attrs: {
                            fill: "#3A3847",
                            cx: "27.081",
                            cy: "3.721",
                            rx: "1.011",
                            ry: "1.015"
                        }
                    }), n("ellipse", {
                        attrs: {
                            fill: "#3A3847",
                            cx: "27.081",
                            cy: "44.218",
                            rx: "1.011",
                            ry: "1.015"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M15.5 14.327a.76.76 0 00-.758.761v5.723c0 .42.34.762.758.762a.76.76 0 00.758-.762v-5.723a.76.76 0 00-.758-.76zM15.5 37.875c2.202 0 3.993-1.799 3.993-4.01 0-2.21-1.791-4.009-3.993-4.009s-3.993 1.799-3.993 4.01c0 2.21 1.791 4.009 3.993 4.009zm0-6.496a2.484 2.484 0 012.477 2.486 2.484 2.484 0 01-2.477 2.487 2.485 2.485 0 01-2.477-2.486 2.484 2.484 0 012.477-2.487z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M30.158 10.842a.76.76 0 00.758-.761V1.979C30.916.888 30.032 0 28.945 0H2.055A1.977 1.977 0 00.084 1.98v44.04c0 1.092.884 1.98 1.971 1.98h26.89a1.977 1.977 0 001.971-1.98V12.585a.76.76 0 00-.758-.76.76.76 0 00-.758.76v33.437a.456.456 0 01-.455.457H2.055a.456.456 0 01-.455-.457V1.979c0-.252.204-.457.455-.457h26.89c.25 0 .455.205.455.457v8.102c0 .42.34.761.758.761z",
                            fill: "#3A3847"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M6.42 5.731a.76.76 0 00-.758.762V41.507c0 .42.34.762.758.762h18.16a.76.76 0 00.758-.762V6.493a.76.76 0 00-.758-.762H6.42zm17.402 1.523v2.228h-2.558a.76.76 0 00-.758.76c0 .421.34.762.758.762h2.558v14.11H7.178v-14.11h11.357a.76.76 0 00.758-.761.76.76 0 00-.758-.761H7.178V7.254h16.644zm0 33.492H7.178v-14.11h16.644v14.11z",
                            fill: "#3A3847"
                        }
                    }), n("ellipse", {
                        attrs: {
                            fill: "#3A3847",
                            cx: "3.877",
                            cy: "3.721",
                            rx: "1.011",
                            ry: "1.015"
                        }
                    }), n("ellipse", {
                        attrs: {
                            fill: "#3A3847",
                            cx: "3.877",
                            cy: "44.218",
                            rx: "1.011",
                            ry: "1.015"
                        }
                    })])])])]))
                }
            },
            ie = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "385",
                            height: "479",
                            xmlns: "http://www.w3.org/2000/svg",
                            "xmlns:xlink": "http://www.w3.org/1999/xlink"
                        }, u),
                        ...d
                    }, a.concat([n("defs", [n("path", {
                        attrs: {
                            d: "M31.438 34.367h8.22c.312 0 .616.102.866.292.643.486.775 1.409.297 2.061L21.717 62.731a1.437 1.437 0 01-2.327 0L.289 36.721A1.488 1.488 0 010 35.84c0-.814.65-1.473 1.451-1.473H9.19V2.455C9.19 1.099 10.272 0 11.608 0H29.02c1.335 0 2.418 1.099 2.418 2.455v31.912z",
                            id: "a"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M31.438 34.367h8.22c.312 0 .616.102.866.292.643.486.775 1.409.297 2.061L21.717 62.731a1.437 1.437 0 01-2.327 0L.289 36.721A1.488 1.488 0 010 35.84c0-.814.65-1.473 1.451-1.473H9.19V2.455C9.19 1.099 10.272 0 11.608 0H29.02c1.335 0 2.418 1.099 2.418 2.455v31.912z",
                            id: "c"
                        }
                    }), n("path", {
                        attrs: {
                            id: "f",
                            d: "M9.19 34.367L34.34 51.55 20.314 67.752-7.255 35.349 0 31.912z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M31.438 34.367h8.22c.312 0 .616.102.866.292.643.486.775 1.409.297 2.061L21.717 62.731a1.437 1.437 0 01-2.327 0L.289 36.721A1.488 1.488 0 010 35.84c0-.814.65-1.473 1.451-1.473H9.19V2.455C9.19 1.099 10.272 0 11.608 0H29.02c1.335 0 2.418 1.099 2.418 2.455v31.912z",
                            id: "g"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M31.438 34.367h8.22c.312 0 .616.102.866.292.643.486.775 1.409.297 2.061L21.717 62.731a1.437 1.437 0 01-2.327 0L.289 36.721A1.488 1.488 0 010 35.84c0-.814.65-1.473 1.451-1.473H9.19V2.455C9.19 1.099 10.272 0 11.608 0H29.02c1.335 0 2.418 1.099 2.418 2.455v31.912z",
                            id: "i"
                        }
                    }), n("path", {
                        attrs: {
                            id: "l",
                            d: "M14.026-.491L23.7 28.475 9.19 34.367.968 21.602 7.74-5.4z"
                        }
                    }), n("filter", {
                        attrs: {
                            x: "-6%",
                            y: "-12.6%",
                            width: "116.8%",
                            height: "119.5%",
                            filterUnits: "objectBoundingBox",
                            id: "e"
                        }
                    }, [n("feOffset", {
                        attrs: {
                            dx: "1",
                            dy: "-1",
                            in: "SourceAlpha",
                            result: "shadowOffsetOuter1"
                        }
                    }), n("feGaussianBlur", {
                        attrs: {
                            stdDeviation: "1",
                            in: "shadowOffsetOuter1",
                            result: "shadowBlurOuter1"
                        }
                    }), n("feColorMatrix", {
                        attrs: {
                            values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.35 0",
                            in: "shadowBlurOuter1"
                        }
                    })]), n("filter", {
                        attrs: {
                            x: "-11%",
                            y: "-11.3%",
                            width: "130.8%",
                            height: "117.6%",
                            filterUnits: "objectBoundingBox",
                            id: "k"
                        }
                    }, [n("feOffset", {
                        attrs: {
                            dx: "1",
                            dy: "-1",
                            in: "SourceAlpha",
                            result: "shadowOffsetOuter1"
                        }
                    }), n("feGaussianBlur", {
                        attrs: {
                            stdDeviation: "1",
                            in: "shadowOffsetOuter1",
                            result: "shadowBlurOuter1"
                        }
                    }), n("feColorMatrix", {
                        attrs: {
                            values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.430027174 0",
                            in: "shadowBlurOuter1"
                        }
                    })])]), n("g", {
                        attrs: {
                            fill: "none",
                            "fill-rule": "evenodd"
                        }
                    }, [n("path", {
                        attrs: {
                            fill: "#FFF",
                            "fill-rule": "nonzero",
                            d: "M0 .828h385v478H0z"
                        }
                    }), n("text", {
                        attrs: {
                            "font-family": "Avenir-Book, Avenir",
                            "font-size": "16",
                            fill: "#000",
                            transform: "translate(71.5 187.5)"
                        }
                    }, [n("tspan", {
                        attrs: {
                            x: "61.886",
                            y: "57.136"
                        }
                    }, [i("This is a quick guide before")]), n("tspan", {
                        attrs: {
                            x: "61.886",
                            y: "79.136"
                        }
                    }, [i("you starts use ODM")])]), n("text", {
                        attrs: {
                            "font-family": "Avenir-Heavy, Avenir",
                            "font-size": "30",
                            "font-weight": "600",
                            fill: "#000",
                            transform: "translate(71.5 187.5)"
                        }
                    }, [n("tspan", {
                        attrs: {
                            x: "60.886",
                            y: "30.136"
                        }
                    }, [i("Welcome! ")])]), n("path", {
                        attrs: {
                            d: "M103.324 235.003h8.22c.312 0 .616.103.867.292.642.486.775 1.41.296 2.061l-19.103 26.011a1.437 1.437 0 01-2.327 0l-19.103-26.01a1.488 1.488 0 01-.288-.881c0-.813.65-1.473 1.451-1.473h7.739v-31.912c0-1.356 1.083-2.455 2.418-2.455h17.412c1.336 0 2.418 1.1 2.418 2.455v31.912z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    }), n("g", {
                        attrs: {
                            transform: "translate(71.886 200.636)"
                        }
                    }, [n("mask", {
                        attrs: {
                            id: "b",
                            fill: "#fff"
                        }
                    }, [n("use", {
                        attrs: {
                            "xlink:href": "#a"
                        }
                    })]), n("path", {
                        attrs: {
                            fill: "#FF262C",
                            "fill-rule": "nonzero",
                            mask: "url(#b)",
                            d: "M32.889 24.548l-23.7 9.819L34.34 51.55l10.158-17.183-1.935-3.437z"
                        }
                    })]), n("g", {
                        attrs: {
                            transform: "translate(71.886 200.636)"
                        }
                    }, [n("mask", {
                        attrs: {
                            id: "d",
                            fill: "#fff"
                        }
                    }, [n("use", {
                        attrs: {
                            "xlink:href": "#c"
                        }
                    })]), n("g", {
                        attrs: {
                            "fill-rule": "nonzero",
                            mask: "url(#d)"
                        }
                    }, [n("use", {
                        attrs: {
                            fill: "#000",
                            filter: "url(#e)",
                            "xlink:href": "#f"
                        }
                    }), n("use", {
                        attrs: {
                            fill: "#FED012",
                            "xlink:href": "#f"
                        }
                    })])]), n("g", {
                        attrs: {
                            transform: "translate(71.886 200.636)"
                        }
                    }, [n("mask", {
                        attrs: {
                            id: "h",
                            fill: "#fff"
                        }
                    }, [n("use", {
                        attrs: {
                            "xlink:href": "#g"
                        }
                    })]), n("path", {
                        attrs: {
                            fill: "#01B137",
                            "fill-rule": "nonzero",
                            mask: "url(#h)",
                            d: "M17.895-3.928L14.026-.49 23.7 28.475l10.157-4.418 6.288-27.985H18.863z"
                        }
                    }), n("mask", {
                        attrs: {
                            id: "j",
                            fill: "#fff"
                        }
                    }, [n("use", {
                        attrs: {
                            "xlink:href": "#i"
                        }
                    })]), n("g", {
                        attrs: {
                            "fill-rule": "nonzero",
                            mask: "url(#j)"
                        }
                    }, [n("use", {
                        attrs: {
                            fill: "#000",
                            filter: "url(#k)",
                            "xlink:href": "#l"
                        }
                    }), n("use", {
                        attrs: {
                            fill: "#0291D7",
                            "xlink:href": "#l"
                        }
                    })])]), n("text", {
                        attrs: {
                            "font-family": "Avenir-Book, Avenir",
                            "font-size": "14",
                            fill: "#000"
                        }
                    }, [n("tspan", {
                        attrs: {
                            x: "74.385",
                            y: "106.276"
                        }
                    }, [i("Select manager ")]), n("tspan", {
                        attrs: {
                            x: "76.989",
                            y: "125.276"
                        }
                    }, [i("or sniffers here")])]), n("text", {
                        attrs: {
                            "font-family": "Avenir-Book, Avenir",
                            "font-size": "14",
                            fill: "#000"
                        }
                    }, [n("tspan", {
                        attrs: {
                            x: "76.147",
                            y: "34.496"
                        }
                    }, [i("Options, Filter, Get by link,")]), n("tspan", {
                        attrs: {
                            x: "109.684",
                            y: "53.496"
                        }
                    }, [i(" Search are here")])]), n("path", {
                        attrs: {
                            d: "M5.125 43.26l3.268-8.576-.862.128 5.634 7.247.789-.613-5.633-7.247-.546-.702-.316.83-3.268 8.578.934.356zm56.937 73.244c-15.86-1.983-27.73-8.906-35.646-20.781-7.25-10.875-12.864-28.695-16.823-53.447l-1.098-7.35-.99.148 1.1 7.355c3.98 24.886 9.633 42.83 16.979 53.848 8.083 12.125 20.214 19.202 36.354 21.22l.124-.993z",
                            fill: "#DADEE6",
                            "fill-rule": "nonzero"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M14.549 110.47l-4.543-7.975-.449.747 9.175.26.029-1-9.176-.26-.888-.024.44.772 4.543 7.976.869-.495zm44.326.046c-15.3 3.967-29.368 2.596-42.227-4.107l-6.39-3.838-.515.858 6.417 3.852c13.11 6.835 27.431 8.23 42.965 4.203l-.25-.968zM252.323 19.634l2.762-8.753-.853.179 6.046 6.906.753-.658-6.046-6.907-.586-.669-.267.848-2.763 8.753.954.301zm-31.488 31.754c12.83 1.333 22.747-1.351 29.713-8.071 5.777-5.573 7.83-13.88 6.188-24.872l-1.536-7.328-.978.206 1.53 7.298c1.593 10.669-.38 18.653-5.898 23.976-6.734 6.496-16.36 9.101-28.916 7.797l-.103.994z",
                            fill: "#DADEE6",
                            "fill-rule": "nonzero"
                        }
                    })])]))
                }
            },
            oe = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "15",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 512 512"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M256 0C114.833 0 0 114.844 0 256s114.833 256 256 256 256-114.844 256-256S397.167 0 256 0zm101.771 264.969l-149.333 96a10.62 10.62 0 01-5.771 1.698c-1.75 0-3.521-.438-5.104-1.302A10.653 10.653 0 01192 352V160c0-3.906 2.125-7.49 5.563-9.365 3.375-1.854 7.604-1.74 10.875.396l149.333 96c3.042 1.958 4.896 5.344 4.896 8.969s-1.854 7.01-4.896 8.969z"
                        }
                    })]))
                }
            },
            ae = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "22",
                            height: "22",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            "fill-rule": "nonzero",
                            fill: "none"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M16.625 21.5H5.375A4.875 4.875 0 01.5 16.625V5.375A4.875 4.875 0 015.375.5h11.25A4.875 4.875 0 0121.5 5.375v11.25a4.875 4.875 0 01-4.875 4.875z",
                            stroke: "#F5F5F5",
                            fill: "#41479B"
                        }
                    }), n("g", {
                        attrs: {
                            fill: "#F5F5F5"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M21 16.625v-.96l-3.102-2.033H21v-1.053h-8.421V21h1.053v-6.388l6.677 4.374c.236-.368.419-.774.537-1.207M1.294 18.205c.107.275.24.536.397.781l6.677-4.374V21h1.053v-8.421H1v1.053h3.102L1 15.664v.961c0 .168.01.334.028.497M1 5.524v.812l3.102 2.032H1v1.053h8.421V1H8.368v6.388L1.691 3.014a4.35 4.35 0 00-.57 1.334M20.7 3.78a4.36 4.36 0 00-.391-.766l-6.677 4.374V1h-1.053v8.421H21V8.368h-3.102L21 6.336v-.961c0-.174-.01-.346-.03-.515"
                        }
                    })]), n("g", {
                        attrs: {
                            fill: "#FF4B55"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M12.579 1H9.42v8.421H1v3.158h8.421V21h3.158v-8.421H21V9.42h-8.421z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M6.406 13.632l-5.378 3.49c.043.378.134.74.266 1.083l7.045-4.573H6.406zM14.456 13.632l6.39 4.147c.1-.367.154-.754.154-1.154l-4.61-2.993h-1.934zM7.316 8.368l-6.194-4.02C1.042 4.678 1 5.02 1 5.375v.149l4.382 2.844h1.934zM15.565 8.368L20.97 4.86a4.347 4.347 0 00-.27-1.08l-7.068 4.588h1.933z"
                        }
                    })])])]))
                }
            },
            re = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "22",
                            height: "22",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            transform: "translate(1 1)",
                            "fill-rule": "nonzero",
                            fill: "none"
                        }
                    }, [n("rect", {
                        attrs: {
                            stroke: "#FFF",
                            fill: "#FFF",
                            x: "-.5",
                            y: "-.5",
                            width: "21",
                            height: "21",
                            rx: "4.5"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M15.93.01H4.07A4.375 4.375 0 000 4.376V6.67h20V4.375A4.375 4.375 0 0015.93.011z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M0 15.625a4.375 4.375 0 004.07 4.364h11.86A4.375 4.375 0 0020 15.625V13.33H0v2.295z",
                            fill: "#FF4B55"
                        }
                    }), n("path", {
                        attrs: {
                            fill: "#41479B",
                            d: "M0 6.67h20v6.659H0z"
                        }
                    })])]))
                }
            },
            se = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "24",
                            height: "24",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M20.484 0H3.516A3.52 3.52 0 000 3.516v16.968A3.52 3.52 0 003.516 24h7.078v-8.484H7.78v-4.22h2.813V8.439a4.223 4.223 0 014.219-4.22h4.265v4.22h-4.265v2.859h4.265l-.703 4.219h-3.563V24h5.672A3.52 3.52 0 0024 20.484V3.516A3.52 3.52 0 0020.484 0z",
                            fill: "#FFD014",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            le = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "24",
                            height: "24",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M20.484 0H3.516A3.52 3.52 0 000 3.516v16.968A3.52 3.52 0 003.516 24h16.968A3.52 3.52 0 0024 20.484V3.516A3.52 3.52 0 0020.484 0zm-12 19.031H5.672V9.188h2.812v9.843zm0-11.25H5.672V4.97h2.812V7.78zm9.844 11.25h-2.812v-5.625c0-.775-.631-1.406-1.407-1.406-.775 0-1.406.631-1.406 1.406v5.625H9.891V9.188h2.812v.53c.737-.23 1.216-.53 2.11-.53 1.907.002 3.515 1.713 3.515 3.735v6.108z",
                            fill: "#FFD014",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            ce = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "24",
                            height: "20",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M8.936 19.604c-1.036 0-2.102-.084-3.174-.252-1.89-.296-3.802-1.284-4.343-1.58L0 16.996l1.537-.505c1.68-.553 2.7-.895 3.966-1.432-1.267-.613-2.243-1.716-2.713-3.143l-.357-1.085.293.045a5.33 5.33 0 01-.668-.823c-.605-.919-.925-2.042-.857-3.004l.067-.948.568.22a5.301 5.301 0 01-.514-1.44c-.248-1.233-.04-2.543.584-3.689l.493-.907.661.794c2.09 2.51 4.736 3.999 7.877 4.435-.129-.885-.032-1.738.286-2.503.37-.89 1.03-1.646 1.905-2.185a5.722 5.722 0 013.321-.815c1.24.076 2.366.54 3.26 1.345.438-.114.76-.235 1.194-.399.262-.098.559-.21.93-.338l1.369-.472-.893 2.55c.06-.006.12-.01.183-.013l1.461-.066-.863 1.18c-.05.068-.062.087-.08.114-.07.105-.156.235-1.342 1.818a2.233 2.233 0 00-.417 1.454c.105 2.057-.147 3.918-.75 5.531a9.788 9.788 0 01-2.628 3.893c-1.452 1.307-3.302 2.202-5.501 2.66a16.935 16.935 0 01-3.436.336z",
                            fill: "#FFD014",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            ue = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "17",
                            height: "17",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M15.785 5.32h0-4.416l-.138-.278L9.156.875A.763.763 0 008.108.608a.765.765 0 00-.248.234L5.632 5.32H1.215A.72.72 0 00.71 6.546L4.083 9.93l-.052.262-1.086 5.447c-.079.389.171.768.557.847.2.041.408-.005.571-.128L8.5 13.024l.301.227 4.128 3.106a.711.711 0 00.998-.143.722.722 0 00.129-.578l-1.138-5.714.19-.19 3.182-3.186a.72.72 0 00.002-1.016.713.713 0 00-.507-.21zm-.001-1h0s0 0 0 0z",
                            "fill-rule": "nonzero",
                            stroke: "#FFD014",
                            fill: "none"
                        }
                    })]))
                }
            },
            de = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "52",
                            height: "52",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            "fill-rule": "nonzero",
                            fill: "none"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M26 49.176h23.176V26C49.176 13.192 38.81 2.824 26 2.824 13.192 2.824 2.824 13.19 2.824 26 2.824 38.808 13.19 49.176 26 49.176z",
                            fill: "#FFF"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M25.204 34.858c-1.487 0-2.69 1.24-2.69 2.726 0 1.452 1.167 2.726 2.69 2.726 1.522 0 2.725-1.274 2.725-2.726 0-1.487-1.238-2.726-2.725-2.726zM25.664 14.219c-4.78 0-6.974 2.832-6.974 4.744 0 1.38 1.168 2.018 2.124 2.018 1.911 0 1.133-2.726 4.744-2.726 1.77 0 3.186.779 3.186 2.407 0 1.912-1.983 3.01-3.151 4-1.027.886-2.372 2.337-2.372 5.382 0 1.84.496 2.372 1.947 2.372 1.735 0 2.089-.78 2.089-1.452 0-1.84.035-2.903 1.982-4.425.956-.744 3.965-3.15 3.965-6.479 0-3.327-3.009-5.841-7.54-5.841z",
                            fill: "#000"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M26 0c14.37 0 26 11.629 26 26v23.969C52 51.09 51.09 52 49.969 52H26C11.63 52 0 40.371 0 26 0 11.63 11.629 0 26 0zm0 47.938h21.938V26c0-12.124-9.812-21.938-21.938-21.938C13.876 4.063 4.062 13.874 4.062 26c0 12.124 9.812 21.938 21.938 21.938z",
                            fill: "#FFD014"
                        }
                    })])]))
                }
            },
            fe = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "14",
                            height: "14",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("path", {
                        attrs: {
                            d: "M9.695 7l3.886 3.885a1.429 1.429 0 010 2.021l-.673.674a1.429 1.429 0 01-2.022 0L7 9.694 3.114 13.58a1.429 1.429 0 01-2.022 0l-.673-.674a1.429 1.429 0 010-2.02l3.886-3.887L.419 3.114a1.428 1.428 0 010-2.02L1.093.42A1.429 1.429 0 013.115.419L7 4.304 10.885.419a1.429 1.429 0 012.022 0l.674.674a1.428 1.428 0 010 2.021L9.695 7z",
                            fill: "#FFF",
                            "fill-rule": "nonzero"
                        }
                    })]))
                }
            },
            _e = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "140",
                            height: "21",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, u),
                        ...d
                    }, a.concat([n("g", {
                        attrs: {
                            fill: "none",
                            "fill-rule": "evenodd"
                        }
                    }, [n("rect", {
                        attrs: {
                            fill: "#46485F",
                            "fill-rule": "nonzero",
                            width: "140",
                            height: "21",
                            rx: "3"
                        }
                    }), n("g", {
                        attrs: {
                            fill: "#FFF"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M90.959 4.498v11.954h32.068c.817 0 1.48-.669 1.48-1.494V5.992c0-.825-.663-1.494-1.48-1.494H90.959zM90.465 4h32.562c1.09 0 1.973.892 1.973 1.992v8.966c0 1.1-.884 1.992-1.973 1.992H90.465V4zM89.972 16.452V4.498H57.904c-.817 0-1.48.67-1.48 1.494v8.966c0 .825.663 1.494 1.48 1.494h32.068zM57.904 4h32.561v12.95h-32.56a1.983 1.983 0 01-1.974-1.992V5.992c0-1.1.883-1.992 1.973-1.992zM17.973 4.498c-.817 0-1.48.67-1.48 1.494v8.966c0 .825.663 1.494 1.48 1.494h30.588c.818 0 1.48-.669 1.48-1.494V5.992c0-.825-.662-1.494-1.48-1.494H17.973zm0-.498h30.588c1.09 0 1.974.892 1.974 1.992v8.966c0 1.1-.884 1.992-1.974 1.992H17.973A1.983 1.983 0 0116 14.958V5.992C16 4.892 16.884 4 17.973 4z",
                            "fill-rule": "nonzero"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M96 8h.715l2.765 4.407h.014V8h.567v5.306h-.715L96.58 8.9h-.013v4.407H96V8zm7.973 4.67c-.19.269-.396.457-.62.565a1.796 1.796 0 01-.783.161 1.491 1.491 0 01-1.17-.54 1.771 1.771 0 01-.318-.584 2.282 2.282 0 01-.11-.72c0-.27.04-.518.12-.745a1.76 1.76 0 01.338-.585 1.515 1.515 0 011.16-.513c.22 0 .423.041.607.123.184.083.343.203.475.36.133.158.235.35.307.577.072.228.108.486.108.776v.187h-2.55a1.343 1.343 0 00.318.79c.09.103.195.185.317.245.121.06.254.09.398.09.229 0 .422-.046.58-.135.157-.09.299-.223.425-.398l.398.345zm-.452-1.432c-.01-.3-.097-.54-.263-.72-.167-.18-.396-.27-.688-.27-.293 0-.529.09-.709.27-.18.18-.287.42-.323.72h1.983zm2.199.18l-1.134-1.62h.688l.837 1.26.789-1.26h.64l-1.085 1.62 1.302 1.888h-.695l-.998-1.514-.985 1.514h-.654l1.295-1.889zm4.283-1.125h-.931v1.754c0 .115.002.221.007.319a.72.72 0 00.054.254.39.39 0 00.141.173.48.48 0 00.27.063.983.983 0 00.465-.12l.02.533c-.09.045-.19.077-.3.097-.11.02-.214.03-.313.03-.189 0-.34-.027-.452-.082a.63.63 0 01-.263-.233.925.925 0 01-.125-.37 3.628 3.628 0 01-.03-.492v-1.926h-.688V9.8h.688v-.997h.526v.997h.93v.494zM30.744 9.138a.86.86 0 00-.398-.325 1.355 1.355 0 00-.52-.102 1.67 1.67 0 00-.39.046 1.21 1.21 0 00-.345.138.668.668 0 00-.338.599.594.594 0 00.227.5c.081.066.19.127.328.184.137.057.305.114.505.171.194.057.382.119.565.185.182.065.343.149.483.25.14.1.251.227.334.378.083.151.124.341.124.57 0 .232-.05.433-.149.605a1.3 1.3 0 01-.394.424 1.773 1.773 0 01-.565.25 2.643 2.643 0 01-1.525-.066 1.76 1.76 0 01-.38-.197 1.233 1.233 0 01-.306-.3l.512-.388c.109.171.26.3.455.388a1.485 1.485 0 001.005.08 1.22 1.22 0 00.352-.155.873.873 0 00.256-.254.62.62 0 00.1-.348.697.697 0 00-.079-.352.671.671 0 00-.241-.234 1.936 1.936 0 00-.412-.178l-.583-.184a3.87 3.87 0 01-.498-.18 1.539 1.539 0 01-.394-.251 1.07 1.07 0 01-.263-.355 1.175 1.175 0 01-.096-.497 1.165 1.165 0 01.526-1.004c.16-.112.343-.196.547-.253.204-.057.417-.086.64-.086.284 0 .543.041.778.122.235.081.444.223.63.425l-.491.394zM32.208 8h.554v3.25l1.514-1.355h.79l-1.607 1.402 1.77 1.678h-.818l-1.649-1.619v1.619h-.554V8zm3.604 1.895h.554v3.08h-.554v-3.08zm-.128-1.204c0-.1.039-.189.117-.263a.401.401 0 01.288-.112c.113 0 .21.037.288.112a.352.352 0 01.117.263c0 .11-.038.2-.114.27a.412.412 0 01-.291.105.412.412 0 01-.292-.105.351.351 0 01-.113-.27zm1.755 1.204h.555v.448h.014a1.579 1.579 0 011.194-.526c.26 0 .499.04.714.121a1.553 1.553 0 01.906.852c.086.198.128.413.128.645a1.58 1.58 0 01-1.01 1.497 1.75 1.75 0 01-.653.122c-.298 0-.56-.06-.785-.181a1.229 1.229 0 01-.494-.444h-.014v2.046h-.555v-4.58zm.555 1.54c0 .162.027.313.081.45.055.139.134.26.238.363.105.103.23.184.374.243.144.06.306.09.487.09.18 0 .342-.03.486-.09.145-.059.27-.14.374-.243a1.04 1.04 0 00.238-.362c.054-.138.081-.289.081-.451 0-.162-.027-.313-.081-.45a1.04 1.04 0 00-.238-.363 1.137 1.137 0 00-.374-.243 1.274 1.274 0 00-.486-.089c-.18 0-.343.03-.487.089-.145.06-.27.14-.374.243a1.04 1.04 0 00-.238.362 1.218 1.218 0 00-.081.451z"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M70 8.337h1.484c.202 0 .399.021.59.063.193.043.365.112.516.208.151.096.274.221.368.376.094.154.14.346.14.576 0 .29-.076.53-.23.72-.153.19-.36.324-.621.404v.014a1.203 1.203 0 011.017.762c.054.143.082.297.082.46 0 .277-.056.504-.168.682-.113.178-.26.32-.44.425-.181.106-.385.18-.612.221a3.695 3.695 0 01-.676.064H70V8.337zm.577 2.108h.797c.138 0 .272-.01.402-.028a1.02 1.02 0 00.354-.116.68.68 0 00.254-.246.798.798 0 00.096-.418c0-.154-.03-.28-.089-.376a.659.659 0 00-.237-.228 1.01 1.01 0 00-.337-.116 2.306 2.306 0 00-.381-.032h-.859v1.56zm0 2.319h.976c.142 0 .283-.016.422-.046.14-.03.266-.08.378-.148a.809.809 0 00.272-.267.749.749 0 00.103-.404.872.872 0 00-.1-.435.802.802 0 00-.261-.281 1.05 1.05 0 00-.371-.148 2.172 2.172 0 00-.43-.042h-.989v1.77zm3.614-2.319c.165-.173.36-.3.587-.383.227-.082.457-.123.691-.123.476 0 .82.115 1.03.344.211.23.317.579.317 1.047v1.413a3.968 3.968 0 00.048.57l-.516-.001a1.176 1.176 0 01-.03-.25 9.796 9.796 0 01-.004-.242H76.3a1.196 1.196 0 01-1.058.576c-.165 0-.32-.021-.464-.063a1.148 1.148 0 01-.377-.186.892.892 0 01-.354-.727c0-.272.068-.485.206-.64.137-.155.308-.27.512-.344a2.47 2.47 0 01.66-.14 8.25 8.25 0 01.649-.029h.206v-.098c0-.24-.07-.42-.21-.541-.14-.122-.335-.183-.587-.183-.174 0-.345.03-.512.088a1.224 1.224 0 00-.443.27l-.337-.358zm1.553 1.286c-.344 0-.616.049-.818.147a.502.502 0 00-.302.485c0 .206.067.353.203.44.135.086.303.13.505.13a.967.967 0 00.408-.081.86.86 0 00.471-.527c.041-.12.064-.248.069-.383v-.211h-.536zm4.342-.885a1.09 1.09 0 00-.371-.306 1.01 1.01 0 00-.44-.095c-.178 0-.336.032-.474.095a.915.915 0 00-.34.263c-.09.113-.157.243-.203.39a1.591 1.591 0 00-.068.475c0 .168.026.326.079.474.052.147.126.277.22.39a.995.995 0 00.786.358c.353 0 .625-.136.818-.407l.398.386a1.399 1.399 0 01-.55.4c-.21.085-.432.127-.666.127a1.78 1.78 0 01-.68-.126 1.47 1.47 0 01-.526-.359 1.656 1.656 0 01-.336-.548c-.08-.21-.12-.442-.12-.695 0-.249.04-.478.12-.689a1.552 1.552 0 01.866-.91c.203-.086.429-.13.676-.13.238 0 .464.042.677.127.213.084.4.215.56.393l-.426.387zM81.11 8h.536v3.47l1.463-1.446h.763l-1.553 1.496 1.71 1.792h-.79l-1.593-1.729v1.729h-.536V8z",
                            opacity: ".595"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M114.626 10.433h3.553l-1.375-1.397a.429.429 0 01.01-.6.413.413 0 01.58 0l2.088 2.121a.43.43 0 010 .6l-2.088 2.122a.413.413 0 01-.59.01.429.429 0 01-.01-.6l1.385-1.408h-3.553a.421.421 0 01-.418-.424c0-.234.187-.424.418-.424z",
                            "fill-rule": "nonzero"
                        }
                    }), n("path", {
                        attrs: {
                            d: "M65.226 10.433h-3.553l1.375-1.397a.429.429 0 00-.01-.6.413.413 0 00-.58 0l-2.089 2.121a.43.43 0 000 .6l2.089 2.122c.16.168.424.173.59.01a.429.429 0 00.01-.6l-1.385-1.408h3.553c.23 0 .418-.19.418-.424a.421.421 0 00-.418-.424z",
                            "fill-rule": "nonzero",
                            opacity: ".602"
                        }
                    })])])]))
                }
            },
            pe = {
                functional: !0,
                render(e, t) {
                    const {
                        _c: n,
                        _v: i,
                        data: o,
                        children: a = []
                    } = t, {
                        class: r,
                        staticClass: s,
                        style: l,
                        staticStyle: c,
                        attrs: u = {},
                        ...d
                    } = o;
                    return n("svg", {
                        class: [r, s],
                        style: [l, c],
                        attrs: Object.assign({
                            width: "385",
                            height: "60",
                            xmlns: "http://www.w3.org/2000/svg",
                            "xmlns:xlink": "http://www.w3.org/1999/xlink"
                        }, u),
                        ...d
                    }, a.concat([n("defs", [n("path", {
                        attrs: {
                            id: "a",
                            d: "M0 0h385v60H0z"
                        }
                    })]), n("g", {
                        attrs: {
                            fill: "none",
                            "fill-rule": "evenodd"
                        }
                    }, [n("mask", {
                        attrs: {
                            id: "b",
                            fill: "#fff"
                        }
                    }, [n("use", {
                        attrs: {
                            "xlink:href": "#a"
                        }
                    })]), n("use", {
                        attrs: {
                            fill: "#2C2F37",
                            "fill-rule": "nonzero",
                            opacity: ".005",
                            "xlink:href": "#a"
                        }
                    }), n("g", {
                        attrs: {
                            opacity: ".342",
                            mask: "url(#b)",
                            fill: "#2560FA",
                            "fill-rule": "nonzero"
                        }
                    }, [n("path", {
                        attrs: {
                            d: "M18.111 49.333a20.026 20.026 0 01-.234-3.083c0-1.033.077-2.057.23-3.059l-5.095-3.999a3.106 3.106 0 01-.768-3.968l3.29-5.698a3.1 3.1 0 013.823-1.32l6.006 2.42a19.45 19.45 0 015.303-3.067l.913-6.413a3.097 3.097 0 013.053-2.646h6.573a3.097 3.097 0 013.053 2.648l.913 6.417a19.519 19.519 0 015.278 3.062l6.034-2.42a3.102 3.102 0 013.82 1.32l3.288 5.697a3.094 3.094 0 01-.774 3.971l-5.091 3.972c.157 1.008.234 2.044.234 3.083 0 1.033-.077 2.057-.23 3.059l5.096 3.999a3.107 3.107 0 01.768 3.968l-3.287 5.698c-.765 1.32-2.408 1.887-3.824 1.32l-6.006-2.42a19.442 19.442 0 01-5.303 3.067l-.913 6.413A3.102 3.102 0 0141.205 74h-6.573a3.097 3.097 0 01-3.053-2.648l-.913-6.417a19.519 19.519 0 01-5.278-3.062l-6.034 2.42a3.092 3.092 0 01-3.82-1.32l-3.287-5.697a3.094 3.094 0 01.774-3.971l5.09-3.972zm19.807 7.709c5.952 0 10.792-4.841 10.792-10.792 0-5.95-4.84-10.792-10.792-10.792-5.95 0-10.791 4.841-10.791 10.792 0 5.95 4.84 10.792 10.791 10.792zM-5.874 16.863c-.059-.478-.145-.95-.145-1.446 0-.497.086-.968.145-1.447l-2.778-2.102a1.544 1.544 0 01-.404-2.001l2.494-4.317a1.543 1.543 0 011.934-.65l3.197 1.347c.78-.595 1.61-1.12 2.525-1.502L1.52 1.35C1.618.58 2.272 0 3.049 0h4.986c.777 0 1.434.58 1.53 1.35l.425 3.395c.916.382 1.748.91 2.525 1.502l3.197-1.348a1.542 1.542 0 011.937.65l2.49 4.318c.39.672.217 1.529-.403 2l-2.778 2.103c.062.479.148.95.148 1.447 0 .496-.086.968-.145 1.446l2.778 2.103c.62.468.793 1.325.404 2l-2.494 4.317a1.543 1.543 0 01-1.934.65l-3.197-1.35c-.78.595-1.61 1.12-2.525 1.502l-.425 3.395a1.544 1.544 0 01-1.53 1.353H3.052a1.54 1.54 0 01-1.529-1.35l-.426-3.395c-.915-.382-1.748-.91-2.525-1.501l-3.197 1.347a1.542 1.542 0 01-1.937-.65l-2.49-4.317a1.543 1.543 0 01.403-2.001l2.775-2.103zm11.417 4.72a6.165 6.165 0 006.167-6.166A6.165 6.165 0 005.543 9.25a6.165 6.165 0 00-6.166 6.167 6.165 6.165 0 006.166 6.166z"
                        }
                    })])])]))
                }
            }
    },
    17: function (e, t, n) {
        "use strict";
        n.d(t, "e", (function () {
            return b
        })), n.d(t, "f", (function () {
            return w
        })), n.d(t, "a", (function () {
            return k
        })), n.d(t, "d", (function () {
            return P
        })), n.d(t, "c", (function () {
            return x
        })), n.d(t, "b", (function () {
            return M
        }));
        var i = n(11),
            o = n.n(i),
            a = n(12),
            r = n.n(a),
            s = n(20),
            l = n.n(s),
            c = n(21),
            u = n.n(c),
            d = n(10),
            f = n.n(d),
            _ = n(1),
            p = n.n(_),
            h = n(23),
            g = n(8),
            m = n(6);

        function v(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = f()(e);
                if (t) {
                    var o = f()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return u()(this, n)
            }
        }
        var b = function (e) {
            l()(n, e);
            var t = v(n);

            function n() {
                return o()(this, n), t.apply(this, arguments)
            }
            return r()(n, null, [{
                key: "fields",
                value: function () {
                    return {
                        id: this.uid(),
                        tab_id: this.attr(null),
                        url: this.string(""),
                        provider: this.string(""),
                        isContentSnifferOpened: this.boolean(!0),
                        contentSnifferPosition: this.string("right"),
                        video_ids: this.attr([]),
                        audio_ids: this.attr([]),
                        image_ids: this.attr([]),
                        doc_ids: this.attr([]),
                        selected_video_ids: this.attr([]),
                        selected_audio_ids: this.attr([]),
                        selected_doc_ids: this.attr([]),
                        media_found: this.boolean(!1)
                    }
                }
            }, {
                key: "beforeUpdate",
                value: function (e) {
                    (e.video_ids.length > 0 || e.audio_ids.length > 0 || e.image_ids.length > 0 || e.doc_ids.length > 0) && !e.media_found && (g.a.getters["options/isIconIndicator"] && Object(m.P)(e.tab_id, "icons/dm_128_media_found.png", null), e.media_found = !0);
                    0 === e.video_ids.length && 0 === e.audio_ids.length && 0 === e.image_ids.length && 0 === e.doc_ids.length && e.media_found && (Object(m.P)(e.tab_id, "icons/dm_128.png", null), e.media_found = !1)
                }
            }, {
                key: "afterUpdate",
                value: function () {
                    chrome.runtime.sendMessage({
                        msg: "determineIconState"
                    })
                }
            }, {
                key: "beforeDelete",
                value: function (e) {
                    g.a.dispatch("app/disableTabImgSniffer", e.tab_id)
                }
            }]), n
        }(h.b);

        function y(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = f()(e);
                if (t) {
                    var o = f()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return u()(this, n)
            }
        }
        p()(b, "entity", "tabs"), p()(b, "primaryKey", "tab_id");
        var w = function (e) {
            l()(n, e);
            var t = y(n);

            function n() {
                return o()(this, n), t.apply(this, arguments)
            }
            return r()(n, null, [{
                key: "fields",
                value: function () {
                    return {
                        id: this.uid(),
                        video_id: this.attr(null),
                        video_group_id: this.attr(null),
                        name: this.string(""),
                        url: this.string(""),
                        ext: this.string(""),
                        provider: this.string(""),
                        type: this.string(""),
                        quality: this.attr(null),
                        size: this.number(0),
                        formatted_size: this.string(""),
                        width: this.number(0),
                        height: this.number(0),
                        duration: this.number(0),
                        formatted_duration: this.string(""),
                        poster: this.attr(null),
                        download_only: this.attr(!1),
                        can_play: this.attr(!0),
                        temp_names: this.attr({}),
                        last_use: this.attr(+new Date),
                        upload_state: this.attr(""),
                        upload_active_service: this.attr("")
                    }
                }
            }, {
                key: "beforeCreate",
                value: function (e) {
                    g.a.dispatch("app/addProcessedUrl", {
                        url: e.url,
                        id: e.video_id
                    }), e.name || (e.name = "ODM video"), !e.size && e.url && chrome.runtime.sendMessage({
                        msg: "getFileSizeFromUrl",
                        url: e.url
                    }, (function (t) {
                        if (t) {
                            var i = t.size,
                                o = t.formatted_size;
                            n.update({
                                where: e.video_id,
                                data: {
                                    size: i,
                                    formatted_size: o
                                }
                            })
                        }
                    })), e.quality && (e.quality = "".concat(/[+-]?\d+(?:\.\d+)?/g.exec(e.quality)[0], "p"))
                }
            }, {
                key: "beforeUpdate",
                value: function (e) {
                    e.last_use = +new Date
                }
            }, {
                key: "beforeDelete",
                value: function (e) {
                    g.a.dispatch("app/removeProcessedUrl", e.url)
                }
            }]), n
        }(h.b);
        p()(w, "entity", "videos"), p()(w, "primaryKey", "video_id");
        var S = n(2);

        function O(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = f()(e);
                if (t) {
                    var o = f()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return u()(this, n)
            }
        }
        var k = function (e) {
            l()(n, e);
            var t = O(n);

            function n() {
                return o()(this, n), t.apply(this, arguments)
            }
            return r()(n, null, [{
                key: "fields",
                value: function () {
                    return {
                        id: this.uid(),
                        audio_id: this.attr(null),
                        artist: this.string(""),
                        album: this.string(""),
                        name: this.string("ODM Audio"),
                        ext: this.string(""),
                        url: this.string(""),
                        type: this.string(""),
                        provider: this.string(""),
                        status: this.string(S.b.ready),
                        size: this.number(0),
                        formatted_size: this.string(""),
                        duration: this.number(0),
                        bitrate: this.attr(""),
                        formatted_duration: this.string(""),
                        poster: this.attr(null),
                        temp_names: this.attr({}),
                        last_use: this.attr(+new Date),
                        various_info: this.attr({}),
                        upload_state: this.attr(""),
                        upload_active_service: this.attr("")
                    }
                }
            }, {
                key: "beforeCreate",
                value: function (e) {
                    g.a.dispatch("app/addProcessedUrl", {
                        url: e.url,
                        id: e.audio_id
                    }), !e.bitrate && e.size && e.duration && (e.bitrate = Object(m.x)(e.size, e.duration)), !e.size && e.url && e.status !== !S.b.waitRealUrl && chrome.runtime.sendMessage({
                        msg: "getFileSizeFromUrl",
                        url: e.url
                    }, (function (t) {
                        if (t) {
                            var i = t.size,
                                o = t.formatted_size,
                                a = "";
                            !e.bitrate && i && e.duration && (a = Object(m.x)(i, e.duration)), n.update({
                                where: e.audio_id,
                                data: {
                                    size: i,
                                    formatted_size: o,
                                    bitrate: a
                                }
                            })
                        }
                    }))
                }
            }, {
                key: "beforeUpdate",
                value: function (e) {
                    e.duration && !e.formatted_duration && (e.formatted_duration = Object(m.I)(e.duration)), !e.bitrate && e.size && e.duration && (e.bitrate = Object(m.x)(e.size, e.duration)), e.last_use = +new Date
                }
            }, {
                key: "beforeDelete",
                value: function (e) {
                    g.a.dispatch("app/removeProcessedUrl", e.url)
                }
            }]), n
        }(h.b);

        function C(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function D(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? C(Object(n), !0).forEach((function (t) {
                    p()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : C(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function E(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = f()(e);
                if (t) {
                    var o = f()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return u()(this, n)
            }
        }
        p()(k, "entity", "audios"), p()(k, "primaryKey", "audio_id");
        var P = function (e) {
            l()(n, e);
            var t = E(n);

            function n() {
                return o()(this, n), t.apply(this, arguments)
            }
            return r()(n, null, [{
                key: "fields",
                value: function () {
                    return {
                        id: this.uid(),
                        image_id: this.attr(null),
                        status: this.string(S.j.waitMainData),
                        url: this.string(""),
                        name: this.string(""),
                        ext: this.string(""),
                        body: this.attr({}),
                        provider: this.string(""),
                        size: this.number(0),
                        formattedSize: this.string("0"),
                        width: this.number(0),
                        height: this.number(0),
                        temp_names: this.attr({}),
                        last_use: this.attr(+new Date)
                    }
                }
            }, {
                key: "beforeCreate",
                value: function (e) {
                    g.a.dispatch("app/addProcessedUrl", {
                        url: e.url,
                        id: e.image_id
                    })
                }
            }, {
                key: "afterCreate",
                value: function (e) {
                    var t = e.width > 0 && e.width ? S.j.ready : S.j.waitResolution;
                    Object(m.D)(e.url).then((function (i) {
                        n.update({
                            where: e.image_id,
                            data: D(D({}, i), {}, {
                                status: t
                            })
                        })
                    }))
                }
            }, {
                key: "beforeUpdate",
                value: function (e) {
                    e.last_use = +new Date
                }
            }, {
                key: "beforeDelete",
                value: function (e) {
                    g.a.dispatch("app/removeProcessedUrl", e.url)
                }
            }]), n
        }(h.b);

        function A(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = f()(e);
                if (t) {
                    var o = f()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return u()(this, n)
            }
        }
        p()(P, "entity", "images"), p()(P, "primaryKey", "image_id");
        var x = function (e) {
            l()(n, e);
            var t = A(n);

            function n() {
                return o()(this, n), t.apply(this, arguments)
            }
            return r()(n, null, [{
                key: "fields",
                value: function () {
                    return {
                        id: this.uid(),
                        url: this.string(""),
                        finalUrl: this.string(""),
                        mime: this.string(""),
                        filename: this.string(""),
                        danger: this.string(""),
                        state: this.string(""),
                        paused: this.boolean(!1),
                        canResume: this.boolean(!1),
                        startTime: this.string(""),
                        exists: this.attr(),
                        endTime: this.string(""),
                        estimatedEndTime: this.attr(""),
                        referrer: this.string(""),
                        incognito: this.boolean(!1),
                        totalBytes: this.number(0),
                        fileSize: this.number(0),
                        byExtensionId: this.string(""),
                        bytesReceived: this.number(0),
                        byExtensionName: this.string(""),
                        error: this.string(""),
                        is_new: this.boolean(!1)
                    }
                }
            }]), n
        }(h.b);

        function T(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = f()(e);
                if (t) {
                    var o = f()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return u()(this, n)
            }
        }
        p()(x, "entity", "downloads");
        var M = function (e) {
            l()(n, e);
            var t = T(n);

            function n() {
                return o()(this, n), t.apply(this, arguments)
            }
            return r()(n, null, [{
                key: "fields",
                value: function () {
                    return {
                        id: this.uid(),
                        doc_id: this.attr(null),
                        url: this.string(""),
                        name: this.string(""),
                        ext: this.string(""),
                        type: this.string(""),
                        provider: this.string(""),
                        size: this.number(0),
                        formatted_size: this.string("0"),
                        temp_names: this.attr({}),
                        last_use: this.attr(+new Date),
                        upload_state: this.attr(""),
                        upload_active_service: this.attr("")
                    }
                }
            }, {
                key: "beforeCreate",
                value: function (e) {
                    g.a.dispatch("app/addProcessedUrl", {
                        url: e.url,
                        id: e.doc_id
                    }), e.name || (e.name = "ODM Document"), e.size && 0 != e.size || !e.url || chrome.runtime.sendMessage({
                        msg: "getFileSizeFromUrl",
                        url: e.url
                    }, (function (t) {
                        if (t) {
                            var i = t.size,
                                o = t.formatted_size;
                            i && o && n.update({
                                where: e.doc_id,
                                data: {
                                    size: i,
                                    formatted_size: o
                                }
                            })
                        }
                    }))
                }
            }, {
                key: "beforeUpdate",
                value: function (e) {
                    e.last_use = +new Date
                }
            }, {
                key: "beforeDelete",
                value: function (e) {
                    g.a.dispatch("app/removeProcessedUrl", e.url)
                }
            }]), n
        }(h.b);
        p()(M, "entity", "docs"), p()(M, "primaryKey", "doc_id")
    },
    2: function (e, t, n) {
        "use strict";
        n.d(t, "k", (function () {
            return r
        })), n.d(t, "c", (function () {
            return c
        })), n.d(t, "a", (function () {
            return s
        })), n.d(t, "l", (function () {
            return l
        })), n.d(t, "p", (function () {
            return u
        })), n.d(t, "o", (function () {
            return d
        })), n.d(t, "g", (function () {
            return f
        })), n.d(t, "n", (function () {
            return _
        })), n.d(t, "m", (function () {
            return p
        })), n.d(t, "j", (function () {
            return m
        })), n.d(t, "q", (function () {
            return h
        })), n.d(t, "b", (function () {
            return g
        })), n.d(t, "i", (function () {
            return v
        })), n.d(t, "h", (function () {
            return b
        })), n.d(t, "d", (function () {
            return y
        })), n.d(t, "e", (function () {
            return w
        })), n.d(t, "f", (function () {
            return S
        }));
        var i, o = n(1),
            a = n.n(o),
            r = "https://download-manager.online",
            s = {
                app_init: "".concat(r, "/app-init"),
                user_log_in: "".concat(r, "/api/applogin"),
                user_details: "".concat(r, "/api/details"),
                user_log_out: "".concat(r, "/api/logout"),
                ticket: "".concat(r, "/api/ticket")
            },
            l = {
                welcome_page: "".concat(r, "/thankyou"),
                update_page: "".concat(r, "/v4_update"),
                uninstall_page: "".concat(r, "/uninstall"),
                login_page: "".concat(r, "/login"),
                register_page: "".concat(r, "/register"),
                profile_page: "".concat(r, "/profile"),
                faq: "".concat(r, "/faq#11"),
                pricing_page: "".concat(r, "/subscriptions"),
                web_store_page: "https://chrome.google.com/webstore/detail/online-download-manager/opjjpmhoiojifppkkcdabiobhakljdgm"
            },
            c = {
                en: "English",
                de: "German",
                zh: "Chinese",
                es: "Español",
                it: "Italian",
                ua: "Українська",
                ru: "Русский",
                fi: "Suomi"
            },
            u = {
                loggedIn: "logged_in",
                deviceLimitExceeded: "device_limit_exceeded",
                loggedOut: "logged_out"
            },
            d = {
                free: ["mediaPlayer", "downloadsManagement", "ultraProviders", "imageFiltration", "imageRenaming", "cloudSync", "adultProviders", "videoRecording"]
            },
            f = {
                fb: "FB",
                ig: "IG",
                vk: "VK",
                tw: "TW",
                tt: "TT",
                cb: "CB",
                odm: "ODM"
            },
            _ = (i = {
                vm: "VM",
                dm: "DM",
                sm: "SM",
                in: "IN",
                sc: "SC",
                wi: "WI",
                bi: "BI",
                hr: "HR",
                wd: "WD",
                nt: "NT",
                yk: "YK",
                vh: "VH"
            }, a()(i, "hr", "HR"), a()(i, "vdm", "VDM"), a()(i, "gfc", "GFC"), a()(i, "rj", "RJ"), a()(i, "ph", "PH"), a()(i, "xn", "XN"), a()(i, "xh", "XH"), a()(i, "yp", "YP"), a()(i, "xv", "XV"), a()(i, "t8", "T8"), a()(i, "sx", "SX"), i),
            p = {
                "audio/mpeg": "mp3",
                "audio/mp4": "m4a",
                "audio/ogg": "ogg",
                "audio/vnd.wav": "wav"
            },
            h = {
                waitRealUrl: "WAIT_REAL_URL",
                ready: "READY"
            },
            g = {
                waitRealUrl: "WAIT_REAL_URL",
                ready: "READY"
            },
            m = {
                waitMainData: "WAIT_MAIN_DATA",
                waitResolution: "WAIT_RESOLUTION",
                ready: "READY",
                failed: "FAILED"
            },
            v = ["#text", "#comment", "title", "meta", "head", "script", "noscript", "html", "iframe", "video"],
            b = ["none", "initial", "inherit"],
            y = {
                file: "The download's filename is suspicious.",
                url: "The download's URL is known to be malicious.",
                content: "The downloaded file is known to be malicious.",
                uncommon: "The download's URL is not commonly downloaded.",
                host: "The download came from a host known to distribute malicious binaries.",
                unwanted: "The download is potentially unwanted or unsafe.",
                safe: "The download presents no known danger to the user's computer.",
                accepted: "The user has accepted the dangerous download."
            },
            w = {
                FILE_FAILED: "Generic file operation failure. File Error.",
                FILE_ACCESS_DENIED: "The file cannot be accessed. Access Denied.",
                FILE_NO_SPACE: "There is not enough room on the drive. Disk Full.",
                FILE_NAME_TOO_LONG: "The directory or file name is too long. Path Too Long.",
                FILE_TOO_LARGE: "The file is too large for the file system to handle. File Too Large.",
                FILE_VIRUS_INFECTED: "The file contains a virus.",
                FILE_TRANSIENT_ERROR: "The file was in use. Too many files are opened at once.",
                FILE_BLOCKED: "The file was blocked due to local policy. Blocked.",
                FILE_SECURITY_CHECK_FAILED: "An attempt to check the safety of the download failed due to unexpected reasons.",
                FILE_TOO_SHORT: "An attempt was made to seek past the end of a file in opening a file (as part of resuming a previously interrupted download).",
                FILE_HASH_MISMATCH: "The partial file didn't match the expected hash.",
                FILE_SAME_AS_SOURCE: "The source and the target of the download were the same.",
                NETWORK_FAILED: "Generic network failure. Network Error.",
                NETWORK_TIMEOUT: "The network operation timed out. Operation Timed Out.",
                NETWORK_DISCONNECTED: "The network connection has been lost. Connection Lost.",
                NETWORK_SERVER_DOWN: "The server has gone down. Server Down.",
                NETWORK_INVALID_REQUEST: "The network request was invalid. Being an invalid URL or being disallowed by policy",
                SERVER_FAILED: "The server indicates that the operation has failed. Server Error.",
                SERVER_NO_RANGE: "The server does not support range requests. Must restart from the beginning.",
                SERVER_BAD_CONTENT: "The server does not have the requested data. Unable to get file.",
                SERVER_UNAUTHORIZED: "Server didn't authorize access to resource.",
                SERVER_CERT_PROBLEM: "Server certificate problem.",
                SERVER_FORBIDDEN: "Server access forbidden.",
                SERVER_UNREACHABLE: "Unexpected server response. This might indicate that the responding server may not be the intended server.",
                SERVER_CONTENT_LENGTH_MISMATCH: "Connection was closed prematurely or Content-Length header was invalid.",
                USER_CANCELED: "The user canceled the download. Canceled.",
                USER_SHUTDOWN: "The user shut down the browser. Resume pending downloads if possible.",
                CRASH: "The browser crashed. Resume pending downloads if possible."
            },
            S = [{
                type: "Picture",
                extensions: ["jpg", "jpeg", "peg", "png", "gif", "tiff", "tif", "svg", "bmp", "ai", "ico", "icns", "ppm", "pgm", "pnm", "pbm", "bgp", "webp"]
            }, {
                type: "Music",
                extensions: ["mp3", "aac", "wav", "ogg", "flac", "wma", "ac3", "pcm", "aiff", "alac", "wpl", "aa", "act", "ape", "m4a", "m4p", "oga", "mogg", "tta"]
            }, {
                type: "Video",
                extensions: ["mkv", "avi", "3gp", "3g2", "mov", "bik", "wmv", "flv", "swf", "m2v", "m2p", "vob", "ifo", "mp4", "m4v", "mpg", "asf", "mpeg", "mpv", "qt", "webm", "ogv"]
            }, {
                type: "Program",
                extensions: ["exe", "apk", "com", "deb", "msi", "dmg", "bin", "vcd", "pl", "cgi", "jar", "py", "wsf"]
            }, {
                type: "Document",
                extensions: ["docx", "pdf", "doc", "txt", "rtf", "odt", "tex", "docm", "wks", "wps", "ppt", "ods", "pptx", "xlr", "xlt", "xls", "xlsx", "xml", "key", "rss", "cer", "csv"]
            }, {
                type: "Book",
                extensions: ["djvu", "fb2", "fb3", "mobi", "epub", "azw", "lit", "odf", "kfx"]
            }, {
                type: "Archive",
                extensions: ["zip", "rar", "7z", "gzip", "gz", "tar", "arj", "rpm"]
            }, {
                type: "Image",
                extensions: ["iso", "adf", "cso", "md0", "md1", "md2", "mdf"]
            }, {
                type: "System",
                extensions: ["bak", "cab", "cfg", "cpl", "cur", "dll", "dmp", "drv", "ini", "lnk", "sys", "tmp"]
            }, {
                type: "Font",
                extensions: ["fnt", "fon", "otf", "ttf"]
            }, {
                type: "Torrent",
                extensions: ["torrent"]
            }]
    },
    272: function (e, t, n) {},
    273: function (e, t, n) {},
    274: function (e, t, n) {},
    275: function (e, t, n) {},
    276: function (e, t, n) {},
    277: function (e, t, n) {},
    278: function (e, t, n) {},
    279: function (e, t, n) {},
    31: function (e, t, n) {
        "use strict";
        var i = n(19),
            o = n.n(i),
            a = n(1),
            r = n.n(a),
            s = n(5),
            l = n.n(s),
            c = n(14),
            u = n.n(c),
            d = n(11),
            f = n.n(d),
            _ = n(12),
            p = n.n(_),
            h = n(9),
            g = n.n(h),
            m = n(2),
            v = n(17),
            b = n(6);
        n(8);

        function y(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function w(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? y(Object(n), !0).forEach((function (t) {
                    r()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : y(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var S = function () {
            function e() {
                f()(this, e), this.tabId = null, this.provider = null, this._store = null, this.oldHref = window.location.href, this.isImageSnifferEnabled = !1, this.images = [], this.videos = [], this.docs = [], this.processed_video_urls = {}, this.videoUrls = [], this.tab_audio_ids = [], this.tab_doc_ids = [], this.INIT_CLASS = "md-" + chrome.runtime.id, this.INIT_DOC_CLASS = "md-" + chrome.runtime.id + "_doc", this.IMG_PROCESSOR_CLASS = "node-processed", this.adBlockEnabled = !1
            }
            var t, n, i, a, r, s, c;
            return p()(e, [{
                key: "run",
                value: (c = u()(l.a.mark((function e(t) {
                    var n, i, o, a = this;
                    return l.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (n = t.tabId, i = t.provider, o = t.store, n) {
                                    e.next = 3;
                                    break
                                }
                                return e.abrupt("return");
                            case 3:
                                return this.tabId = n, this.provider = i, this._store = o, this.minsToHrsMins = b.I, e.next = 9, this._store.getters["app/isImageSnifferEnableOnTab"](this.tabId);
                            case 9:
                                this.isImageSnifferEnabled = e.sent, this.setWatchers(n), this.detectAddBlock(), v.e.update({
                                    where: n,
                                    data: {
                                        image_ids: [],
                                        video_ids: [],
                                        audio_ids: [],
                                        doc_ids: [],
                                        selected_video_ids: [],
                                        selected_audio_ids: [],
                                        selected_doc_ids: []
                                    }
                                }).then((function () {
                                    a.runObserver()
                                }));
                            case 13:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function (e) {
                    return c.apply(this, arguments)
                })
            }, {
                key: "detectAddBlock",
                value: function () {
                    var e = document.createElement("div");
                    e.innerHTML = "&nbsp;", e.className = "adsbox", document.body.appendChild(e), 0 === e.offsetHeight && (this.adBlockEnabled = !0), e.remove()
                }
            }, {
                key: "setWatchers",
                value: function (e) {
                    var t = this,
                        n = window.location.hostname.replace("www.", "");
                    this._store.watch((function (t, n) {
                        return n["app/isImageSnifferEnableOnTab"](e)
                    }), (function (i) {
                        var o = t._store.getters["options/isSnifferEnableForDomain"]("image", n);
                        !0 === i && o ? t.grabImageFiles() : (v.e.update({
                            where: e,
                            data: {
                                image_ids: []
                            }
                        }), t.images = [], g()("*").removeClass(t.IMG_PROCESSOR_CLASS)), t.isImageSnifferEnabled = i
                    })), this._store.watch((function (e, t) {
                        return t["options/isSnifferEnableForDomain"]("image", n)
                    }), (function (n) {
                        var i = t._store.getters["app/isImageSnifferEnableOnTab"](e);
                        !0 === n && i ? t.grabImageFiles() : (v.e.update({
                            where: e,
                            data: {
                                image_ids: []
                            }
                        }), t.images = [], g()("*").removeClass(t.IMG_PROCESSOR_CLASS))
                    })), this._store.watch((function (e, t) {
                        return t["options/isSnifferEnableForDomain"]("audio", n)
                    }), (function (n) {
                        n ? t.grabAudioFiles() : (v.e.update({
                            where: e,
                            data: {
                                audio_ids: []
                            }
                        }), t.processed_track_ids = {}, t.tab_audio_ids = [])
                    })), this._store.watch((function (e, t) {
                        return t["options/isSnifferEnableForDomain"]("video", n)
                    }), (function (n) {
                        n ? t.grabVideoFiles() : (v.e.update({
                            where: e,
                            data: {
                                video_ids: []
                            }
                        }), t.videos = [], t.videoUrls = [], t.processed_video_urls = {}, g()("video, source").each((function (e, n) {
                            return g()(n).removeClass(t.INIT_CLASS)
                        })))
                    })), this._store.watch((function (e, t) {
                        return t["options/isSnifferEnableForDomain"]("doc", n)
                    }), (function (n) {
                        n ? t.grabDocFiles() : (v.e.update({
                            where: e,
                            data: {
                                doc_ids: []
                            }
                        }), t.docs = [], t.tab_doc_ids = [], g()(".".concat(t.INIT_DOC_CLASS)).each((function (e, n) {
                            return g()(n).removeClass(t.INIT_DOC_CLASS)
                        })))
                    })), this._store.watch((function (e, t) {
                        return t["options/getLinkExtsToSniff"]
                    }), (function (n) {
                        v.e.update({
                            where: e,
                            data: {
                                doc_ids: []
                            }
                        }), t.docs = [], t.tab_doc_ids = [], new Promise((function (e) {
                            g()("a").each((function (e, n) {
                                return g()(n).removeClass(t.INIT_DOC_CLASS)
                            })), setTimeout((function () {
                                e("reseted")
                            }), 500)
                        })).then((function () {
                            t.grabDocFiles()
                        }))
                    }))
                }
            }, {
                key: "runObserver",
                value: function () {
                    var e = this;
                    this.videoUrls = [], this.search(), setInterval((function () {
                        e.search()
                    }), 1500)
                }
            }, {
                key: "search",
                value: function () {
                    var e = window.location.hostname.replace("www.", ""),
                        t = this._store.getters["options/isSnifferEnableForDomain"]("video", e),
                        n = this._store.getters["options/isSnifferEnableForDomain"]("audio", e),
                        i = this._store.getters["options/isSnifferEnableForDomain"]("image", e),
                        o = this._store.getters["options/isSnifferEnableForDomain"]("doc", e);
                    t && this.grabVideoFiles(), n && this.grabAudioFiles(), this.isImageSnifferEnabled && i && this.grabImageFiles(), o && this.grabDocFiles()
                }
            }, {
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    g()("video").not("." + this.INIT_CLASS).each((function (t, n) {
                        g()(n).addClass(e.INIT_CLASS);
                        var i = g()(n).find("source:not(" + e.INIT_CLASS + ")");
                        i.length > 0 ? i.each((function (t, n) {
                            var i = g()(n),
                                o = i.attr("type").split("/")[0],
                                a = i.attr("src");
                            i.addClass(e.INIT_CLASS), "video" === o ? e.processVideo(n) : "audio" === o && -1 === a.indexOf("blob:") && e.addTrack({
                                url: a
                            })
                        })) : e.processVideo(n)
                    }))
                }
            }, {
                key: "processVideo",
                value: function (e) {
                    var t = e.src;
                    t && -1 === t.indexOf("blob:") && this.addVideo(e)
                }
            }, {
                key: "addVideo",
                value: (s = u()(l.a.mark((function e(t) {
                    var n, i, a, r, s = this;
                    return l.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this._store.getters["app/isUrlProcessed"](t.src);
                            case 2:
                                if (n = e.sent, -1 === this.videoUrls.indexOf(t.src)) {
                                    e.next = 5;
                                    break
                                }
                                return e.abrupt("return");
                            case 5:
                                if (this.videoUrls.push(t.src), n) {
                                    e.next = 14;
                                    break
                                }
                                return e.next = 9, this.getVideoData(t);
                            case 9:
                                i = e.sent, a = this.tabId, v.f.insert({
                                    data: w({}, i)
                                }).then((function (e) {
                                    var t = e.videos[0]; - 1 === s.videos.indexOf(n) && (s.videos = [].concat(o()(s.videos), [t.video_id]).filter((function (e, t, n) {
                                        return n.indexOf(e) === t
                                    })), v.e.update({
                                        where: a,
                                        data: {
                                            video_ids: o()(s.videos)
                                        }
                                    }))
                                })), e.next = 15;
                                break;
                            case 14:
                                n && (r = this.tabId, -1 === this.videos.indexOf(n) && (this.videos = [].concat(o()(this.videos), [n]).filter((function (e, t, n) {
                                    return n.indexOf(e) === t
                                })), v.e.update({
                                    where: r,
                                    data: {
                                        video_ids: o()(this.videos)
                                    }
                                })));
                            case 15:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function (e) {
                    return s.apply(this, arguments)
                })
            }, {
                key: "getVideoData",
                value: function (e) {
                    var t = this,
                        n = "video" === e.nodeName.toLowerCase() ? e : e.parentElement;
                    return new Promise(function () {
                        var i = u()(l.a.mark((function i(o) {
                            var a, r, s, c;
                            return l.a.wrap((function (i) {
                                for (;;) switch (i.prev = i.next) {
                                    case 0:
                                        return i.next = 2, t.getFileSize(e.src);
                                    case 2:
                                        return a = i.sent, r = t.getFormatSize(a), i.next = 6, t.getVideoTagParams(n);
                                    case 6:
                                        s = i.sent, c = t.getFileNameFromUrl(e.src, "video"), o(w({
                                            video_id: t.hashCode(),
                                            video_group_id: t.hashCode(),
                                            name: c.name,
                                            ext: c.ext,
                                            url: e.src,
                                            provider: t.provider,
                                            quality: "",
                                            type: e.type || "video/".concat(c.ext),
                                            poster: n.poster || "",
                                            size: a,
                                            formatted_size: r
                                        }, s));
                                    case 9:
                                    case "end":
                                        return i.stop()
                                }
                            }), i)
                        })));
                        return function (e) {
                            return i.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "getVideoTagParams",
                value: function (e) {
                    var t = this;
                    return new Promise((function (n) {
                        var i = setInterval((function () {
                            e.readyState >= 3 && (n({
                                width: e.videoWidth,
                                height: e.videoHeight,
                                duration: e.duration,
                                formatted_duration: t.minsToHrsMins(Math.round(e.duration))
                            }), clearInterval(i))
                        }), 500)
                    }))
                }
            }, {
                key: "updateVideoUrl",
                value: function (e, t, n) {
                    this.getVideoData(e, (function (e) {
                        var i = e.find((function (e) {
                            return e.quality = t
                        }));
                        n(i.url)
                    }))
                }
            }, {
                key: "grabAudioFiles",
                value: function () {
                    return !0
                }
            }, {
                key: "grabImageFiles",
                value: (r = u()(l.a.mark((function e() {
                    return l.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                this.processingImageNodes(o()(document.querySelectorAll("*:not(." + this.IMG_PROCESSOR_CLASS + ")")));
                            case 1:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function () {
                    return r.apply(this, arguments)
                })
            }, {
                key: "mutationImagesHandler",
                value: function (e) {
                    var t = e.attributeName,
                        n = e.target;
                    "style" === t && this.processingImageNodes([n]), "src" !== t && "srcset" !== t || this.processingImageNodes([n])
                }
            }, {
                key: "processingImageNodes",
                value: function (e) {
                    var t = this;
                    e.forEach((function (e) {
                        if ("IFRAME" !== e.nodeName) {
                            var n = "CANVAS" === e.nodeName ? e.toDataURL("image/png;base64") : t.getImageUrl(e);
                            n && t.ignoreImageNodes(e) && (t.generateImageObj(n), g()(e).addClass(t.IMG_PROCESSOR_CLASS))
                        } else e.onload = function () {
                            t.processingImageNodes(o()(e.contentWindow.document.querySelectorAll("*:not(." + t.IMG_PROCESSOR_CLASS + ")")))
                        }
                    }))
                }
            }, {
                key: "getImageUrl",
                value: function (e) {
                    var t = e.src;
                    if (!t) {
                        var n = getComputedStyle(e);
                        return this.getStyleUrl(n)
                    }
                    return e.outerHTML.includes("captcha") ? "" : t
                }
            }, {
                key: "getStyleUrl",
                value: function (e) {
                    if (e && e.backgroundImage && !m.h.includes(e.backgroundImage) && !e.backgroundImage.includes("gradient")) return e.backgroundImage.replace('url("', "").replace('")', "")
                }
            }, {
                key: "ignoreImageNodes",
                value: function (e) {
                    var t = e.nodeName,
                        n = e.localName,
                        i = void 0 === n ? null : n;
                    return !m.i.includes(i || t.toLowerCase())
                }
            }, {
                key: "generateImageObj",
                value: function (e) {
                    var t = this,
                        n = this._store.getters["app/isUrlProcessed"](e),
                        i = this.tabId;
                    if (n) n && -1 === this.images.indexOf(n) && (this.images = [].concat(o()(this.images), [n]).filter((function (e, t, n) {
                        return n.indexOf(e) === t
                    })), v.e.update({
                        where: i,
                        data: {
                            image_ids: o()(this.images)
                        }
                    }));
                    else {
                        var a = g()('img[src="' + e + '"]')[0],
                            r = {};
                        a && a.naturalWidth > 0 && a.naturalHeight > 0 && (r = {
                            width: a.naturalWidth,
                            height: a.naturalHeight
                        }), v.d.insert({
                            data: w({
                                image_id: this.hashCode(),
                                url: e,
                                provider: this.provider
                            }, r)
                        }).then((function (e) {
                            var a = e.images[0]; - 1 === t.images.indexOf(n) && (t.images = [].concat(o()(t.images), [a.image_id]).filter((function (e, t, n) {
                                return n.indexOf(e) === t
                            })), v.e.update({
                                where: i,
                                data: {
                                    image_ids: o()(t.images)
                                }
                            }))
                        }))
                    }
                }
            }, {
                key: "grabDocFiles",
                value: function () {
                    var e = this;
                    0 !== this._store.getters["options/getLinkExtsToSniff"].length && g()("*[href], *[src]").not("img").not("iframe").not("video").not("audio").not("." + this.INIT_DOC_CLASS).not("." + this.INIT_CLASS).each(function () {
                        var t = u()(l.a.mark((function t(n, i) {
                            var a, r, s, c, u, d;
                            return l.a.wrap((function (t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (a = g()(i), r = !1, "A" == i.nodeName && (r = g()(i).text().replaceAll("\n", "").trim()), a.addClass(e.INIT_DOC_CLASS), s = a.prop("href") || a.prop("src")) {
                                            t.next = 7;
                                            break
                                        }
                                        return t.abrupt("return", !1);
                                    case 7:
                                        return t.next = 9, e._store.getters["app/isUrlProcessed"](s);
                                    case 9:
                                        if (!(c = t.sent) || -1 !== e.tab_doc_ids.indexOf(c)) {
                                            t.next = 16;
                                            break
                                        }
                                        console.log(c, e.tab_doc_ids), e.tab_doc_ids.push(c), v.e.update({
                                            where: e.tabId,
                                            data: {
                                                doc_ids: o()(e.tab_doc_ids)
                                            }
                                        }), t.next = 20;
                                        break;
                                    case 16:
                                        if (u = e.getFileNameFromUrl(s), !(d = u.ext) || -1 !== e._store.getters["options/getLinkExtsToSniff"].indexOf(d)) {
                                            t.next = 19;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 19:
                                        e.processDoc(s, r);
                                    case 20:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function (e, n) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "processDoc",
                value: (a = u()(l.a.mark((function e(t, n) {
                    var i, o, a, r, s;
                    return l.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (t && "#" !== t) {
                                    e.next = 2;
                                    break
                                }
                                return e.abrupt("return");
                            case 2:
                                return e.next = 4, this.checkLink(t);
                            case 4:
                                if (i = e.sent, o = i.name, a = i.ext, r = i.size, s = i.formattedSize, a && -1 !== this._store.getters["options/getLinkExtsToSniff"].indexOf(a)) {
                                    e.next = 11;
                                    break
                                }
                                return e.abrupt("return", !1);
                            case 11:
                                this.addDoc({
                                    name: n && "".concat(n, "(").concat(o, ")") || o || "File",
                                    ext: a,
                                    url: t,
                                    size: r,
                                    formatted_size: s,
                                    type: "document/".concat(a)
                                });
                            case 12:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function (e, t) {
                    return a.apply(this, arguments)
                })
            }, {
                key: "checkLink",
                value: function (e) {
                    return new Promise((function (t) {
                        chrome.runtime.sendMessage({
                            msg: "checkLink",
                            value: e
                        }, (function (e) {
                            return t(e)
                        }))
                    }))
                }
            }, {
                key: "getObjectFromStore",
                value: function (e, t) {
                    return e.query().where("url", t).first()
                }
            }, {
                key: "getFileSize",
                value: function (e) {
                    return new Promise((function (t) {
                        var n = new XMLHttpRequest;
                        n.open("HEAD", e, !0), n.onreadystatechange = function () {
                            this.readyState === this.DONE && t(parseInt(n.getResponseHeader("Content-Length")))
                        }, n.send()
                    }))
                }
            }, {
                key: "getFormatSize",
                value: function (e) {
                    if (Math.abs(e) < 1024) return e + " B";
                    var t = ["kB", "MB", "GB"],
                        n = -1;
                    do {
                        e /= 1024, ++n
                    } while (Math.abs(e) >= 1024 && n < t.length - 1);
                    return e.toFixed(1) + " " + t[n]
                }
            }, {
                key: "getFileNameFromUrl",
                value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "file",
                        n = new URL(e).pathname.split("/"),
                        i = n[n.length - 1].split(".");
                    return {
                        name: i[0] || t,
                        ext: i[i.length - 1] || null
                    }
                }
            }, {
                key: "hashCode",
                value: function () {
                    return Math.random().toString(36).substring(2) + (new Date).getTime().toString(36)
                }
            }, {
                key: "parseURL",
                value: function (e) {
                    for (var t = {
                            strictMode: !1,
                            key: ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"],
                            q: {
                                name: "queryKey",
                                parser: /(?:^|&)([^&=]*)=?([^&]*)/g
                            },
                            parser: {
                                strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
                                loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/\/?)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
                            }
                        }, n = t.parser[t.strictMode ? "strict" : "loose"].exec(e), i = {}, o = 14; o--;) i[t.key[o]] = n[o] || "";
                    var a = {};
                    return "" !== i.protocol && (a.scheme = i.protocol), "" !== i.host && (a.host = i.host), "" !== i.port && (a.port = i.port), "" !== i.user && (a.user = i.user), "" !== i.password && (a.pass = i.password), "" !== i.path && (a.path = i.path), "" !== i.query && (a.query = i.query), "" !== i.anchor && (a.fragment = i.anchor), a
                }
            }, {
                key: "Fetch",
                value: function (e, t) {
                    return void 0 === t && (t = !0), new Promise((function (n) {
                        chrome.runtime.sendMessage({
                            msg: "makeXHRrequest",
                            url: e,
                            config: {},
                            responseType: "text"
                        }, (function (e) {
                            n(t ? JSON.parse(e) : e)
                        }))
                    }))
                }
            }, {
                key: "ParseQuery",
                value: function (e) {
                    for (var t = {}, n = void 0, i = /[?&]?([^=]+)(?:=([^&]*))?/g; n = i.exec(e);) n[1] && n[2] ? t[n[1]] = n[2] : n[1] && (t[n[1]] = "");
                    return t
                }
            }, {
                key: "addTrack",
                value: (i = u()(l.a.mark((function e(t) {
                    var n, i = this;
                    return l.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this._store.getters["app/isUrlProcessed"](t.url);
                            case 2:
                                (n = e.sent) ? n && -1 === this.tab_audio_ids.indexOf(n) && (this.tab_audio_ids.push(n), v.e.update({
                                    where: this.tabId,
                                    data: {
                                        audio_ids: o()(this.tab_audio_ids)
                                    }
                                })): v.a.insert({
                                    data: w(w({}, t), {}, {
                                        audio_id: this.hashCode(),
                                        provider: this.provider
                                    })
                                }).then(function () {
                                    var e = u()(l.a.mark((function e(t) {
                                        var a, r;
                                        return l.a.wrap((function (e) {
                                            for (;;) switch (e.prev = e.next) {
                                                case 0:
                                                    a = t.audios, r = a[0], -1 === i.tab_audio_ids.indexOf(n) && (i.tab_audio_ids.push(r.audio_id), v.e.update({
                                                        where: i.tabId,
                                                        data: {
                                                            audio_ids: o()(i.tab_audio_ids)
                                                        }
                                                    }));
                                                case 3:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    })));
                                    return function (t) {
                                        return e.apply(this, arguments)
                                    }
                                }());
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function (e) {
                    return i.apply(this, arguments)
                })
            }, {
                key: "addDoc",
                value: (n = u()(l.a.mark((function e(t) {
                    var n, i = this;
                    return l.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this._store.getters["app/isUrlProcessed"](t.url);
                            case 2:
                                (n = e.sent) ? n && -1 === this.tab_doc_ids.indexOf(n) && (this.tab_doc_ids.push(n), v.e.update({
                                    where: this.tabId,
                                    data: {
                                        doc_ids: o()(this.tab_doc_ids)
                                    }
                                })): v.b.insert({
                                    data: w(w({}, t), {}, {
                                        doc_id: this.hashCode(),
                                        provider: this.provider
                                    })
                                }).then(function () {
                                    var e = u()(l.a.mark((function e(t) {
                                        var a, r;
                                        return l.a.wrap((function (e) {
                                            for (;;) switch (e.prev = e.next) {
                                                case 0:
                                                    a = t.docs, r = a[0], -1 === i.tab_doc_ids.indexOf(n) && (i.tab_doc_ids.push(r.doc_id), v.e.update({
                                                        where: i.tabId,
                                                        data: {
                                                            doc_ids: o()(i.tab_doc_ids)
                                                        }
                                                    }));
                                                case 3:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    })));
                                    return function (t) {
                                        return e.apply(this, arguments)
                                    }
                                }());
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function (e) {
                    return n.apply(this, arguments)
                })
            }, {
                key: "customAddVideo",
                value: (t = u()(l.a.mark((function e(t) {
                    var n, i, a, r, s = this,
                        c = arguments;
                    return l.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (n = c.length > 1 && void 0 !== c[1] && c[1], i = this._store.getters["app/isUrlProcessed"](t.url), !this.processed_video_urls[t.url]) {
                                    e.next = 4;
                                    break
                                }
                                return e.abrupt("return");
                            case 4:
                                this.processed_video_urls[t.url] = 1, n && (t.name = Object(b.N)(t.name, "video")), i ? i && (r = this.tabId, -1 === this.videos.indexOf(i) && (this.videos = [].concat(o()(this.videos), [i]).filter((function (e, t, n) {
                                    return n.indexOf(e) === t
                                })), v.e.update({
                                    where: r,
                                    data: {
                                        video_ids: o()(this.videos)
                                    }
                                }))) : (a = this.tabId, v.f.insert({
                                    data: w({}, t)
                                }).then((function (e) {
                                    var t = e.videos[0]; - 1 === s.videos.indexOf(i) && (s.videos = [].concat(o()(s.videos), [t.video_id]).filter((function (e, t, n) {
                                        return n.indexOf(e) === t
                                    })), v.e.update({
                                        where: a,
                                        data: {
                                            video_ids: o()(s.videos)
                                        }
                                    }))
                                })));
                            case 7:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function (e) {
                    return t.apply(this, arguments)
                })
            }]), e
        }();
        t.a = S
    },
    35: function (e, t, n) {
        "use strict";
        n.d(t, "c", (function () {
            return u
        })), n.d(t, "b", (function () {
            return d
        })), n.d(t, "d", (function () {
            return f
        })), n.d(t, "a", (function () {
            return _
        }));
        var i = n(1),
            o = n.n(i),
            a = n(2),
            r = n(8);

        function s(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function l(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? s(Object(n), !0).forEach((function (t) {
                    o()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : s(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var c = {
                Accept: "application/json",
                "Content-Type": "application/json"
            },
            u = function (e) {
                return new Promise((function (t, n) {
                    var i = r.a.getters["user/getAppId"];
                    i && (c.uid = i), fetch(a.a.user_log_in, {
                        method: "POST",
                        headers: l(l({}, c), {}, {
                            Authorization: "Bearer ".concat(e)
                        }),
                        credentials: "omit"
                    }).then((function (e) {
                        return e.json()
                    })).then((function (i) {
                        var o = i.status,
                            a = i.message;
                        o && "error" !== o && "warning" !== o ? "success" === o && t(e) : n(a)
                    }))
                }))
            },
            d = function (e) {
                return new Promise((function (t, n) {
                    var i = r.a.getters["user/getAppId"];
                    i && (c.uid = i), fetch(a.a.user_details, {
                        headers: l(l({}, c), {}, {
                            Authorization: "Bearer ".concat(e)
                        }),
                        credentials: "omit"
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        var i = e.status,
                            o = e.message,
                            a = e.user_data;
                        i && "error" !== i && "warning" !== i ? "success" === i && t(a) : n(o)
                    }))
                }))
            },
            f = function (e) {
                return new Promise((function (t, n) {
                    var i = r.a.getters["user/getAppId"];
                    i && (c.uid = i), fetch(a.a.user_log_out, {
                        method: "POST",
                        headers: l(l({}, c), {}, {
                            Authorization: "Bearer ".concat(e)
                        }),
                        credentials: "omit",
                        body: JSON.stringify({
                            api_token: e
                        })
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        var i = e.status,
                            o = e.message;
                        i && "error" !== i ? "success" === i && t(i) : n(o)
                    }))
                }))
            },
            _ = function (e) {
                var t = e.userToken,
                    n = e.app_uuid,
                    i = e.url,
                    o = e.type;
                return new Promise((function (e, s) {
                    var u = r.a.getters["user/getAppId"];
                    u && (c.uid = u), fetch(a.a.ticket, {
                        method: "POST",
                        headers: l(l({}, c), {}, {
                            Authorization: "Bearer ".concat(t)
                        }),
                        credentials: "omit",
                        body: JSON.stringify({
                            userToken: t,
                            app_uuid: n,
                            url: i,
                            type: o
                        })
                    }).then((function (e) {
                        return e.json()
                    })).then((function (t) {
                        var n = t.status,
                            i = t.message,
                            o = t.data;
                        n && "error" !== n ? "success" === n && e(i) : s(o)
                    }))
                }))
            }
    },
    36: function (e, t, n) {
        "use strict";
        n.d(t, "f", (function () {
            return p
        })), n.d(t, "c", (function () {
            return f
        })), n.d(t, "d", (function () {
            return _
        })), n.d(t, "b", (function () {
            return h
        })), n.d(t, "g", (function () {
            return g
        })), n.d(t, "a", (function () {
            return m
        })), n.d(t, "e", (function () {
            return v
        }));
        var i = n(5),
            o = n.n(i),
            a = n(14),
            r = n.n(a),
            s = n(6),
            l = n(8),
            c = "469177784269-b7qa3bvmj7ujijghl5tsbist44ecttkk.apps.googleusercontent.com",
            u = "V5bsRcnKx_YYnKJaD1dqBJUT",
            d = "https://download-manager.online",
            f = "https://accounts.google.com/o/oauth2/auth" + "?scope=https%3A//www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/userinfo.profile&include_granted_scopes=true&state=state_parameter_passthrough_value&redirect_uri=" + d + "&client_id=" + c + "&response_type=code&prompt=consent&access_type=offline",
            _ = function (e) {
                return new Promise((function (t) {
                    fetch("https://oauth2.googleapis.com/token", {
                        method: "POST",
                        body: JSON.stringify({
                            code: e,
                            client_id: c,
                            client_secret: u,
                            redirect_uri: d,
                            grant_type: "authorization_code"
                        })
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            },
            p = function (e) {
                return new Promise((function (t) {
                    console.log(e), fetch("https://oauth2.googleapis.com/token", {
                        method: "POST",
                        body: JSON.stringify({
                            client_id: c,
                            client_secret: u,
                            refresh_token: e,
                            grant_type: "refresh_token"
                        })
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            },
            h = function (e) {
                return new Promise((function (t) {
                    fetch("https://www.googleapis.com/oauth2/v3/userinfo", {
                        method: "GET",
                        headers: {
                            Authorization: "Bearer ".concat(e)
                        }
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            },
            g = function (e) {
                return new Promise(function () {
                    var t = r()(o.a.mark((function t(n) {
                        var i, a, r, c, u, d;
                        return o.a.wrap((function (t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return i = l.a.getters["user/getCloudServiceData"]("googleDrive").access_token, t.next = 3, Object(s.R)(e.url);
                                case 3:
                                    a = t.sent, r = "".concat(e.type, "/").concat(e.ext), c = new Blob([a], {
                                        type: r
                                    }), u = {
                                        name: e.name,
                                        mimeType: r
                                    }, (d = new FormData).append("metadata", new Blob([JSON.stringify(u)], {
                                        type: "application/json"
                                    })), d.append("file", c), fetch("https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id", {
                                        method: "POST",
                                        headers: new Headers({
                                            Authorization: "Bearer ".concat(i)
                                        }),
                                        body: d
                                    }).then((function (e) {
                                        return e.json()
                                    })).then((function (e) {
                                        n(e)
                                    }));
                                case 11:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })));
                    return function (e) {
                        return t.apply(this, arguments)
                    }
                }())
            },
            m = function (e) {
                return new Promise((function (t) {
                    var n = l.a.getters["user/getCloudServiceData"]("googleDrive").access_token;
                    fetch("https://www.googleapis.com/drive/v2/files/".concat(e), {
                        method: "GET",
                        headers: {
                            Authorization: "Bearer ".concat(n)
                        }
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            },
            v = function (e) {
                return new Promise((function (t) {
                    fetch("https://oauth2.googleapis.com/revoke?token=".concat(e), {
                        method: "POST",
                        headers: {
                            Authorization: "Bearer ".concat(e)
                        }
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            }
    },
    42: function (e, t, n) {
        "use strict";
        n.d(t, "c", (function () {
            return l
        })), n.d(t, "b", (function () {
            return c
        })), n.d(t, "e", (function () {
            return u
        })), n.d(t, "a", (function () {
            return d
        })), n.d(t, "d", (function () {
            return f
        }));
        var i = n(2),
            o = n(8),
            a = n(6),
            r = "fmqrbky26fx0x71",
            s = (i.k, "token"),
            l = "https://www.dropbox.com/oauth2/authorize?client_id=".concat(r, "&redirect_uri=").concat(i.k, "&response_type=").concat(s),
            c = function (e) {
                return new Promise((function (t) {
                    fetch("https://api.dropboxapi.com/2/users/get_current_account", {
                        method: "POST",
                        headers: {
                            Authorization: "Bearer ".concat(e)
                        }
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            },
            u = function (e) {
                return new Promise((function (t, n) {
                    var i = o.a.getters["user/getCloudServiceData"]("dropbox").token,
                        r = Object(a.N)(e.name, e.type.split("/")[0]),
                        s = "".concat(r, ".").concat(e.ext);
                    fetch("https://api.dropboxapi.com/2/files/save_url", {
                        method: "POST",
                        headers: {
                            Authorization: "Bearer ".concat(i),
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            path: "/".concat(s),
                            url: e.url
                        })
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    })).catch((function (e) {
                        return n(e)
                    }))
                }))
            },
            d = function (e) {
                return new Promise((function (t) {
                    var n = o.a.getters["user/getCloudServiceData"]("dropbox").token;
                    fetch("https://api.dropboxapi.com/2/files/save_url/check_job_status", {
                        method: "POST",
                        headers: {
                            Authorization: "Bearer ".concat(n),
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            async_job_id: e
                        })
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            },
            f = function (e) {
                return new Promise((function (t) {
                    fetch("https://api.dropboxapi.com/2/auth/token/revoke", {
                        method: "POST",
                        headers: {
                            Authorization: "Bearer ".concat(e)
                        }
                    }).then((function (e) {
                        return e.json()
                    })).then((function (e) {
                        return t(e)
                    }))
                }))
            }
    },
    435: function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1),
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = __webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = __webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = __webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__),
            _abstract_provider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(31),
            jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9),
            jquery__WEBPACK_IMPORTED_MODULE_7___default = __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__),
            _models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(17);

        function ownKeys(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function _objectSpread(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ownKeys(Object(n), !0).forEach((function (t) {
                    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function _createSuper(e) {
            var t = _isNativeReflectConstruct();
            return function () {
                var n, i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);
                if (t) {
                    var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, n)
            }
        }

        function _isNativeReflectConstruct() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
            } catch (e) {
                return !1
            }
        }
        var NTProvider = function (_AbstractProvider) {
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(NTProvider, _AbstractProvider);
            var _super = _createSuper(NTProvider);

            function NTProvider() {
                return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, NTProvider), _super.apply(this, arguments)
            }
            return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(NTProvider, [{
                key: "grabVideoFiles",
                value: function grabVideoFiles() {
                    var _this = this;
                    if (this.oldHref !== window.location.href && (this.oldHref = window.location.href, _models__WEBPACK_IMPORTED_MODULE_8__.e.update({
                            where: this.tabId,
                            data: {
                                audio_ids: [],
                                selected_audio_ids: []
                            }
                        }).then((function () {
                            _this.videos = [], _this.processed_video_urls = {}, jquery__WEBPACK_IMPORTED_MODULE_7___default()("#site-content div[itemid]").removeClass(_this.INIT_CLASS)
                        }))), this.oldHref.indexOf("videos")) {
                        var $script = jquery__WEBPACK_IMPORTED_MODULE_7___default()("script:contains(window.__preloadedData)").not("." + this.INIT_CLASS);
                        $script.each((function (i, script) {
                            var $script = jquery__WEBPACK_IMPORTED_MODULE_7___default()(script);
                            $script.addClass(_this.INIT_CLASS);
                            var config = eval($script.text()).initialState,
                                activeVideoId = null;
                            for (var name in config) name.indexOf("$Video") > -1 && name.indexOf("headline") > -1 && (activeVideoId = name.split("$Video:")[1].split(".headline")[0], activeVideoId && _this.parseVideos(config, activeVideoId))
                        }))
                    }
                }
            }, {
                key: "parseVideos",
                value: function (e, t) {
                    var n = e["Video:".concat(t)];
                    if (console.log(e, n), !n || n.isLive) return !1;
                    var i = "",
                        o = n.promotionalMedia.id,
                        a = e[o]['crops({"cropNames":["MEDIUM_SQUARE","MASTER"]}).0'] && e[o]['crops({"cropNames":["MEDIUM_SQUARE","MASTER"]}).0'].renditions[0].id;
                    a && (i = e[a].url);
                    for (var r = {
                            video_group_id: this.hashCode(),
                            name: n.promotionalHeadline,
                            poster: i,
                            type: "video/mp4",
                            ext: "mp4"
                        }, s = n.renditions, l = 0; l < s.length; l++) {
                        var c = e[s[l].id]; - 1 !== c.type.indexOf("mp4") && -1 === c.type.indexOf("hls") && this.customAddVideo(_objectSpread(_objectSpread({}, r), {}, {
                            video_id: this.hashCode(),
                            url: c.url,
                            quality: parseInt(c.type.replace("video_", "").replace("_mp4", ""))
                        }))
                    }
                }
            }]), NTProvider
        }(_abstract_provider__WEBPACK_IMPORTED_MODULE_6__.a);
        __webpack_exports__.a = NTProvider
    },
    436: function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1),
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__),
            _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5),
            _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__),
            _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14),
            _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(11),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = __webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = __webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = __webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(21),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default = __webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(10),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default = __webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__),
            _abstract_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(31),
            jquery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(9),
            jquery__WEBPACK_IMPORTED_MODULE_9___default = __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_9__),
            _models__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(17);

        function ownKeys(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function _objectSpread(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ownKeys(Object(n), !0).forEach((function (t) {
                    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function _createSuper(e) {
            var t = _isNativeReflectConstruct();
            return function () {
                var n, i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default()(e);
                if (t) {
                    var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default()(this, n)
            }
        }

        function _isNativeReflectConstruct() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
            } catch (e) {
                return !1
            }
        }
        var RJProvider = function (_AbstractProvider) {
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(RJProvider, _AbstractProvider);
            var _super = _createSuper(RJProvider),
                _grabVideoFiles;

            function RJProvider() {
                var e;
                return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, RJProvider), (e = _super.call(this)).videos = [], e.processed_video_urls = {}, e.videoConfigHost = "https://www.radiojavan.com/videos/video_host", e.audioConfigHost = "https://www.radiojavan.com/mp3s/mp3_host", e.podcastConfigHost = "https://www.radiojavan.com/podcasts/podcast_host", e
            }
            return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(RJProvider, [{
                key: "grabVideoFiles",
                value: (_grabVideoFiles = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark((function e() {
                    var t = this;
                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (this.oldHref === document.location.href) {
                                    e.next = 4;
                                    break
                                }
                                return this.oldHref = document.location.href, e.next = 4, this.clearMedia();
                            case 4:
                                jquery__WEBPACK_IMPORTED_MODULE_9___default()(".listView a, .grid a").not(".".concat(this.INIT_CLASS, "_video")).each((function (e, n) {
                                    jquery__WEBPACK_IMPORTED_MODULE_9___default()(n).addClass("".concat(t.INIT_CLASS, "_video")), n.href && -1 !== n.href.indexOf("video") && t.getSingleVideo(n.href)
                                }));
                            case 6:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function () {
                    return _grabVideoFiles.apply(this, arguments)
                })
            }, {
                key: "clearMedia",
                value: function () {
                    var e = this;
                    return new Promise((function (t) {
                        _models__WEBPACK_IMPORTED_MODULE_10__.e.update({
                            where: e.tabId,
                            data: {
                                audio_ids: [],
                                selected_audio_ids: [],
                                video_ids: [],
                                selected_video_ids: []
                            }
                        }).then((function () {
                            e.videos = [], e.tab_audio_ids = [], jquery__WEBPACK_IMPORTED_MODULE_9___default()("a").removeClass("".concat(e.INIT_CLASS, "_video")).removeClass("".concat(e.INIT_CLASS, "_audio")), t("cleared")
                        }))
                    }))
                }
            }, {
                key: "getSingleVideo",
                value: function (e) {
                    var t = this;
                    this.Fetch(e, !1).then((function (e) {
                        var n = jquery__WEBPACK_IMPORTED_MODULE_9___default()("<html>", {
                            html: e
                        });
                        if (-1 !== n.find("video").length) {
                            var i = n.find("script:contains('RJ.videoPermlink')"),
                                o = n.find('meta[itemprop="name"]').attr("content"),
                                a = n.find('meta[itemprop="thumbnailUrl"]').attr("content");
                            t.getVideoFromPlayerScript(i, o, a)
                        }
                    }))
                }
            }, {
                key: "getVideoFromPlayerScript",
                value: function () {
                    var _getVideoFromPlayerScript = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark((function _callee2($script, name, poster) {
                        var scriptInner, RJ, host, config, key;
                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap((function _callee2$(_context2) {
                            for (;;) switch (_context2.prev = _context2.next) {
                                case 0:
                                    return scriptInner = $script.html().replace("setupVideoPing();", ""), RJ = {}, eval(scriptInner), _context2.next = 5, this.getMediaHost(this.videoConfigHost, RJ.videoPermlink);
                                case 5:
                                    host = _context2.sent, host = host.replace("media/", ""), config = {
                                        video_group_id: this.hashCode(),
                                        name: name,
                                        poster: poster,
                                        ext: "mp4",
                                        type: "video/mp4"
                                    }, _context2.t0 = _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.keys(RJ);
                                case 9:
                                    if ((_context2.t1 = _context2.t0()).done) {
                                        _context2.next = 28;
                                        break
                                    }
                                    if (key = _context2.t1.value, "string" == typeof RJ[key]) {
                                        _context2.next = 13;
                                        break
                                    }
                                    return _context2.abrupt("continue", 9);
                                case 13:
                                    _context2.t2 = key, _context2.next = "video360p" === _context2.t2 ? 16 : "video480p" === _context2.t2 ? 18 : "video720p" === _context2.t2 ? 20 : "video1080p" === _context2.t2 ? 22 : "video4k" === _context2.t2 ? 24 : 26;
                                    break;
                                case 16:
                                    return this.customAddVideo(_objectSpread(_objectSpread({}, config), {}, {
                                        video_id: this.hashCode(),
                                        quality: "360p",
                                        url: "".concat(host).concat(RJ[key])
                                    })), _context2.abrupt("break", 26);
                                case 18:
                                    return this.customAddVideo(_objectSpread(_objectSpread({}, config), {}, {
                                        video_id: this.hashCode(),
                                        quality: "480p",
                                        url: "".concat(host).concat(RJ[key])
                                    })), _context2.abrupt("break", 26);
                                case 20:
                                    return this.customAddVideo(_objectSpread(_objectSpread({}, config), {}, {
                                        video_id: this.hashCode(),
                                        quality: "720p",
                                        url: "".concat(host).concat(RJ[key])
                                    })), _context2.abrupt("break", 26);
                                case 22:
                                    return this.customAddVideo(_objectSpread(_objectSpread({}, config), {}, {
                                        video_id: this.hashCode(),
                                        quality: "1080p",
                                        url: "".concat(host).concat(RJ[key])
                                    })), _context2.abrupt("break", 26);
                                case 24:
                                    return this.customAddVideo(_objectSpread(_objectSpread({}, config), {}, {
                                        video_id: this.hashCode(),
                                        quality: "2160p",
                                        url: "".concat(host).concat(RJ[key])
                                    })), _context2.abrupt("break", 26);
                                case 26:
                                    _context2.next = 9;
                                    break;
                                case 28:
                                case "end":
                                    return _context2.stop()
                            }
                        }), _callee2, this)
                    })));

                    function getVideoFromPlayerScript(e, t, n) {
                        return _getVideoFromPlayerScript.apply(this, arguments)
                    }
                    return getVideoFromPlayerScript
                }()
            }, {
                key: "getMediaHost",
                value: function (e, t) {
                    return new Promise((function (n) {
                        var i = {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json;charset=utf-8",
                                "x-csrf-token": jquery__WEBPACK_IMPORTED_MODULE_9___default()('meta[name="csrf-token"]').attr("content")
                            },
                            body: JSON.stringify({
                                id: t
                            })
                        };
                        chrome.runtime.sendMessage({
                            msg: "makeXHRrequest",
                            url: e,
                            config: i
                        }, (function (e) {
                            var t = e.host;
                            return n("".concat(t, "/media/"))
                        }))
                    }))
                }
            }, {
                key: "grabAudioFiles",
                value: function () {
                    var e = this;
                    jquery__WEBPACK_IMPORTED_MODULE_9___default()(".listView a, .grid a").not(".".concat(this.INIT_CLASS, "_audio")).each((function (t, n) {
                        jquery__WEBPACK_IMPORTED_MODULE_9___default()(n).addClass("".concat(e.INIT_CLASS, "_audio")), -1 !== n.href.indexOf("mp3s/mp3") || -1 !== n.href.indexOf("mp3s/album") && -1 !== n.href.indexOf("?index=") || -1 !== n.href.indexOf("mp3s/playlist_start") ? e.getSingleAudio(n.href, e.audioConfigHost) : -1 !== n.href.indexOf("podcast") && e.getSingleAudio(n.href, e.podcastConfigHost)
                    }))
                }
            }, {
                key: "getSingleAudio",
                value: function (e, t) {
                    var n = this;
                    this.Fetch(e, !1).then((function (e) {
                        var i = jquery__WEBPACK_IMPORTED_MODULE_9___default()("<html>", {
                            html: e
                        });
                        if (-1 !== i.find("video").length) {
                            var o = i.find("script:contains('RJ.currentMP3Url')"),
                                a = i.find(".mainPanel span.song").text(),
                                r = i.find(".mainPanel span.artist").text(),
                                s = i.find(".mainPanel .artwork img").attr("src");
                            n.getAudioFromPlayerScript(o, t, a, r, s)
                        }
                    }))
                }
            }, {
                key: "getAudioFromPlayerScript",
                value: function () {
                    var _getAudioFromPlayerScript = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark((function _callee3($script, configHost, name, artist, poster) {
                        var scriptInner, RJ, currentMP3Url, urlArr, audioId, host;
                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap((function _callee3$(_context3) {
                            for (;;) switch (_context3.prev = _context3.next) {
                                case 0:
                                    return scriptInner = $script.html().replace("setupMP3Ping();", "").replace("setupPodcastPing();", ""), RJ = {}, eval(scriptInner), currentMP3Url = RJ.currentMP3Url, urlArr = currentMP3Url.split("/"), audioId = urlArr[urlArr.length - 1], _context3.next = 8, this.getAudioHost(configHost, audioId);
                                case 8:
                                    host = _context3.sent, this.addTrack({
                                        url: "".concat(host).concat(currentMP3Url, ".mp3"),
                                        name: name,
                                        artist: artist,
                                        poster: poster,
                                        ext: "mp3",
                                        type: "audio/mp3"
                                    });
                                case 10:
                                case "end":
                                    return _context3.stop()
                            }
                        }), _callee3, this)
                    })));

                    function getAudioFromPlayerScript(e, t, n, i, o) {
                        return _getAudioFromPlayerScript.apply(this, arguments)
                    }
                    return getAudioFromPlayerScript
                }()
            }, {
                key: "getAudioHost",
                value: function (e, t) {
                    return new Promise((function (n) {
                        var i = {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json;charset=utf-8",
                                "x-csrf-token": jquery__WEBPACK_IMPORTED_MODULE_9___default()('meta[name="csrf-token"]').attr("content")
                            },
                            body: JSON.stringify({
                                id: t
                            })
                        };
                        chrome.runtime.sendMessage({
                            msg: "makeXHRrequest",
                            url: e,
                            config: i
                        }, (function (e) {
                            var t = e.host;
                            return n("".concat(t, "/media/"))
                        }))
                    }))
                }
            }]), RJProvider
        }(_abstract_provider__WEBPACK_IMPORTED_MODULE_8__.a);
        __webpack_exports__.a = RJProvider
    },
    437: function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1),
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = __webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = __webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = __webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__),
            _abstract_provider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(31),
            jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9),
            jquery__WEBPACK_IMPORTED_MODULE_7___default = __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);

        function ownKeys(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function _objectSpread(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ownKeys(Object(n), !0).forEach((function (t) {
                    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function _createSuper(e) {
            var t = _isNativeReflectConstruct();
            return function () {
                var n, i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);
                if (t) {
                    var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, n)
            }
        }

        function _isNativeReflectConstruct() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
            } catch (e) {
                return !1
            }
        }
        var PHProvider = function (_AbstractProvider) {
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(PHProvider, _AbstractProvider);
            var _super = _createSuper(PHProvider);

            function PHProvider() {
                return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, PHProvider), _super.apply(this, arguments)
            }
            return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(PHProvider, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = jquery__WEBPACK_IMPORTED_MODULE_7___default()("#player >script:nth-child(2)").not("." + this.INIT_CLASS)[0] || jquery__WEBPACK_IMPORTED_MODULE_7___default()("#player >script:nth-child(1)").not("." + this.INIT_CLASS)[0];
                    e && (jquery__WEBPACK_IMPORTED_MODULE_7___default()(e).addClass(this.INIT_CLASS), this.getVideoFromPlayerScript(e))
                }
            }, {
                key: "getVideoFromPlayerScript",
                value: function getVideoFromPlayerScript(script) {
                    var _this = this,
                        a = script.innerHTML;
                    a = a.split("loadScriptUniqueId")[0], window.playerObjList = {};
                    var c = a.match("flashvars_[0-9]{1,}")[0];
                    window.eval(a);
                    var video = eval(c),
                        config = {
                            video_group_id: this.hashCode(),
                            name: video.video_title,
                            poster: video.image_url
                        };
                    video.mediaDefinitions.forEach((function (item) {
                        "mp4" === item.format && item.videoUrl && window.fetch(item.videoUrl).then((function (e) {
                            return e.text()
                        })).then((function (res) {
                            for (var sources = eval(res), i = 0; sources.length > i; i++) _this.customAddVideo(_objectSpread(_objectSpread({}, config), {}, {
                                video_id: _this.hashCode(),
                                ext: sources[i].format,
                                type: "video/".concat(sources[i].format),
                                quality: sources[i].quality,
                                url: sources[i].videoUrl
                            }))
                        }))
                    }))
                }
            }]), PHProvider
        }(_abstract_provider__WEBPACK_IMPORTED_MODULE_6__.a);
        __webpack_exports__.a = PHProvider
    },
    438: function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1),
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11),
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12),
            _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20),
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = __webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21),
            _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = __webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10),
            _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = __webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__),
            _abstract_provider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(31),
            jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9),
            jquery__WEBPACK_IMPORTED_MODULE_7___default = __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);

        function ownKeys(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function _objectSpread(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ownKeys(Object(n), !0).forEach((function (t) {
                    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function _createSuper(e) {
            var t = _isNativeReflectConstruct();
            return function () {
                var n, i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);
                if (t) {
                    var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, n)
            }
        }

        function _isNativeReflectConstruct() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
            } catch (e) {
                return !1
            }
        }
        var YPProvider = function (_AbstractProvider) {
            _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(YPProvider, _AbstractProvider);
            var _super = _createSuper(YPProvider);

            function YPProvider() {
                return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, YPProvider), _super.apply(this, arguments)
            }
            return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(YPProvider, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = jquery__WEBPACK_IMPORTED_MODULE_7___default()(".watchVideo").not("." + this.INIT_CLASS)[0];
                    e && (jquery__WEBPACK_IMPORTED_MODULE_7___default()(e).addClass(this.INIT_CLASS), this.getVideoFromPlayerScript())
                }
            }, {
                key: "getVideoFromPlayerScript",
                value: function getVideoFromPlayerScript() {
                    var config = {
                            video_group_id: this.hashCode(),
                            name: jquery__WEBPACK_IMPORTED_MODULE_7___default()(".watchVideoTitle h1").text(),
                            poster: jquery__WEBPACK_IMPORTED_MODULE_7___default()('meta[property="og:image"]').attr("content"),
                            ext: "mp4",
                            type: "video/mp4"
                        },
                        scriptContent = jquery__WEBPACK_IMPORTED_MODULE_7___default()('script:contains("page_params.video.mediaDefinition")') && jquery__WEBPACK_IMPORTED_MODULE_7___default()('script:contains("page_params.video.mediaDefinition")').text();
                    if (scriptContent)
                        for (var videoConfigText = scriptContent.split("page_params.video.mediaDefinition = ").pop().split(";")[0], videosArr = eval(videoConfigText), i = 0; videosArr.length > i; i++) videosArr[i].videoUrl && this.customAddVideo(_objectSpread(_objectSpread({}, config), {}, {
                            video_id: this.hashCode(),
                            quality: videosArr[i].quality + "p",
                            url: videosArr[i].videoUrl
                        }))
                }
            }, {
                key: "getVideoFromVideoTag",
                value: function () {
                    var e = jquery__WEBPACK_IMPORTED_MODULE_7___default()("video source") && jquery__WEBPACK_IMPORTED_MODULE_7___default()("video source").attr("src");
                    e && this.customAddVideo({
                        video_id: this.hashCode(),
                        video_group_id: this.hashCode(),
                        name: jquery__WEBPACK_IMPORTED_MODULE_7___default()(".watchVideoTitle h1").text(),
                        poster: jquery__WEBPACK_IMPORTED_MODULE_7___default()('meta[property="og:image"]').attr("content"),
                        ext: "mp4",
                        type: "video/mp4",
                        quality: "480p",
                        url: e
                    })
                }
            }]), YPProvider
        }(_abstract_provider__WEBPACK_IMPORTED_MODULE_6__.a);
        __webpack_exports__.a = YPProvider
    },
    46: function (e, t, n) {
        "use strict";
        var i = n(1),
            o = n.n(i);

        function a(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function r(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? a(Object(n), !0).forEach((function (t) {
                    o()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : a(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        t.a = r(r(r(r(r(r(r(r({}, {
            en: {
                content: {
                    download_all: "Download All",
                    download_selected: "Download Selected"
                },
                popup: {
                    toolsBar_filter_finished: "Finished files",
                    toolsBar_filter_deleted: "Deleted files",
                    toolsBar_filter_canceled: "Canceled files",
                    toolsBar_filter_error: "Errors",
                    toolsBar_filter_paused: "Paused files",
                    toolsBar_filter_in_progress: "In progress",
                    toolsBar_search_placeholder: "Search",
                    toolsBar_downloader_placeholder: "Get by url",
                    toolsBar_downloader_error: "Invalid Url",
                    clearList_modal_text: "Do you want to clear downloads list?",
                    clearList_modal_btn_yes: "Yes",
                    clearList_modal_btn_yes_all: "Yes, all",
                    clearList_modal_btn_yes_selected: "Clear selected",
                    clearList_modal_clear_paused: "Clear paused items to",
                    clearList_modal_clear_progressed: "Clear progressed items to",
                    clearList_modal_btn_no: "No",
                    sidebar_item_manager: "Manager",
                    sidebar_item_images: "Images",
                    sidebar_item_audio: "Music",
                    sidebar_item_video: "Video",
                    sidebar_item_document: "Document",
                    fileStatus_error: "Error",
                    fileStatus_canceled: "Canceled",
                    fileStatus_deleted: "File deleted",
                    fileStatus_paused: "Paused",
                    fileIconsText_openInFolder: "Show in folder",
                    fileIconsText_openFile: "Open file",
                    fileActionsMenu_copyLink: "Copy source of the file",
                    fileActionsMenu_continue: "Continue",
                    fileActionsMenu_cancel: "Cancel",
                    fileActionsMenu_pause: "Pause",
                    fileActionsMenu_retry: "Retry",
                    fileActionsMenu_deleteFromList: "Delete from list",
                    fileActionsMenu_deleteFromPC: "Delete from computer",
                    noSearchResult_msg: "No results",
                    removing_msg: "Removing...",
                    noDownloads_msg: "No downloads yet",
                    noConnection_msg: "Connection lost",
                    notificationStart: "Downloading started",
                    notificationComplete: "Download is completed",
                    notificationInterrupted: "Download was interrupted",
                    notificationProgressState: "downloading",
                    notificationCompleteState: "downloaded",
                    notificationInterruptedState: "was interrupted",
                    notificationButtonOneText: "Open file",
                    notificationButtonTwoText: "Show in folder",
                    imageSnifferTitle: "Image Downloader",
                    imageSnifferDescription: "Enable image downloader on the current page.",
                    imageSnifferButtonOn: "On",
                    imageSnifferButtonOff: "Off",
                    removeAllSniffers: "Remove all downloaders",
                    imageSniffersWasDeactivated: "The image downloader was deactivated for all tabs.",
                    videoActionCopyLink: "Copy video link",
                    videoSnifferTitle: "To download the desired video you need:",
                    videoInfoStep1: "1. Go to a web page with a video you want to download.",
                    videoInfoStep2: "2. Open Online Download Manager popup on the page with the video.",
                    videoInfoStep3: "3. Choose and download the desired video file from the list on this tab.",
                    notificationNoDownloadableVideos: "No available videos on this page.",
                    notificationNoDownloadableAudios: "No available audios on this page.",
                    audioActionDownload: "Download",
                    audioActionCopyLink: "Copy audio link",
                    audioActionCopyLinkCopied: "Copied",
                    audioActionOpenInTab: "Open in new tab",
                    uploadToCloud: "Upload to cloud",
                    uploadedToCloud: "Already Uploaded",
                    NoContentTitle: "Ooopss!",
                    NoContentString: "ODM didn’t found any files here.",
                    NoContentString2: "First try to",
                    NoContentRefreshBtn: "Refresh Page",
                    NoContentRefreshBtnReloading: "Please, wait...",
                    NoContentString3: "Doesn’t help? ",
                    NoContentString3_1_1: "Playback ",
                    NoContentString3_1_2: "video/audio on the page.",
                    NoContentString3_1_3: "Or send us request to",
                    NoContentString3_1_3doc: "Send us request to",
                    NoContentLine1: "Looks like ODM didn't find any downloadable content on this page",
                    NoContentLine2: "Click the button below if the site has content suitable for downloading.",
                    NoContentBtn: "Add this site to ODM!",
                    NoContentUnAuthorizedUser: "Please, authorize to send a request.",
                    NoContentAuthorizationLink: "Log-in",
                    ticketWasSent: "Ticket was sent!",
                    ticketAlreadyExist: "Ticket already exist",
                    UpgradeTitle_1: "Subscription",
                    UpgradeTitle_2: "not detected!",
                    UpgradeLine1: 'Get Free 7 days Trial or "Ultra" subscription',
                    UpgradeBtn: "Get it now",
                    DomainDisabledTitle: "Downloader Disabled!",
                    DomainDisabledLine1: "Check the option page if you want use downloader on this site.",
                    DomainDisabledBtn: "Go to option page",
                    cloud_authorization_error: "Please login cloud service",
                    clearList_modal_btn_only_finished: "Only finished",
                    generateQR: "Generate QR code",
                    optionBannerString_1: "Check out the full list",
                    optionBannerString_2: "of options and features!",
                    optionBannerBtn: "Options",
                    upgradeBannerString_1: "More features with Ultra",
                    upgradeBannerString_2: "price starts from ",
                    upgradeBannerString_3: "/month",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "Discover all features",
                    upgradeBannerPlayBtnString_2: "With",
                    upgradeBannerPlayBtnString_3: "and",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "File's category and extension.",
                            intro: "Select a file category to search for and download from the websites you visit. <br> You can also edit file extensions, remove unused ones, or add your own."
                        },
                        cd_intro_step2: {
                            title: "Menu",
                            intro: "Hide and show the menu."
                        },
                        cd_intro_step3: {
                            title: "Founded content",
                            intro: "Found content will be displayed in this area."
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "Select file Category for search",
                        fileExtensionTitle: "Select file Extensions"
                    }
                },
                notifications: {
                    option_menu: "Notifications",
                    visual_notifications: {
                        enable_visual_notification: "Enable visual notifications",
                        list: [{
                            notification_text: "Start download notification"
                        }, {
                            notification_text: "Finish download notification"
                        }, {
                            notification_text: "Errors download notification"
                        }],
                        notification_time: "Time on screen",
                        file_size_notification: "Minimum file size to show notification",
                        size: [{
                            notification_text: "Unlimited"
                        }, {
                            notification_text: "KB from"
                        }, {
                            notification_text: "MB from"
                        }, {
                            notification_text: "GB from"
                        }],
                        time: "s"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "Enable sound notifications",
                        list: [{
                            notification_text: "Start download notification"
                        }, {
                            notification_text: "Finish download notification"
                        }, {
                            notification_text: "Errors download notification"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "Sign In",
                    sign_up_text: "Sign Up",
                    profile_btn: "Profile",
                    log_out_btn: "Log out",
                    email_field_placeholder: "E-mail",
                    pass_field_placeholder: "Password",
                    remind_password_link: "FORGOT PASSWORD?",
                    invalid_email: "Please check email been correctly entered",
                    invalid_dataset: "Please check entered data",
                    email_already_in_use: "Email already in use",
                    email_not_found: "No user found with that email",
                    email_not_verified: "This email is not verifyed",
                    incorrect_password: "Password is wrong",
                    network_error: "Network error. Please, try again later",
                    registration_success_msg: "Greate! We sent you an activation email. Check your email and click on the link to verify!",
                    subscription_badge_text: "Active subscription:",
                    update_link_text: "Click to  update your data.",
                    learn_more_link_text: "Learn more",
                    user_data_updated: "Your data has been updated successfully",
                    user_logged_out: "You logged out successfully",
                    device_limit_exceeded: 'The device limit exhausted! You logged-in more than on 3 devices.\nPlease use the "Log-out sessions" button on the Profile page and re-login.'
                },
                sniffer: {
                    option_menu: "Content downloaders",
                    video_sniffer_lablel: "Video Downloader",
                    audio_sniffer_lablel: "Audio Downloader",
                    image_sniffer_lablel: "Image Downloader",
                    doc_sniffer_lablel: "Document Downloader",
                    add_domain_invalid_url: "Invalid url!",
                    add_domain_url_exist: "Domain already exists!",
                    options_values: {
                        all: "Enabled everywhere",
                        none: "Disabled everywhere",
                        blacklist: "Blocked list",
                        whitelist: "Allowed list"
                    },
                    legend_1_title: "Enabled everywhere",
                    legend_1_descr: "This option INCLUDES the selected downloader for all pages you visit.",
                    legend_1_extra_descr: " Keep in mind that downloaders are powerful content parsers that can affect page loading speed, the performance of your browser and PC in general.",
                    legend_2_title: "Disabled everywhere",
                    legend_2_descr: "This option DISABLES the selected downloader for all pages you visit.",
                    legend_3_title: "Blocked URL list",
                    legend_3_descr: "With this option, downloaders do not work on sites from the list.",
                    legend_4_title: "Allowed URL list",
                    legend_4_descr: "With this option, downloaders work ONLY on sites from the list."
                },
                general: {
                    option_menu: "General",
                    ebable_default_download_bar: "Enable default browser`s download bar",
                    enable_icon_indicator: "Enable content indicator icon",
                    enable_context_menu: 'Enable "Download with ODM" for right-click menu',
                    enable_autoclean_downloads: "Enable automatic cleaning of the download list from downloads with errors",
                    autoclean_description: "(Choose the limit (10,50,100 error records) when the list should be cleaned)"
                },
                app_appearance: {
                    option_menu: "App Appearance",
                    application_theme: "Application Theme",
                    dark_theme: "Dark",
                    light_theme: "Light",
                    application_language: "Application Language",
                    default_download_bar: "Hide default Chrome`s download bar",
                    enable_dark_icon: "Toolbar icon"
                },
                cloud_sync: {
                    option_menu: "Cloud Sync",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "Account name",
                    heading_strong: "Cloud Synchronization - ",
                    heading_string: "it's a feature that lets you upload sniffed files to your Dropbox or Google Drive storage. To use it you need to authorize using cloud storage API, just click the button, all is easy.",
                    cloud_login: "Log in",
                    cloud_logout: "Log out",
                    popup_cloud_status_title: "Status:",
                    pricing_link_text: "Get PRO Subscription"
                },
                save_folder: {
                    option_menu: "Sorting System",
                    file_routing_title: "Enable sorting system for downloaded files",
                    file_routing_description: "The sorting system automatically distributes the files to the appropriate sub-folders in the Downloads folder. Below is a list of file extensions and the directory in which they will be placed after the download. ",
                    option_addrule_btn: "Add sorting rule"
                },
                help: {
                    helpTitle: "Online Download Manager Help",
                    faqTitle: "FAQ",
                    faqContent: "Have a question how to use Online Download Manager?",
                    faqContent2: "We made a detailed",
                    faqContentEnding: "for you.",
                    recommendTitle: "Recommendations",
                    recommendContent: "Have ideas on how to make ODM better?",
                    recommendContent2: "Use",
                    recommendContentEnding: "form to share ideas with us.",
                    bugsTitle: "Bugs",
                    bugsContent: "Found a bug? Send us a",
                    bugsContentEnding: "or post it on",
                    updatesTitle: "Updates",
                    updatesContent: "Follow our",
                    updatesContentEnding: "stay tuned with news about ODM.",
                    option_menu: "Help",
                    faq: "Here we tried to answer to all Frequently Asked Questions",
                    issue: "If you have any issues, recommendations or wishes according applications functionality, please, contact us with this link."
                },
                about: {
                    option_menu: "About Project",
                    description: ["Who we are? - we are an ambitious team of designers and developers united by one idea.", "Our main goal is to make everyday stuff more comfortable and share solutions with World.", "One day we noticed that the most popular browser at the world has issues with Users Interface during downloading process. So we decided to solve this problem and developed truly one of the Best Download Manager.", "We have gathered many years of experience in web-design and software development to create most suitable and perfect solution. Also we analyzed most of similar solution to figure out its strong and weak sides.", "As a result of a long and complicated work, an Online Download Manager was born which gathered all the best that could be in modern downloader.", "To date, our work has been appreciated by more than 260,000 users from around the world - and this fact makes us understand that our way is right! All our efforts achieve the goal, our work is liked by users and it gives us more and more strength to move on, improve our product and make the world a little better.", "Hope that you, our dear user, appreciate our product too.", "On our turn we promise to listen your needs and integrate it into Online Download Manager to make it really Best Download manager in the World.", "Regards, ODM Team."],
                    rate_us: "Rate us",
                    donate: "Donate"
                },
                save_settings: "Settings saved",
                table: {
                    fileType: "File Type",
                    directory: "Directory",
                    file_extension: "File Extension",
                    rule_actions: "Actions",
                    extensions: ["Picture", "Music", "Video", "Program", "Document", "Book", "Archive", "Image", "System", "Font", "Torrent", "Other"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Choose the language",
                    wlcModalTitle: "Hello!",
                    wlcModalSubTitle: "Thanks for choosing the ODM extension and welcome!",
                    wlcString_1: "We prepared a quick and clear guide through the extension`s features.",
                    wlcString_1_2: "Keep in mind that some of the functions (like video downloaders or audio downloaders from certain sites) available only with a paid subscription and only for registered users.",
                    wlcString_2: "To shorten the learning time, we made a quick guide through the interface.",
                    wlcString_3: "Start tour using controls",
                    wlcString_4: "step-by-step learn your new download helper.",
                    startTourBtn: "Start Tour",
                    skipTourBtn: "Skip"
                },
                tutorial_finish_modal: {
                    tfmTitle: "That’s all for start!",
                    tfmString_1: "This is was a short review of the main options so you can open the full potential of ODM extension.",
                    tfmString_2: "You can always get detailed instructions for each ODM function, using the Help Center, the icon in the bottom right corner.",
                    tfmString_3: "to get all features and stay tuned for updates and news.",
                    tfmButton: "Close"
                },
                sidebar_footer: {
                    Share: "Tell the world about ODM",
                    RateUs: "Rate ODM",
                    raitingThanksText: "Thank you!"
                },
                tutorial: {
                    heading: "Help Center",
                    contents: "Contents:",
                    quickStart: "Quick start",
                    categories: {
                        introduction: {
                            title: "Introduction",
                            steps: {
                                profile: {
                                    title: "Users profile",
                                    intro: "Your account information goes here: avatar, email, subscription plan, etc.<br> You can change avatar and information in your profile on the <a href='https://download-manager.online/profile' target='_blank'>web site.</a> "
                                },
                                app_appearance: {
                                    title: "App Appearance",
                                    intro: "Settings for the extension`s appearance and language selection."
                                },
                                notifications: {
                                    title: "Notifications",
                                    intro: "Manage sound and visual notifications.<br>Set the volume and duration of the display on the screen."
                                },
                                content_downloaders: {
                                    title: "Content downloaders",
                                    intro: "Content downloaders - modules that find media files on sites and lets you download them.<br>You can set-up a white or blacklist of domains for content downloaders."
                                },
                                cloud_sync: {
                                    title: "Cloud Sync",
                                    intro: "Cloud Sync options - lets you add your Cloud storage account into ODM for files transfer directly from extension to storage."
                                },
                                sorting_system: {
                                    title: "Sorting system",
                                    intro: "Distribution of downloaded files to sub-directories in the 'Downloads' folder depending on the file extension."
                                },
                                help: {
                                    title: "Help",
                                    intro: "Here you can tell us about the bugs, contact support, or go to the FAQ page."
                                },
                                share: {
                                    title: "Share ODM with friends",
                                    intro: "Tell the World about ODM extension."
                                },
                                rate: {
                                    title: "Rate ODM",
                                    intro: "Rate the ODM extension.<br>Each 5 stars review, let us know that we are moving in the right direction."
                                }
                            }
                        },
                        app_appearance: {
                            title: "App Appearance",
                            steps: {
                                theme: {
                                    title: "Pop-up theme",
                                    intro: "Select a light or dark pop-up theme."
                                },
                                language: {
                                    title: "Extension`s Language",
                                    intro: "Application language.<br> English is enabled by default."
                                },
                                defaultChromesBar: {
                                    title: "Default browser`s download bar",
                                    intro: "Turn on/off the standard browser`s download bar, which displays all current or completed downloads."
                                },
                                contentIndicator: {
                                    title: "Content indicator on the icon",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>A red indicator on the extension icon indicates that content available for download has been found on the page."
                                },
                                darkIcon: {
                                    title: "Extension`s icon",
                                    intro: "Switch extension`s icon to colored or dark."
                                }
                            }
                        },
                        notifications: {
                            title: "Notifications",
                            steps: {
                                visual_notifications: {
                                    title: "Visual notifications",
                                    intro: "On/Off visual notifications about the download process."
                                },
                                visualNotificationsDetails: {
                                    title: "Visual notifications settings",
                                    intro: "Set-up which visual notifications you want to see: start of download, end of download, download error.<br> Also, you can choose in seconds how long these notifications will appear on the screen.<br> &#8734; - means that notification will stay on screen till you click it."
                                },
                                filesizeToRunNotifications: {
                                    title: "Settings of file size to run notifications.",
                                    intro: "You can select the minimum size of the downloadable file to show notifications."
                                },
                                sound_notifications: {
                                    title: "Sound notifications",
                                    intro: "On/Off sound notifications about the download process."
                                },
                                soundNotificationsDetails: {
                                    title: "Sound notifications settings",
                                    intro: "Set-up which sound notifications you want to hear: start of download, end of download, download error.<br> Also, you can choose the notifications volume."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Content downloaders",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Content downloaders control",
                                    intro: "Here you can tune domain names where content downloaders will work or not.<br> By default - all downloaders work on all pages you visit."
                                },
                                downloadersLegend: {
                                    title: "Possible options",
                                    intro: "There are 4 options for content downloaders work. <br> Check-out the list and select the most suitable for you."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Select the necessary option",
                                    intro: "Select the necessary option from the dropdown menu.<br> If you enable black/white lists - you need to add the necessary domain into the table."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Cloud Sync",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Cloud Sync",
                                    intro: "Here you can authorize ODM to your cloud storage(s).<br> It will let you upload content found on the pages directly to your storage from the extensions pop-up interface.<br><br><strong>This option available with PRO subscription and higher.</strong> "
                                },
                                cloudSelect: {
                                    title: "Storage select",
                                    intro: "Select the necessary storage clicking on its logo. Then click the 'Log in' button and log in using your Login/Password.<br><br><strong>Keep in mind - we use official API from cloud storages - your personal data in complete safety.</strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "Sorting system",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "Sorting system",
                                    intro: "Enable/Disable sorting system.<br><br> <strong>Disabled by default.</strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Sorting rules list",
                                    intro: "List of pre-settled rules with the most popular file extensions."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Enable/Disable rule",
                                    intro: "Click checkbox to disable rule, click again to enable it."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Actions with rule",
                                    intro: "Buttons for actions with rules. You can edit any rule or delete it permanently."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Users rules",
                                    intro: "You can add your custom rule."
                                }
                            }
                        },
                        Help: {
                            title: "Help",
                            steps: {
                                help_faq: {
                                    title: "FAQ",
                                    intro: "FAQ page with answers to most popular and common questions."
                                },
                                help_recommendations: {
                                    title: "Have recommendations?",
                                    intro: "With this form, you can drop us a line with your ideas and proposals."
                                },
                                help_bugs: {
                                    title: "Report the bug",
                                    intro: "Let us know if there are any problems with the ODM extension."
                                },
                                help_updates: {
                                    title: "News and updates",
                                    intro: "We post detailed information about the most important updates in our blog."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "Batch Link Downloader",
                    step1: "1. Upload file with links",
                    step1Description: "Click or drag & drop file to this area to upload links list",
                    step1SupportedFiles: "Supported list's formats: .csv, .json, .xls, .xlsx, .txt, with line breaks ",
                    step2: "2. or enter links manually",
                    step3: "3. Result of checking",
                    checkBtn: "Check links",
                    downloadBtn: "Download",
                    allLinks: "All",
                    okLinks: "OK",
                    errorLinks: "Errors",
                    linksListDeleteErrors: "Delete links with errors",
                    linksListDeleteDuplicated: "Delete duplicate links"
                }
            }
        }), {
            de: {
                content: {
                    download_all: "Alle Herunterladen",
                    download_selected: "Herunterladen Ausgewählt"
                },
                popup: {
                    toolsBar_filter_finished: "Fertige Dateien",
                    toolsBar_filter_deleted: "Gelöschte Dateien",
                    toolsBar_filter_canceled: "Abgebrochene Dateien",
                    toolsBar_filter_error: "Fehlermeldung",
                    toolsBar_filter_paused: "Angehaltene Dateien",
                    toolsBar_filter_in_progress: "In bearbeitung",
                    toolsBar_search_placeholder: "Suche",
                    toolsBar_downloader_placeholder: "Holen Sie sich per URL",
                    toolsBar_downloader_error: "Ungültige URL",
                    clearList_modal_text: "Möchten Sie Downloads Liste löschen?",
                    clearList_modal_btn_yes: "Ja",
                    clearList_modal_btn_yes_all: "Ja, alle",
                    clearList_modal_btn_yes_selected: "Löschen ausgewählt",
                    clearList_modal_clear_paused: "Elemente in der pause löschen",
                    clearList_modal_clear_progressed: "Klare Positionen in Arbeit",
                    clearList_modal_btn_no: "Nein",
                    sidebar_item_manager: "Manager",
                    sidebar_item_images: "Abbildung",
                    sidebar_item_audio: "Musik",
                    sidebar_item_video: "Video",
                    sidebar_item_document: "Dokumentieren",
                    fileStatus_error: "Error",
                    fileStatus_canceled: "Annullieren",
                    fileStatus_deleted: "Datei gelöscht",
                    fileStatus_paused: "Pausieren",
                    fileIconsText_openInFolder: "Im Ordner anzeigen",
                    fileIconsText_openFile: "Datei öffnen",
                    fileActionsMenu_copyLink: "Quelle der Datei kopieren",
                    fileActionsMenu_continue: "Fortsetzen",
                    fileActionsMenu_cancel: "Absagen",
                    fileActionsMenu_pause: "Pause",
                    fileActionsMenu_retry: "Wiederholen",
                    fileActionsMenu_deleteFromList: "Aus liste löschen",
                    fileActionsMenu_deleteFromPC: "Vom Computer löschen",
                    noSearchResult_msg: "Keine Ergebnisse gefunden",
                    removing_msg: "Entfernen ...",
                    noDownloads_msg: "Noch keine downloads",
                    noConnection_msg: "Verbindung verloren",
                    notificationStart: "Download gestartet",
                    notificationComplete: "Download abgeschlossen",
                    notificationInterrupted: "Download wurde unterbrochen",
                    notificationProgressState: "herunterladen",
                    notificationCompleteState: "wurde heruntergeladen",
                    notificationInterruptedState: "wurde unterbrochen",
                    notificationButtonOneText: "Datei öffnen",
                    notificationButtonTwoText: "Im Ordner anzeigen",
                    imageSnifferTitle: "Bild Downloader",
                    imageSnifferDescription: "Aktivieren Sie bild downloader auf der aktuellen Seite.",
                    imageSnifferButtonOn: "On",
                    imageSnifferButtonOff: "Off",
                    removeAllSniffers: "Entfernen Sie alle Sniffer",
                    imageSniffersWasDeactivated: "Bildschnüffler wurde für alle Registerkarten deaktiviert.",
                    videoActionCopyLink: "Video-link kopieren",
                    videoSnifferTitle: "Um das gewünschte Video herunterzuladen, benötigen Sie:",
                    videoInfoStep1: "1. Gehen Sie zu einer Webseite mit einem Video, das Sie herunterladen möchten.",
                    videoInfoStep2: "2. Öffnen Sie das popup fenster des Online Download Managers auf der Seite mit dem Video.",
                    videoInfoStep3: "3. Wählen Sie die gewünschte Videodatei aus der Liste auf dieser Registerkarte aus und laden Sie sie herunter.",
                    notificationNoDownloadableVideos: "Keine verfügbaren Videos auf dieser Seite.",
                    notificationNoDownloadableAudios: "Keine verfügbaren audio auf dieser Seite.",
                    audioActionDownload: "Herunterladen",
                    audioActionCopyLink: "Audio-Link kopieren",
                    audioActionCopyLinkCopied: "Kopiert",
                    audioActionOpenInTab: "In neuem Tab öffnen",
                    uploadToCloud: "In die cloud hochladen",
                    uploadedToCloud: "Bereits Hochgeladen",
                    NoContentTitle: "Hoppla!",
                    NoContentString: "ODM hat hier keine Dateien gefunden.",
                    NoContentString2: "Erster Versuch zu",
                    NoContentRefreshBtn: "Seite Aktualisieren",
                    NoContentRefreshBtnReloading: "Warten Sie mal...",
                    NoContentString3: "Hilft nicht?",
                    NoContentString3_1_1: "Wiedergabe",
                    NoContentString3_1_2: "von video - /audio auf der Seite.",
                    NoContentString3_1_3: "Oder senden Sie uns Anfrage an",
                    NoContentString3_1_3doc: "Senden Sie uns eine Anfrage",
                    NoContentLine1: "Sieht aus wie ODM keinen herunterladbaren Inhalt auf dieser Seite gefunden hat",
                    NoContentLine2: "Klicken Sie auf die Schaltfläche unten, wenn die Seite Inhalte zum Herunterladen enthält.",
                    NoContentBtn: "Seite zu ODM hinzufügen!",
                    NoContentUnAuthorizedUser: "Bitte autorisieren Sie, eine Anfrage zu senden.",
                    NoContentAuthorizationLink: "Einloggen",
                    ticketWasSent: "Ticket wurde gesendet!",
                    ticketAlreadyExist: "Ticket bereits vorhanden",
                    UpgradeTitle_1: "Abonnement",
                    UpgradeTitle_2: "nicht erkannt!",
                    UpgradeLine1: 'Get Free 7 days Trial or "Ultra" subscription',
                    UpgradeBtn: "Hol es dir jetzt",
                    DomainDisabledTitle: "Downloader Deaktiviert!",
                    DomainDisabledLine1: "Überprüfen Sie die option Seite-wenn Sie möchten, verwenden sniffer auf dieser Seite.",
                    DomainDisabledBtn: "Gehen Sie zur Optionsseite",
                    cloud_authorization_error: "Bitte anmelden cloud-Dienst",
                    clearList_modal_btn_only_finished: "Erst fertig",
                    generateQR: "Generieren Sie einen QR-Code",
                    optionBannerString_1: "Vollständige Liste prüfen",
                    optionBannerString_2: "von Optionen und Funktionen!",
                    optionBannerBtn: "Optionen",
                    upgradeBannerString_1: "Mehr Funktionen kaufen Ultra",
                    upgradeBannerString_2: "preis beginnt ab",
                    upgradeBannerString_3: "/monat",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "Entdecken Sie alle Funktionen",
                    upgradeBannerPlayBtnString_2: "Mit",
                    upgradeBannerPlayBtnString_3: "und",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "Kategorie und Erweiterung der Datei.",
                            intro: "Wählen Sie eine Dateikategorie aus, nach der Sie suchen und die Sie von den von Ihnen besuchten Websites herunterladen möchten. <br> \nSie können auch Dateierweiterungen bearbeiten, nicht verwendete entfernen oder eigene hinzufügen."
                        },
                        cd_intro_step2: {
                            title: "Menü",
                            intro: "Menü ein- und ausblenden."
                        },
                        cd_intro_step3: {
                            title: "Inhalt gefunden",
                            intro: "Gefundene Inhalte werden in diesem Bereich aufgelistet."
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "Wählen Sie eine Kategorie",
                        fileExtensionTitle: "Wählen Sie die Dateierweiterung"
                    }
                },
                notifications: {
                    option_menu: "Benachrichtigung",
                    visual_notifications: {
                        enable_visual_notification: "Visuelle Benachrichtigungen aktivieren",
                        list: [{
                            notification_text: "Benachrichtigung zum download starten"
                        }, {
                            notification_text: "Fertig Download-Benachrichtigung"
                        }, {
                            notification_text: "Fehler beim download-Benachrichtigung"
                        }],
                        notification_time: "Zeit auf dem Bildschirm",
                        file_size_notification: "Dateigröße, um Benachrichtigung anzeigen",
                        size: [{
                            notification_text: "Unbegrenzt"
                        }, {
                            notification_text: "von KB"
                        }, {
                            notification_text: "von MB"
                        }, {
                            notification_text: "von GB"
                        }],
                        time: "s"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "Aktivieren von Soundbenachrichtigungen",
                        list: [{
                            notification_text: "Benachrichtigung zum download starten"
                        }, {
                            notification_text: "Download-Benachrichtigung beenden"
                        }, {
                            notification_text: "Fehler beim download-Benachrichtigung"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "Anmelden",
                    sign_up_text: "Registrieren",
                    profile_btn: "Profil",
                    log_out_btn: "Abmelden",
                    email_field_placeholder: "E-mail",
                    pass_field_placeholder: "Passwort",
                    remind_password_link: "PASSWORT VERGESSEN?",
                    invalid_email: "Bitte überprüfen Sie, ob die email korrekt eingegeben wurde",
                    invalid_dataset: "Bitte überprüfen Sie eingegebene Daten",
                    email_already_in_use: "Email wird bereits verwendet",
                    email_not_found: "Mit dieser E-Mail wurde kein Benutzer gefunden",
                    email_not_verified: "Diese email wurde nicht bestätigt",
                    incorrect_password: "Passwort ist falsch",
                    network_error: "Netzwerkfehler. Bitte versuchen Sie es später noch einmal",
                    registration_success_msg: "Greate! Wir haben Ihnen eine Aktivierungs email gesendet. Überprüfen Sie Ihre E-Mails und klicken Sie zur Bestätigung auf den Link!",
                    subscription_badge_text: "Aktives abonnement:",
                    update_link_text: "Klicken Sie auf, um Ihre Daten zu aktualisieren.",
                    learn_more_link_text: "Erfahren",
                    user_data_updated: "Ihre Daten wurden erfolgreich aktualisiert",
                    user_logged_out: "Sie haben sich erfolgreich abgemeldet",
                    device_limit_exceeded: 'Das Gerätelimit ist erschöpft! Sie haben sich mehr als auf 3 Geräten angemeldet.\nVerwenden Sie die Schaltfläche "Abmeldesitzungen" auf der Profilseite und melden Sie sich erneut an.'
                },
                sniffer: {
                    option_menu: "Inhalt Downloader",
                    video_sniffer_lablel: "Video Downloader",
                    audio_sniffer_lablel: "Audio Downloader",
                    image_sniffer_lablel: "Bild Downloader",
                    doc_sniffer_lablel: "Dokument Downloader",
                    add_domain_invalid_url: "Ungültige URL!",
                    add_domain_url_exist: "Domain existiert bereits!",
                    options_values: {
                        all: "Überall aktiviert",
                        none: "Überall behindert",
                        blacklist: "Blockierte Liste",
                        whitelist: "Zulässige Liste"
                    },
                    legend_1_title: "Überall aktiviert",
                    legend_1_descr: "Diese option ENTHÄLT den ausgewählten downloader für alle Seiten, die Sie besuchen.",
                    legend_1_extra_descr: "Beachten Sie, dass Downloader leistungsstarke content-Parser sind, die die Ladegeschwindigkeit der Seite, die Leistung Ihres Browsers und PC im Allgemeinen beeinflussen können.",
                    legend_2_title: "Überall behindert",
                    legend_2_descr: "Diese option DEAKTIVIERT den ausgewählten downloader für alle besuchten Seiten.",
                    legend_3_title: "Blockierte-URL-Liste",
                    legend_3_descr: "Mit dieser Option funktionieren Downloader nicht auf Websites aus der Liste.",
                    legend_4_title: "Erlaubt URL-Liste",
                    legend_4_descr: "Mit dieser Option arbeiten Downloader NUR auf Websites aus der Liste."
                },
                general: {
                    option_menu: "Allgemeines",
                    ebable_default_download_bar: "Aktivieren Sie die Download-Leiste des Standardbrowsers",
                    enable_icon_indicator: "Aktivieren Sie das Inhaltsanzeigesymbol",
                    enable_context_menu: 'Aktivieren Sie "Download with ODM" für das Kontextmenü',
                    enable_autoclean_downloads: "Aktivieren Sie die automatische Bereinigung der Download-Liste von Downloads mit Fehlern",
                    autoclean_description: "(Wählen Sie das Limit (10,50,100 Datensätze), zu dem die Liste bereinigt werden soll.)"
                },
                app_appearance: {
                    option_menu: "App Aussehen",
                    application_theme: "Anwendung Thema",
                    dark_theme: "Dunkel",
                    light_theme: "Licht",
                    application_language: "Sprache der Anwendung",
                    default_download_bar: "Ausblenden Standard Chrome download bar",
                    enable_dark_icon: "Symbolleisten Symbol"
                },
                cloud_sync: {
                    option_menu: "Cloud-Sync",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "Kontonamen",
                    heading_strong: "Cloud-Synchronisierung -",
                    heading_string: "es ist eine Funktion, mit der Sie sniffed-Dateien in Ihren Dropbox-oder Google Drive-Speicher hochladen können. Um es zu verwenden, müssen Sie mit cloud storage API autorisieren, klicken Sie einfach auf die Schaltfläche, alles ist einfach.",
                    cloud_login: "Anmelden",
                    cloud_logout: "Abmelden",
                    popup_cloud_status_title: "Status:",
                    pricing_link_text: "Erhalten PRO Abonnement"
                },
                save_folder: {
                    option_menu: "Sortiersystem",
                    file_routing_title: "Aktivieren Sie das Sortiersystem für heruntergeladene Dateien",
                    file_routing_description: "Das Sortiersystem verteilt die Dateien automatisch an die entsprechenden Unterordner im Ordner Downloads. Unten finden Sie eine Liste der Dateierweiterungen und das Verzeichnis, in dem sie nach dem Download abgelegt werden.",
                    option_addrule_btn: "Sortierregel hinzufügen"
                },
                help: {
                    helpTitle: "Online Download Manager Hilfe",
                    faqTitle: "FAQ",
                    faqContent: "Haben Sie eine Frage, wie Online Download Manager verwenden?",
                    faqContent2: "Wir haben eine detaillierte",
                    faqContentEnding: "für dich.",
                    recommendTitle: "Handlungsempfehlungen",
                    recommendContent: "Haben Sie Ideen, wie ODM besser zu machen?",
                    recommendContent2: "Nutzen Sie",
                    recommendContentEnding: "das formular, um Ideen mit uns zu teilen.",
                    bugsTitle: "Fehler",
                    bugsContent: "Sie haben einen Fehler gefunden? Senden Sie uns ein",
                    bugsContentEnding: "oder poste es auf",
                    updatesTitle: "Sicherheitsaktualisierungen",
                    updatesContent: "Folgen Sie unserem",
                    updatesContentEnding: "bleiben Sie dran mit Neuigkeiten über ODM.",
                    option_menu: "Helfen",
                    faq: "Hier haben wir versucht, auf alle Häufig Gestellten Fragen zu Antworten: F. A. Q.",
                    issue: "Wenn Sie Probleme, Empfehlungen oder Wünsche nach Anwendungen Funktionalität haben, überprüfen Sie bitte die Google WebStore-Seite, um uns zu erzählen"
                },
                about: {
                    option_menu: "Über Das Projekt",
                    description: ["Wer sind wir? - wir sind ein ehrgeiziges Team von Designern und Entwicklern vereint durch eine Idee.", "Unser Hauptziel ist es, alltägliche Sachen komfortabler zu machen und Lösungen mit der Welt zu teilen.", "Eines Tages bemerkten wir, dass die beliebtesten browser auf der Welt hat Probleme mit der Benutzeroberfläche während des Download-Prozesses. So entschieden wir uns, dieses problem zu lösen und entwickelten wirklich eine der Besten Download-Manager.", "Wir haben viele Jahre Erfahrung in web-design und software-Entwicklung gesammelt, um die am besten geeignete und perfekte Lösung zu schaffen. Auch analysierten wir die meisten ähnliche Lösung, um herauszufinden, seine stong und webt Seiten.", "Als Ergebnis einer langen und komplizierten Arbeit wurde ein Online-Download-Manager geboren, der das beste gesammelt hat, was in modern downloader sein könnte.", "Bis heute wurde unsere Arbeit von mehr als 200.000 Nutzern aus der ganzen Welt geschätzt - und das macht uns klar, dass unser Weg richtig ist! Alle unsere Bemühungen erreichen das Ziel, unsere Arbeit wird von den Nutzern gemocht und es gibt uns mehr und mehr Kraft zu bewegen, unser Produkt zu verbessern und die Welt ein wenig besser.", "Hoffe, dass Sie, unser lieber Benutzer, schätzen unser Produkt zu.", "Auf unserer umdrehung Versprechen wir, Ihre Notwendigkeiten zu hören und Sie in On-line-Download Manager zu integrieren, um es wirklich Bestes Download manager in der Welt zu bilden.", "Grüße, Chrome Online Download Manager team."],
                    rate_us: "Bewerten Sie uns",
                    donate: "Spenden"
                },
                save_settings: "Einstellungen gespeichert",
                table: {
                    fileType: "Dateityp",
                    directory: "Verzeichnis",
                    file_extension: "Dateierweiterung",
                    rule_actions: "Actions",
                    extensions: ["Bild", "Musik", "Video", "Programm", "Dokumentieren", "Buch", "Archiv", "Abbild", "System", "Schriftart", "Torrent", "Andere"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Choose the language",
                    wlcModalTitle: "Hello!",
                    wlcModalSubTitle: "Thanks for choosing the ODM extension and welcome!",
                    wlcString_1: "We prepared a quick and clear guide through the extension`s features.",
                    wlcString_1_2: "Keep in mind that some of the functions (like video downloaders or audio downloaders from certain sites) available only with a paid subscription and only for registered users.",
                    wlcString_2: "To shorten the learning time, we made a quick guide through the interface.",
                    wlcString_3: "Start tour using controls",
                    wlcString_4: "step-by-step learn your new download helper.",
                    startTourBtn: "Start Tour",
                    skipTourBtn: "Skip"
                },
                tutorial_finish_modal: {
                    tfmTitle: "That’s all for start!",
                    tfmString_1: "This is was a short review of the main options so you can open the full potential of ODM extension.",
                    tfmString_2: "You can always get detailed instructions for each ODM function, using the Help Center, the icon in the bottom right corner.",
                    tfmString_3: "to get all features and stay tuned for updates and news.",
                    tfmButton: "Close"
                },
                sidebar_footer: {
                    Share: "Erzählen Sie der Welt von ODM",
                    RateUs: "Beurteilen Sie, ODM",
                    raitingThanksText: "Thank you!"
                },
                tutorial: {
                    heading: "Help Center",
                    contents: "Contents:",
                    quickStart: "Quick start",
                    categories: {
                        introduction: {
                            title: "Introduction",
                            steps: {
                                profile: {
                                    title: "Users profile",
                                    intro: "Your account information goes here: avatar, email, subscription plan, etc.<br> You can change avatar and information in your profile on the <a href='https://download-manager.online/profile' target='_blank'>web site.</a> "
                                },
                                app_appearance: {
                                    title: "App Appearance",
                                    intro: "Settings for the extension`s appearance and language selection."
                                },
                                notifications: {
                                    title: "Notifications",
                                    intro: "Manage sound and visual notifications.<br>Set the volume and duration of the display on the screen."
                                },
                                content_downloaders: {
                                    title: "Content downloaders",
                                    intro: "Content downloaders - modules that find media files on sites and lets you download them.<br>You can set-up a white or blacklist of domains for content downloaders."
                                },
                                cloud_sync: {
                                    title: "Cloud Sync",
                                    intro: "Cloud Sync options - lets you add your Cloud storage account into ODM for files transfer directly from extension to storage."
                                },
                                sorting_system: {
                                    title: "Sorting system",
                                    intro: "Distribution of downloaded files to sub-directories in the 'Downloads' folder depending on the file extension."
                                },
                                help: {
                                    title: "Help",
                                    intro: "Here you can tell us about the bugs, contact support, or go to the FAQ page."
                                },
                                share: {
                                    title: "Share ODM with friends",
                                    intro: "Tell the World about ODM extension."
                                },
                                rate: {
                                    title: "Beurteilen Sie, ODM",
                                    intro: "Rate the ODM extension.<br>Each 5 stars review, let us know that we are moving in the right direction."
                                }
                            }
                        },
                        app_appearance: {
                            title: "App Appearance",
                            steps: {
                                theme: {
                                    title: "Pop-up theme",
                                    intro: "Select a light or dark pop-up theme."
                                },
                                language: {
                                    title: "Extension`s Language",
                                    intro: "Application language.<br> English is enabled by default."
                                },
                                defaultChromesBar: {
                                    title: "Default browser`s download bar",
                                    intro: "Turn on/off the standard browser`s download bar, which displays all current or completed downloads."
                                },
                                contentIndicator: {
                                    title: "Content indicator on the icon",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>A red indicator on the extension icon indicates that content available for download has been found on the page."
                                },
                                darkIcon: {
                                    title: "Extension`s icon",
                                    intro: "Switch extension`s icon to colored or dark."
                                }
                            }
                        },
                        notifications: {
                            title: "Notifications",
                            steps: {
                                visual_notifications: {
                                    title: "Visual notifications",
                                    intro: "On/Off visual notifications about the download process."
                                },
                                visualNotificationsDetails: {
                                    title: "Visual notifications settings",
                                    intro: "Set-up which visual notifications you want to see: start of download, end of download, download error.<br> Also, you can choose in seconds how long these notifications will appear on the screen.<br> &#8734; - means that notification will stay on screen till you click it."
                                },
                                filesizeToRunNotifications: {
                                    title: "Settings of file size to run notifications.",
                                    intro: "You can select the minimum size of the downloadable file to show notifications."
                                },
                                sound_notifications: {
                                    title: "Sound notifications",
                                    intro: "On/Off sound notifications about the download process."
                                },
                                soundNotificationsDetails: {
                                    title: "Sound notifications settings",
                                    intro: "Set-up which sound notifications you want to hear: start of download, end of download, download error.<br> Also, you can choose the notifications volume."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Content downloaders",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Content downloaders control",
                                    intro: "Here you can tune domain names where content downloaders will work or not.<br> By default - all downloaders work on all pages you visit."
                                },
                                downloadersLegend: {
                                    title: "Possible options",
                                    intro: "There are 4 options for content downloaders work. <br> Check-out the list and select the most suitable for you."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Select the necessary option",
                                    intro: "Select the necessary option from the dropdown menu.<br> If you enable black/white lists - you need to add the necessary domain into the table."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Cloud Sync",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Cloud Sync",
                                    intro: "Here you can authorize ODM to your cloud storage(s).<br> It will let you upload content found on the pages directly to your storage from the extensions pop-up interface.<br><br><strong>This option available with PRO subscription and higher.</strong> "
                                },
                                cloudSelect: {
                                    title: "Storage select",
                                    intro: "Select the necessary storage clicking on its logo. Then click the 'Log in' button and log in using your Login/Password.<br><br><strong>Keep in mind - we use official API from cloud storages - your personal data in complete safety.</strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "Sorting system",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "Sorting system",
                                    intro: "Enable/Disable sorting system.<br><br> <strong>Disabled by default.</strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Sorting rules list",
                                    intro: "List of pre-settled rules with the most popular file extensions."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Enable/Disable rule",
                                    intro: "Click checkbox to disable rule, click again to enable it."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Actions with rule",
                                    intro: "Buttons for actions with rules. You can edit any rule or delete it permanently."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Users rules",
                                    intro: "You can add your custom rule."
                                }
                            }
                        },
                        Help: {
                            title: "Help",
                            steps: {
                                help_faq: {
                                    title: "FAQ",
                                    intro: "FAQ page with answers to most popular and common questions."
                                },
                                help_recommendations: {
                                    title: "Have recommendations?",
                                    intro: "With this form, you can drop us a line with your ideas and proposals."
                                },
                                help_bugs: {
                                    title: "Report the bug",
                                    intro: "Let us know if there are any problems with the ODM extension."
                                },
                                help_updates: {
                                    title: "News and updates",
                                    intro: "We post detailed information about the most important updates in our blog."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "Batch Link Downloader",
                    step1: "1. Datei mit Links hochladen",
                    step1Description: "Klicken oder ziehen Sie die Datei per Drag & Drop in diesen Bereich, um die Liste der Links hochzuladen",
                    step1SupportedFiles: "Unterstützte Listenformate: .csv, .json, .xls, .xlsx, .txt mit Zeilenumbrüchen",
                    step2: "2. oder geben Sie Links manuell ein",
                    step3: "3. Ergebnis der Überprüfung",
                    checkBtn: "Überprüfen Sie die Links",
                    downloadBtn: "Herunterladen",
                    allLinks: "Alles",
                    okLinks: "OK",
                    errorLinks: "Fehler",
                    linksListDeleteErrors: "Löschen Sie fehlerhafte Links",
                    linksListDeleteDuplicated: "Doppelte Links löschen"
                }
            }
        }), {
            es: {
                content: {
                    download_all: "Descargar todo",
                    download_selected: "Descargar seleccionada"
                },
                popup: {
                    toolsBar_filter_finished: "Terminada",
                    toolsBar_filter_deleted: "Archivos eliminados",
                    toolsBar_filter_canceled: "Archivos cancelados",
                    toolsBar_filter_error: "Errores",
                    toolsBar_filter_paused: "Archivos pausados",
                    toolsBar_filter_in_progress: "En progreso",
                    toolsBar_search_placeholder: "Búsqueda",
                    toolsBar_downloader_placeholder: "Llegar por url",
                    toolsBar_downloader_error: "Url invalida",
                    clearList_modal_text: "¿Quieres borrar la lista de descargas?",
                    clearList_modal_btn_yes: "Sí",
                    clearList_modal_btn_yes_all: "Sí, todos",
                    clearList_modal_btn_yes_selected: "Borrar seleccionado",
                    clearList_modal_clear_paused: "Borrar elementos en pausa",
                    clearList_modal_clear_progressed: "Borrar elementos progresados",
                    clearList_modal_btn_no: "No",
                    sidebar_item_manager: "Gerente",
                    sidebar_item_images: "Imágenes",
                    sidebar_item_audio: "Música",
                    sidebar_item_video: "Vídeo",
                    sidebar_item_document: "Documento",
                    fileStatus_error: "Error",
                    fileStatus_canceled: "Cancelado",
                    fileStatus_deleted: "Archivo eliminado",
                    fileStatus_paused: "Paused",
                    fileIconsText_openInFolder: "Mostrar en la carpeta",
                    fileIconsText_openFile: "Abrir archivo",
                    fileActionsMenu_copyLink: "Copiar fuente del archivo",
                    fileActionsMenu_continue: "Continuar",
                    fileActionsMenu_cancel: "Cancelado",
                    fileActionsMenu_pause: "Pausa",
                    fileActionsMenu_retry: "Repetir",
                    fileActionsMenu_deleteFromList: "Eliminar de la lista",
                    fileActionsMenu_deleteFromPC: "Eliminar de la computadora",
                    noSearchResult_msg: "No hay resultados",
                    removing_msg: "Eliminando ...",
                    noDownloads_msg: "Aún no hay descargas",
                    noConnection_msg: "Conexión perdida",
                    notificationStart: "Descarga iniciada",
                    notificationComplete: "Descarga completada",
                    notificationInterrupted: "Descarga fue interrumpida",
                    notificationProgressState: "descargado",
                    notificationCompleteState: "cargado",
                    notificationInterruptedState: "interrumpido",
                    notificationButtonOneText: "Abrir archivo",
                    notificationButtonTwoText: "Mostrar en la carpeta",
                    imageSnifferTitle: "Descargador de imágenes",
                    imageSnifferDescription: "Habilitar el descargador de imágenes en la página actual.",
                    imageSnifferButtonOn: "On",
                    imageSnifferButtonOff: "Off",
                    removeAllSniffers: "Eliminar todos los rastreadores",
                    imageSniffersWasDeactivated: "El descargador de imágenes se desactivó para todas las pestañas.",
                    videoActionCopyLink: "Copiar enlace de video",
                    videoSnifferTitle: "Para descargar el vídeo deseado necesitas:",
                    videoInfoStep1: "1. Ir a una página web con un video que desea descargar.",
                    videoInfoStep2: "2. Abra el emergente Online Download Manager en la página con el video.",
                    videoInfoStep3: "3. Elija y descargue el archivo de video deseado de la lista en esta pestaña.",
                    notificationNoDownloadableVideos: "No hay vídeo para descargar.",
                    notificationNoDownloadableAudios: "No hay audios disponibles para descargar.",
                    audioActionDownload: "Descargar",
                    audioActionCopyLink: "Copiar enlace de audio",
                    audioActionCopyLinkCopied: "Copiado",
                    audioActionOpenInTab: "Abrir en una pestaña nueva",
                    uploadToCloud: "Subir a la nube",
                    uploadedToCloud: "Ya subido",
                    NoContentTitle: "Ooopss!",
                    NoContentString: "ODM no encontró ningún archivo aquí.",
                    NoContentString2: "Intenta primero",
                    NoContentRefreshBtn: "Actualizar Página",
                    NoContentRefreshBtnReloading: "Por favor espera...",
                    NoContentString3: "No ayuda?",
                    NoContentString3_1_1: "Reproducción",
                    NoContentString3_1_2: "video/audio en la página.",
                    NoContentString3_1_3: "O envíenos una solicitud a",
                    NoContentString3_1_3doc: "Envíenos su solicitud",
                    NoContentLine1: "Parece que ODM no encontró contenido descargable en esta página",
                    NoContentLine2: "Haga clic en el botón de abajo si el sitio tiene contenido adecuado para descargar.",
                    NoContentBtn: "Añadir este sitio a ODM!",
                    NoContentUnAuthorizedUser: "Por favor, autorice a enviar una solicitud.",
                    NoContentAuthorizationLink: "Iniciar sesión",
                    ticketWasSent: "Boleto fue enviado!",
                    ticketAlreadyExist: "El boleto ya existe",
                    UpgradeTitle_1: "Suscripción",
                    UpgradeTitle_2: "¡no detectado!",
                    UpgradeLine1: 'Obtenga una prueba gratuita de 7 días o una suscripción "Ultra"',
                    UpgradeBtn: "Consiguelo ahora",
                    DomainDisabledTitle: "Descargador deshabilitado!",
                    DomainDisabledLine1: "Consulte la página de opciones si desea utilizar un descargador en este sitio.",
                    DomainDisabledBtn: "Ir a la página de opciones",
                    cloud_authorization_error: "Por favor, inicie sesión en el servicio en la nube",
                    clearList_modal_btn_only_finished: "Solo terminado",
                    generateQR: "Generar código QR",
                    optionBannerString_1: "Mira la lista completa",
                    optionBannerString_2: "de características!",
                    optionBannerBtn: "Opciones",
                    upgradeBannerString_1: "Más funciones con Ultra",
                    upgradeBannerString_2: "precio desde",
                    upgradeBannerString_3: "/mes",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "Descubre todas las funciones",
                    upgradeBannerPlayBtnString_2: "Con",
                    upgradeBannerPlayBtnString_3: "y",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "Categoría y extensión del archivo.",
                            intro: "Seleccione una categoría de archivo para buscar y descargar desde los sitios web que visita. <br>\nTambién puede editar extensiones de archivo, eliminar las que no se utilizan o agregar las suyas propias. "
                        },
                        cd_intro_step2: {
                            title: "Menú",
                            intro: "Ocultar y mostrar el menú."
                        },
                        cd_intro_step3: {
                            title: "Encontró contenido",
                            intro: "El contenido fundamentado se enumerará en esta área."
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "Seleccione una categoría",
                        fileExtensionTitle: "Seleccionar extensión de archivo"
                    }
                },
                notifications: {
                    option_menu: "Notificación",
                    visual_notifications: {
                        enable_visual_notification: "Activar notificaciones visuales",
                        list: [{
                            notification_text: "Notificación de Inicio de descarga"
                        }, {
                            notification_text: "Notificaciones del final de la descarga"
                        }, {
                            notification_text: "Notificación de error de arranque"
                        }],
                        notification_time: "Tiempo en la pantalla",
                        file_size_notification: "Tamaño del archivo para Mostrar la notificación",
                        size: [{
                            notification_text: "Ilimitado"
                        }, {
                            notification_text: "de KB"
                        }, {
                            notification_text: "de MB"
                        }, {
                            notification_text: "de GB"
                        }],
                        time: "s"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "Habilitar las notificaciones de sonido:",
                        list: [{
                            notification_text: "Notificación de Inicio de descarga"
                        }, {
                            notification_text: "Notificaciones del final de la descarga"
                        }, {
                            notification_text: "Notificación de error de arranque"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "Iniciar sesión en",
                    sign_up_text: "Regístrate",
                    profile_btn: "Profile",
                    log_out_btn: "Cerrar sesión",
                    email_field_placeholder: "Email",
                    pass_field_placeholder: "Contraseña",
                    remind_password_link: "¿PERDIDO LA CONTRASEÑA?",
                    invalid_email: "Compruebe que el correo electrónico se ha ingresado correctamente",
                    invalid_dataset: "Por favor, compruebe los datos introducidos",
                    email_already_in_use: "Correo electrónico ya en uso",
                    email_not_found: "Ningún usuario con ese email",
                    email_not_verified: "Este correo electrónico no está verificado",
                    incorrect_password: "La contraseña es incorrecta",
                    network_error: "Error de red. Por favor, inténtelo de nuevo más tarde",
                    registration_success_msg: "¡Más grande! Le enviamos un correo electrónico de activación. Compruebe su correo electrónico y haga clic en el enlace para verificar!",
                    subscription_badge_text: "Suscripción activa:",
                    update_link_text: "Haga clic para actualizar sus datos.",
                    learn_more_link_text: "Más información",
                    user_data_updated: "Sus datos se han actualizado correctamente",
                    user_logged_out: "Se cerró la sesión con éxito",
                    device_limit_exceeded: '¡Se agotó el límite de dispositivos! Has iniciado sesión en más de 3 dispositivos.\nUtilice el botón "Cerrar sesión" en la página Perfil y vuelva a iniciar sesión.'
                },
                sniffer: {
                    option_menu: "Descargadores de contenido",
                    video_sniffer_lablel: "Descargador de video",
                    audio_sniffer_lablel: "Descargador de audio",
                    image_sniffer_lablel: "Descargador de imágenes",
                    doc_sniffer_lablel: "Descargador de documentos",
                    add_domain_invalid_url: "¡URL invalida!",
                    add_domain_url_exist: "¡El dominio ya existe!",
                    options_values: {
                        all: "Habilitado en todas partes",
                        none: "Discapacitados en todas partes",
                        blacklist: "Lista bloqueada",
                        whitelist: "Lista permitida"
                    },
                    legend_1_title: "Habilitado en todas partes",
                    legend_1_descr: "Esta opción INCLUYE el descargador seleccionado para todas las páginas que visita.",
                    legend_1_extra_descr: "Tenga en cuenta que los descargadores son potentes analizadores de contenido que pueden afectar la velocidad de carga de la página, el rendimiento de su navegador y su PC en general.",
                    legend_2_title: "Discapacitados en todas partes",
                    legend_2_descr: "Esta opción inhabilita el programa de descarga seleccionado para todas las páginas que visita.",
                    legend_3_title: "Lista de URL bloqueada",
                    legend_3_descr: "Con esta opción, los descargadores no funcionan en sitios de la lista.",
                    legend_4_title: "Lista de URL permitida",
                    legend_4_descr: "Con esta opción, los descargadores funciona SOLAMENTE en sitios de la lista."
                },
                general: {
                    option_menu: "General",
                    ebable_default_download_bar: "Habilitar la barra de descarga del navegador predeterminado",
                    enable_icon_indicator: "Habilitar icono indicador de contenido",
                    enable_context_menu: 'Habilite "Descargar con ODM" para el menú contextual',
                    enable_autoclean_downloads: "Habilite la limpieza automática de la lista de descargas de descargas con errores",
                    autoclean_description: "(Elija el límite (10,50,100 registros) cuando se debe limpiar la lista)"
                },
                app_appearance: {
                    option_menu: "Apariencia De La Aplicación",
                    application_theme: "Aplicaciones en tema",
                    dark_theme: "Oscuro",
                    light_theme: "Luminosa",
                    application_language: "Idioma De La Solicitud",
                    default_download_bar: "Ocultar la barra de descarga predeterminada de Chrome",
                    enable_dark_icon: "Icono de la barra de herramientas"
                },
                cloud_sync: {
                    option_menu: "Sincronización en la nube",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "Nombre de la cuenta",
                    heading_strong: "Sincronización de la nube - ",
                    heading_string: "Es una función que le permite cargar archivos inhalados en su almacenamiento de Dropbox o Google Drive. Para usarlo, debe autorizar el uso de la API de almacenamiento en la nube, solo haga clic en el botón, todo es fácil.",
                    cloud_login: "Iniciar sesión",
                    cloud_logout: "Cerrar sesión",
                    popup_cloud_status_title: "Estado:",
                    pricing_link_text: "Obtener suscripción PRO"
                },
                save_folder: {
                    option_menu: "Sistema de clasificación",
                    file_routing_title: "Habilitar el sistema de enrutamiento para los archivos descargados",
                    file_routing_description: "El sistema de enrutamiento distribuye automáticamente los archivos a las subcarpetas apropiadas en la carpeta Descargas. A continuación se muestra una lista de extensiones de archivo y el directorio en el que se colocarán después de la descarga.",
                    option_addrule_btn: "Agregar regla de enrutamiento"
                },
                help: {
                    helpTitle: "Online Download Manager Ayuda",
                    faqTitle: "FAQ",
                    faqContent: "¿Tiene alguna pregunta sobre cómo usar Online Download Manager?",
                    faqContent2: "Nosotros hicimos un detallado",
                    faqContentEnding: "para ti.",
                    recommendTitle: "Recomendaciones",
                    recommendContent: "¿Tiene ideas sobre cómo mejorar ODM?",
                    recommendContent2: "Use",
                    recommendContentEnding: "Forma para compartir ideas con nosotras.",
                    bugsTitle: "Errores",
                    bugsContent: "¿Encontró un error? Envianos un",
                    bugsContentEnding: "o usar",
                    updatesTitle: "Actualizaciones",
                    updatesContent: "Sigue nuestro",
                    updatesContentEnding: "estad atentos a las noticias sobre ODM.",
                    option_menu: "Ayudar",
                    faq: "Aquí tratamos de responder a todas las Preguntas más Frecuentes",
                    issue: "Si tiene algún problema, recomendaciones o deseos según la funcionalidad de las aplicaciones, por favor, consulte la página de Google WebStore para comunicárnoslo"
                },
                about: {
                    option_menu: "Sobre El Proyecto",
                    description: ["¿Quiénes somos? - somos un ambicioso equipo de diseñadores y desarrolladores unidos por una sola idea.", "Nuestro principal objetivo es hacer que las cosas cotidianas sean más cómodas y compartir soluciones con el mundo", "Un día notamos que el navegador más popular del mundo tiene problemas con la interfaz de usuario durante el proceso de descarga. Así que decidimos resolver este problema y desarrollar verdaderamente uno de los mejores administradores de descarga.", "Hemos reunido muchos años de experiencia en diseño web y desarrollo de software para crear la solución más adecuada y perfecta. Analizó la mayoría de soluciones similares para descubrir sus lados fuertes y débiles.", "Como resultado de un trabajo largo y complicado, nació un Administrador de descarga en línea que reunió todo lo mejor que podría haber en el descargador moderno.", "Hasta la fecha, nuestro trabajo ha sido apreciado por más de 260,000 usuarios de todo el mundo, y este hecho nos hace comprender que nuestro camino es el correcto! Todos nuestros esfuerzos alcanzan el objetivo, nuestro trabajo es del agrado de los usuarios y nos da cada vez más fuerza, para avanzar, mejorar nuestro producto y hacer que el mundo sea un poco mejor.", "Espero que usted, nuestro querido usuario, aprecie nuestro producto también.", "En nuestro turno, prometemos escuchar sus necesidades e integrarlo en Online Download Manager para que sea realmente el mejor gestor de descarga en el mundo.", "Saludos, equipo de Administrador de descargas en línea de Chrome"],
                    rate_us: "Apprécier",
                    donate: "Donar"
                },
                save_settings: "Configuración guardada",
                table: {
                    fileType: "Tipo de archivo",
                    directory: "Directorio",
                    file_extension: "Extensión de archivo",
                    rule_actions: "Acciones",
                    extensions: ["Cuadro", "Música", "Vídeo", "Programa", "Documento", "Libro", "Archivo", "Imagen", "Sistema", "Fuente", "Torrente", "Otro"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Choose the language",
                    wlcModalTitle: "Hello!",
                    wlcModalSubTitle: "Thanks for choosing the ODM extension and welcome!",
                    wlcString_1: "We prepared a quick and clear guide through the extension`s features.",
                    wlcString_1_2: "Keep in mind that some of the functions (like video downloaders or audio downloaders from certain sites) available only with a paid subscription and only for registered users.",
                    wlcString_2: "To shorten the learning time, we made a quick guide through the interface.",
                    wlcString_3: "Start tour using controls",
                    wlcString_4: "step-by-step learn your new download helper.",
                    startTourBtn: "Start Tour",
                    skipTourBtn: "Skip"
                },
                tutorial_finish_modal: {
                    tfmTitle: "That’s all for start!",
                    tfmString_1: "This is was a short review of the main options so you can open the full potential of ODM extension.",
                    tfmString_2: "You can always get detailed instructions for each ODM function, using the Help Center, the icon in the bottom right corner.",
                    tfmString_3: "to get all features and stay tuned for updates and news.",
                    tfmButton: "Close"
                },
                sidebar_footer: {
                    Share: "Cuéntale al mundo sobre ODM",
                    RateUs: "Tasa de ODM",
                    raitingThanksText: "Thank you!"
                },
                tutorial: {
                    heading: "Help Center",
                    contents: "Contents:",
                    quickStart: "Quick start",
                    categories: {
                        introduction: {
                            title: "Introduction",
                            steps: {
                                profile: {
                                    title: "Users profile",
                                    intro: "Your account information goes here: avatar, email, subscription plan, etc.<br> You can change avatar and information in your profile on the <a href='https://download-manager.online/profile' target='_blank'>web site.</a> "
                                },
                                app_appearance: {
                                    title: "App Appearance",
                                    intro: "Settings for the extension`s appearance and language selection."
                                },
                                notifications: {
                                    title: "Notifications",
                                    intro: "Manage sound and visual notifications.<br>Set the volume and duration of the display on the screen."
                                },
                                content_downloaders: {
                                    title: "Content downloaders",
                                    intro: "Content downloaders - modules that find media files on sites and lets you download them.<br>You can set-up a white or blacklist of domains for content downloaders."
                                },
                                cloud_sync: {
                                    title: "Cloud Sync",
                                    intro: "Cloud Sync options - lets you add your Cloud storage account into ODM for files transfer directly from extension to storage."
                                },
                                sorting_system: {
                                    title: "Sorting system",
                                    intro: "Distribution of downloaded files to sub-directories in the 'Downloads' folder depending on the file extension."
                                },
                                help: {
                                    title: "Help",
                                    intro: "Here you can tell us about the bugs, contact support, or go to the FAQ page."
                                },
                                share: {
                                    title: "Share ODM with friends",
                                    intro: "Cuéntale al mundo sobre la extensión ODM."
                                },
                                rate: {
                                    title: "Tasa de ODM",
                                    intro: "Rate the ODM extension.<br>Each 5 stars review, let us know that we are moving in the right direction."
                                }
                            }
                        },
                        app_appearance: {
                            title: "App Appearance",
                            steps: {
                                theme: {
                                    title: "Pop-up theme",
                                    intro: "Select a light or dark pop-up theme."
                                },
                                language: {
                                    title: "Extension`s Language",
                                    intro: "Application language.<br> English is enabled by default."
                                },
                                defaultChromesBar: {
                                    title: "Default browser`s download bar",
                                    intro: "Turn on/off the standard browser`s download bar, which displays all current or completed downloads."
                                },
                                contentIndicator: {
                                    title: "Content indicator on the icon",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>A red indicator on the extension icon indicates that content available for download has been found on the page."
                                },
                                darkIcon: {
                                    title: "Extension`s icon",
                                    intro: "Switch extension`s icon to colored or dark."
                                }
                            }
                        },
                        notifications: {
                            title: "Notifications",
                            steps: {
                                visual_notifications: {
                                    title: "Visual notifications",
                                    intro: "On/Off visual notifications about the download process."
                                },
                                visualNotificationsDetails: {
                                    title: "Visual notifications settings",
                                    intro: "Set-up which visual notifications you want to see: start of download, end of download, download error.<br> Also, you can choose in seconds how long these notifications will appear on the screen.<br> &#8734; - means that notification will stay on screen till you click it."
                                },
                                filesizeToRunNotifications: {
                                    title: "Settings of file size to run notifications.",
                                    intro: "You can select the minimum size of the downloadable file to show notifications."
                                },
                                sound_notifications: {
                                    title: "Sound notifications",
                                    intro: "On/Off sound notifications about the download process."
                                },
                                soundNotificationsDetails: {
                                    title: "Sound notifications settings",
                                    intro: "Set-up which sound notifications you want to hear: start of download, end of download, download error.<br> Also, you can choose the notifications volume."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Content downloaders",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Content downloaders control",
                                    intro: "Here you can tune domain names where content downloaders will work or not.<br> By default - all downloaders work on all pages you visit."
                                },
                                downloadersLegend: {
                                    title: "Possible options",
                                    intro: "There are 4 options for content downloaders work. <br> Check-out the list and select the most suitable for you."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Select the necessary option",
                                    intro: "Select the necessary option from the dropdown menu.<br> If you enable black/white lists - you need to add the necessary domain into the table."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Cloud Sync",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Cloud Sync",
                                    intro: "Here you can authorize ODM to your cloud storage(s).<br> It will let you upload content found on the pages directly to your storage from the extensions pop-up interface.<br><br><strong>This option available with PRO subscription and higher.</strong> "
                                },
                                cloudSelect: {
                                    title: "Storage select",
                                    intro: "Select the necessary storage clicking on its logo. Then click the 'Log in' button and log in using your Login/Password.<br><br><strong>Keep in mind - we use official API from cloud storages - your personal data in complete safety.</strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "Sorting system",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "Sorting system",
                                    intro: "Enable/Disable sorting system.<br><br> <strong>Disabled by default.</strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Sorting rules list",
                                    intro: "List of pre-settled rules with the most popular file extensions."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Enable/Disable rule",
                                    intro: "Click checkbox to disable rule, click again to enable it."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Actions with rule",
                                    intro: "Buttons for actions with rules. You can edit any rule or delete it permanently."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Users rules",
                                    intro: "You can add your custom rule."
                                }
                            }
                        },
                        Help: {
                            title: "Help",
                            steps: {
                                help_faq: {
                                    title: "FAQ",
                                    intro: "FAQ page with answers to most popular and common questions."
                                },
                                help_recommendations: {
                                    title: "Have recommendations?",
                                    intro: "With this form, you can drop us a line with your ideas and proposals."
                                },
                                help_bugs: {
                                    title: "Report the bug",
                                    intro: "Let us know if there are any problems with the ODM extension."
                                },
                                help_updates: {
                                    title: "News and updates",
                                    intro: "We post detailed information about the most important updates in our blog."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "Descargador de enlaces por lotes",
                    step1: "1. Cargar archivo con vínculos",
                    step1Description: "Haga clic o arrastre y suelte el archivo en esta área para cargar la lista de enlaces",
                    step1SupportedFiles: "Formatos de lista admitidos: .csv, .json, .xls, .xlsx, .txt, con saltos de línea",
                    step2: "2. o ingrese enlaces manualmente",
                    step3: "3. Resultado de la comprobación",
                    checkBtn: "Cheque enlaces",
                    downloadBtn: "Descargar",
                    allLinks: "Todas",
                    okLinks: "Trabajando",
                    errorLinks: "No funciona",
                    linksListDeleteErrors: "Eliminar enlaces con errores",
                    linksListDeleteDuplicated: "Eliminar enlaces duplicados"
                }
            }
        }), {
            ua: {
                content: {
                    download_all: "Завантажити все",
                    download_selected: "Завантажити обрані"
                },
                popup: {
                    toolsBar_filter_finished: "Завантажені",
                    toolsBar_filter_deleted: "Вилучений",
                    toolsBar_filter_canceled: "Скасовані",
                    toolsBar_filter_error: "З помилками",
                    toolsBar_filter_paused: "Призупинені",
                    toolsBar_filter_in_progress: "Активні завантаження",
                    toolsBar_search_placeholder: "Пошук",
                    toolsBar_downloader_placeholder: "Завантажити по Url",
                    toolsBar_downloader_error: "Невірній Url",
                    clearList_modal_text: "Ви бажаєте очистити список завантажень?",
                    clearList_modal_btn_yes: "Так",
                    clearList_modal_btn_yes_all: "Так all",
                    clearList_modal_btn_yes_selected: "Видалити вибрані",
                    clearList_modal_clear_paused: "Видалити завантаження на паузі",
                    clearList_modal_clear_progressed: "Видалити завантаження у процессі",
                    clearList_modal_btn_no: "Ні",
                    sidebar_item_manager: "Менеджер",
                    sidebar_item_images: "Зображення",
                    sidebar_item_audio: "Музика",
                    sidebar_item_video: "Відео",
                    sidebar_item_document: "Документ",
                    fileStatus_error: "Помилка",
                    fileStatus_canceled: "Скасованні",
                    fileStatus_deleted: "Файл видален",
                    fileStatus_paused: "Пауза",
                    fileIconsText_openInFolder: "Показати в папці",
                    fileIconsText_openFile: "Відкрити файл",
                    fileActionsMenu_copyLink: "Копіювати джерело файлу",
                    fileActionsMenu_continue: "Продовжити",
                    fileActionsMenu_cancel: "Скасувати",
                    fileActionsMenu_pause: "Пауза",
                    fileActionsMenu_retry: "Перезапустити",
                    fileActionsMenu_deleteFromList: "Видалити зі списку",
                    fileActionsMenu_deleteFromPC: "Видалити з комп'ютера",
                    noSearchResult_msg: "Немає результатів",
                    removing_msg: "Видалення...",
                    noDownloads_msg: "Немає завантажень",
                    noConnection_msg: "З'єднання втрачено",
                    notificationStart: "Завантаження почалося",
                    notificationComplete: "Завантаження завершено",
                    notificationInterrupted: "Завантаження перервано",
                    notificationProgressState: "завантажується",
                    notificationCompleteState: "було завантажено",
                    notificationInterruptedState: "було перервано",
                    notificationButtonOneText: "Відкрити файл",
                    notificationButtonTwoText: "Показати в папці",
                    imageSnifferTitle: "Завантажувач зображень",
                    imageSnifferDescription: "Увімкнути завантажувач зображень на поточній сторінці.",
                    imageSnifferButtonOn: "Увімк.",
                    imageSnifferButtonOff: "Вимкн.",
                    removeAllSniffers: "Деактивувати всі завантажувачі -",
                    imageSniffersWasDeactivated: "Завантажувач зображень було відключено для всіх вкладок.",
                    videoActionCopyLink: "Копіювати посилання на відео",
                    videoSnifferTitle: "Щоб завантажити відео, потрібно:",
                    videoInfoStep1: "1. Перейдіть до веб-сторінки з відео, яке потрібно завантажити.",
                    videoInfoStep2: "2. Відкрийте спливаюче вікно розширення на сторінці з необхідним відео",
                    videoInfoStep3: "3. Виберіть і завантажте потрібний відеофайл зі списку на цій вкладці.",
                    notificationNoDownloadableVideos: "Доступні для скачування відео не знайдені.",
                    notificationNoDownloadableAudios: "Доступні для скачування аудіо не знайдені.",
                    audioActionDownload: "Завантажити",
                    audioActionCopyLink: "Копіювати посилання",
                    audioActionCopyLinkCopied: "Скопійовано",
                    audioActionOpenInTab: "Відкрити в новій вкладці",
                    uploadToCloud: "Завантажити до Cloud",
                    uploadedToCloud: "Вже Завантажено",
                    NoContentTitle: "Ууупсс!",
                    NoContentString: "ODM тут не знайшов жодного файлу.",
                    NoContentString2: "Спершу спробуйте",
                    NoContentRefreshBtn: "Оновити сторінку",
                    NoContentRefreshBtnReloading: "Зачекайте ...",
                    NoContentString3: "Не допомагло?",
                    NoContentString3_1_1: "Відтворіть",
                    NoContentString3_1_2: "відео/аудіо на сторінці.",
                    NoContentString3_1_3: "Або надішліть нам запит щоб",
                    NoContentString3_1_3doc: "Надішліть нам запит",
                    NoContentLine1: "Схоже ODM не знайшов жодного контенту для завантаженя на цій сторінці.",
                    NoContentLine2: "Натисніть кнопку нижче якщо сайт містить контент для завантаження.",
                    NoContentBtn: "Додаті цей сайт до ODM!",
                    NoContentUnAuthorizedUser: "Будь ласка, авторизуйтесь, щоб надіслати запит.",
                    NoContentAuthorizationLink: "Увійти!",
                    ticketWasSent: "Тікєт було надіслано!",
                    ticketAlreadyExist: "Тікєт вже існує",
                    UpgradeTitle_1: "Підписка",
                    UpgradeTitle_2: "не виявлена! ",
                    UpgradeLine1: 'Отримайте безкоштовну 7-денну пробну версію або передплати "Ultra"',
                    UpgradeBtn: "Отримайте зараз",
                    DomainDisabledTitle: "Завантажувач відключений!",
                    DomainDisabledLine1: "Перевірте сторінку опції, для використовуваня завантажувача на цьому сайті.",
                    DomainDisabledBtn: "Перейти до сторінки налаштувань",
                    cloud_authorization_error: "Будь ласка авторизуйтесь у Cloud сервісі",
                    clearList_modal_btn_only_finished: "Лише завершені",
                    generateQR: "Створіть QR-код",
                    optionBannerString_1: "Перегляньте повний список",
                    optionBannerString_2: "функцій ODM!",
                    optionBannerBtn: "Параметри",
                    upgradeBannerString_1: "Більше можливостей з Ultra",
                    upgradeBannerString_2: "ціна від",
                    upgradeBannerString_3: "/ місяць",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "Відкрий всі функції",
                    upgradeBannerPlayBtnString_2: "з",
                    upgradeBannerPlayBtnString_3: "і",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "Категорія і розширення файлу.",
                            intro: "Виберіть категорію файлів для пошуку і завантаження з відвідуваних вами веб-сайтів. <br>\nВи також можете редагувати розширення файлів, видаляти невикористовувані або додавати власні. "
                        },
                        cd_intro_step2: {
                            title: "Меню",
                            intro: "Приховати і показати меню."
                        },
                        cd_intro_step3: {
                            title: "Знайдений контент",
                            intro: "Знайдений контент буде відображений в цій області."
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "Оберіть категорію",
                        fileExtensionTitle: "Оберіть розширення файлу"
                    }
                },
                notifications: {
                    option_menu: "Cповіщення",
                    visual_notifications: {
                        enable_visual_notification: "Увімкнути візуальні сповіщення",
                        list: [{
                            notification_text: "Cповіщення початку завантаження"
                        }, {
                            notification_text: "Сповіщення готового завантаження"
                        }, {
                            notification_text: "Сповіщення про помилку завантаження"
                        }],
                        notification_time: "Тривалість на екрані",
                        file_size_notification: "Розмір файлу, щоб відобразити сповіщення",
                        size: [{
                            notification_text: "Необмежений"
                        }, {
                            notification_text: "КБ від"
                        }, {
                            notification_text: "МБ від"
                        }, {
                            notification_text: "ГБ від"
                        }],
                        time: "cек"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "Увімкнути звукові сповіщення",
                        list: [{
                            notification_text: "Cповіщення початку завантаження"
                        }, {
                            notification_text: "Сповіщення готового завантаження"
                        }, {
                            notification_text: "Сповіщення про помилку завантаження"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "Увійти",
                    sign_up_text: "Підписатіся",
                    profile_btn: "Профіль",
                    log_out_btn: "Вийти",
                    email_field_placeholder: "Пошта",
                    pass_field_placeholder: "Пароль",
                    remind_password_link: "ЗАБУЛИ ПАРОЛЬ?",
                    invalid_email: "Будь ласка перевірте вірність введення паролю",
                    invalid_dataset: "Будь ласка перевірте введені дані",
                    email_already_in_use: "Ця пошта вже зайнята",
                    email_not_found: "Користувача з такою поштою не знайдено.",
                    email_not_verified: "Ця пошта не підтверджена",
                    incorrect_password: "Невірний пароль",
                    network_error: "Помилка мережі. Будь ласка, спробуйте пізніше",
                    registration_success_msg: "Чудово! Ми відправили вам письмо активації. Перевірте вашу пошту та перейдіть по ссилці для підтвердження!",
                    subscription_badge_text: "Діюча підписка:",
                    update_link_text: "Натисніть для оновленя ваших данних.",
                    learn_more_link_text: "Дізнатися більше",
                    user_data_updated: "Ваші дані були успішно оновлені",
                    user_logged_out: "Ви були успішно розлогінені",
                    device_limit_exceeded: 'Ліміт пристрою вичерпано! Ви ввійшли в систему більше ніж на 3 пристроях.\nБудь ласка, скористайтеся кнопкою "Вихід з сеансів" на сторінці профілю та повторно авторизуйтесь.'
                },
                sniffer: {
                    option_menu: "Завантажувачі контенту",
                    video_sniffer_lablel: "Відео завантажувач",
                    audio_sniffer_lablel: "Аудіо завантажувач",
                    image_sniffer_lablel: "Завантажувач зображень",
                    doc_sniffer_lablel: "Завантажувач документів",
                    add_domain_invalid_url: "Невірний url!",
                    add_domain_url_exist: "Домен вже існує!",
                    options_values: {
                        all: "Увімкнуто усюди",
                        none: "Вимкнуто усюди",
                        blacklist: "Список заблокованих",
                        whitelist: "Список дозволенних"
                    },
                    legend_1_title: "Увімкнуто усюди",
                    legend_1_descr: "Ця опція Включає вибраний завантажувач для всіх відвідуваних сторінок.",
                    legend_1_extra_descr: "Майте на увазі, що завантажувачі - це потужні аналізатори вмісту, які можуть впливати на швидкість завантаження сторінки, продуктивність вашого браузера та ПК загалом.",
                    legend_2_title: "Вимкнуто усюди",
                    legend_2_descr: "Ця опція ВИМИКАЄ вибраний завантажувач для всіх відвідуваних сторінок.",
                    legend_3_title: "Список заблокованних URL",
                    legend_3_descr: "За допомогою цієї опції завантажувачі не працюють на сайтах зі списку.",
                    legend_4_title: "Список дозволенніх URL",
                    legend_4_descr: "За допомогою цієї опції завантажувачі працюють ТІЛЬКИ на сайтах зі списку."
                },
                general: {
                    option_menu: "Загальні",
                    ebable_default_download_bar: "Увімкніть панель завантаження браузера за замовчуванням",
                    enable_icon_indicator: "Включити індикатор контенту на іконці розширення",
                    enable_context_menu: 'Включити "Завантажити з ODM" для меню правої кнопки миші',
                    enable_autoclean_downloads: "Увімкніть автоматичне очищення списку завантажень від завантажень із помилками",
                    autoclean_description: "(Виберіть обмеження (10 50 100 записів) коли список слід очищати)"
                },
                app_appearance: {
                    option_menu: "Зовнішній вигляд",
                    application_theme: "Тема",
                    dark_theme: "Темна",
                    light_theme: "Світла",
                    application_language: "Мова програми",
                    default_download_bar: "Сховати панель завантаження Chrome",
                    enable_dark_icon: "Значок панелі інструментів"
                },
                cloud_sync: {
                    option_menu: "Cloud синхронізування",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "Обліковій запис",
                    heading_strong: "Cloud синхронізування - ",
                    heading_string: "це функція, яка дозволяє завантажувати знайдені файли до сховища Dropbox або Google Drive. Для його використання вам потрібно авторизуватися за допомогою cloud storage API, просто натисніть на кнопку, все просто.",
                    cloud_login: "Увійти",
                    cloud_logout: "Вийти",
                    popup_cloud_status_title: "Статус:",
                    pricing_link_text: "Отрімати підписку PRO"
                },
                save_folder: {
                    option_menu: "Система сортування",
                    file_routing_title: "Увімкнути систему розподілу файлів.",
                    file_routing_description: 'Система сортування автоматично розподіляє файли у відповідні підпапки в папці "Завантаження". Нижче перелік розширень файлів та каталог, в який вони будуть розміщені після завантаження.',
                    option_addrule_btn: "Додати правило сортування"
                },
                help: {
                    helpTitle: "Online Download Manager Допомога ",
                    faqTitle: "FAQ",
                    faqContent: "У вас є питання, як користуватися Online Download Manager?",
                    faqContent2: "Ми зробили детальний розділ",
                    faqContentEnding: "для вас.",
                    recommendTitle: "Рекомендації",
                    recommendContent: "У вас є ідеї, як зробити ODM кращим?",
                    recommendContent2: "Використайте ",
                    recommendContentEnding: "форму, щоб поділитися ідеями з нами.",
                    bugsTitle: "Помилки",
                    bugsContent: "Знайшли помилку? Надішліть нам",
                    bugsContentEnding: "або скористайтесь формою на ",
                    updatesTitle: "Оновлення",
                    updatesContent: "Слідкуйте за нашими",
                    updatesContentEnding: "і стежте за новинами про ODM.",
                    option_menu: "Допомога",
                    faq: "Тут ми спробуемо відповісти на всі Поширені запитання",
                    issue: "Якщо у вас виникли проблеми, рекомендації чи побажання відповідно до функціональності додаткa, будь ласка, перегляньте сторінку Google WebStore, щоб повідомити нам про це"
                },
                about: {
                    option_menu: "Про проект",
                    description: ["Хто ми? - ми - амбітна команда дизайнерів і розробників, об'єднаних однією ідеєю.", "Наша головна мета - зробити повсякденні речі більш зручними і поділитися цими рішеннями з усім Світом.", "Одного разу ми помітили, що найпопулярніший браузер в світі має проблеми з інтерфейсом під час процесу завантаження. Тому ми захотіли вирішити цю проблему і розробили дійсно один з кращих Менеджерів Завантаженнь.", "Ми зібрали багаторічний досвід веб-дизайну і розробки програмного забезпечення для створення найбільш підходящого і досконалого решеня. Також ми проаналізували більшість подібних рішень, щоб з'ясувати їх сильні і слабкі сторони.", "В результаті довгої і складної роботи з'явився онлайн Менеджер Завантажень, в якому сконцентровано все найкраще, що може бути в сучасному засобі завантаження.", "На сьогоднішній день наша робота була оцінена більш ніж 260,000 користувачів з усього світу - і цей факт змушує нас зрозуміти, що наш шлях правильний! всі наші зусилля досягають мети, наша робота подобається користувачам, і це дає нам все більше сили рухатися далі, покращувати Менеджер Завантажень і робити Світ трішки краще.", "Сподіваємося, що ви, наш дорогий користувач, так само оціните наш продукт.", "У свою чергу ми обіцяємо прислухатися до ваших потреб і реалізовувати їх в наступній версії Менеджера Завантажень, щоб зробити його дійсно найкращим завантажувачем у світі.", "З повагою, команда Chrome Online Download Manager."],
                    rate_us: "Оцініть нас",
                    donate: "Пожертвувати"
                },
                save_settings: "Налаштування збережені",
                table: {
                    fileType: "Тип файлів",
                    directory: "Директорія",
                    file_extension: "Типи файлів",
                    rule_actions: "Дії",
                    extensions: ["Картинки", "Музика", "Відео", "Програми", "Документи", "Книги", "Архіви", "Зображення", "Система", "Шрифти", "Торрент", "Інше"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Виберіть мову",
                    wlcModalTitle: "Привіт!",
                    wlcModalSubTitle: "Дякуємо, що вибрали розширення ODM та ласкаво просимо!",
                    wlcString_1: "Ми підготували швидкий і зрозумілий посібник по функціях розширення.",
                    wlcString_1_2: "Майте на увазі, що деякі функції (наприклад, завантажувачі відео чи завантажувачі аудіо з певних сайтів) доступні лише з платною підпискою та лише для зареєстрованих користувачів.",
                    wlcString_2: "To shorten the learning time, we made a quick guide through the interface.",
                    wlcString_3: "Start tour using controls",
                    wlcString_4: "step-by-step learn your new download helper.",
                    startTourBtn: "Start Tour",
                    skipTourBtn: "Skip"
                },
                tutorial_finish_modal: {
                    tfmTitle: "That’s all for start!",
                    tfmString_1: "This is was a short review of the main options so you can open the full potential of ODM extension.",
                    tfmString_2: "You can always get detailed instructions for each ODM function, using the Help Center, the icon in the bottom right corner.",
                    tfmString_3: "to get all features and stay tuned for updates and news.",
                    tfmButton: "Close"
                },
                sidebar_footer: {
                    Share: "Розкажи Світу про ODM",
                    RateUs: "Оцініть ODM",
                    raitingThanksText: "Thank you!"
                },
                tutorial: {
                    heading: "Центр Допомоги",
                    contents: "Contents:",
                    quickStart: "Quick start",
                    categories: {
                        introduction: {
                            title: "Introduction",
                            steps: {
                                profile: {
                                    title: "Users profile",
                                    intro: "Your account information goes here: avatar, email, subscription plan, etc.<br> You can change avatar and information in your profile on the <a href='https://download-manager.online/profile' target='_blank'>web site.</a> "
                                },
                                app_appearance: {
                                    title: "App Appearance",
                                    intro: "Settings for the extension`s appearance and language selection."
                                },
                                notifications: {
                                    title: "Notifications",
                                    intro: "Manage sound and visual notifications.<br>Set the volume and duration of the display on the screen."
                                },
                                content_downloaders: {
                                    title: "Content downloaders",
                                    intro: "Content downloaders - modules that find media files on sites and lets you download them.<br>You can set-up a white or blacklist of domains for content downloaders."
                                },
                                cloud_sync: {
                                    title: "Cloud синхронізування",
                                    intro: "Cloud Sync options - lets you add your Cloud storage account into ODM for files transfer directly from extension to storage."
                                },
                                sorting_system: {
                                    title: "Sorting system",
                                    intro: "Distribution of downloaded files to sub-directories in the 'Downloads' folder depending on the file extension."
                                },
                                help: {
                                    title: "Help",
                                    intro: "Here you can tell us about the bugs, contact support, or go to the FAQ page."
                                },
                                share: {
                                    title: "Share ODM with friends",
                                    intro: "Розкажи Світу про ODM"
                                },
                                rate: {
                                    title: "Оцініть ODM",
                                    intro: "Rate the ODM extension.<br>Each 5 stars review, let us know that we are moving in the right direction."
                                }
                            }
                        },
                        app_appearance: {
                            title: "App Appearance",
                            steps: {
                                theme: {
                                    title: "Pop-up theme",
                                    intro: "Select a light or dark pop-up theme."
                                },
                                language: {
                                    title: "Extension`s Language",
                                    intro: "Application language.<br> English is enabled by default."
                                },
                                defaultChromesBar: {
                                    title: "Default browser`s download bar",
                                    intro: "Turn on/off the standard browser`s download bar, which displays all current or completed downloads."
                                },
                                contentIndicator: {
                                    title: "Content indicator on the icon",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>A red indicator on the extension icon indicates that content available for download has been found on the page."
                                },
                                darkIcon: {
                                    title: "Значок розширення",
                                    intro: "Переключіть значок розширення на кольоровий або темний."
                                }
                            }
                        },
                        notifications: {
                            title: "Notifications",
                            steps: {
                                visual_notifications: {
                                    title: "Visual notifications",
                                    intro: "On/Off visual notifications about the download process."
                                },
                                visualNotificationsDetails: {
                                    title: "Visual notifications settings",
                                    intro: "Set-up which visual notifications you want to see: start of download, end of download, download error.<br> Also, you can choose in seconds how long these notifications will appear on the screen.<br> &#8734; - means that notification will stay on screen till you click it."
                                },
                                filesizeToRunNotifications: {
                                    title: "Settings of file size to run notifications.",
                                    intro: "You can select the minimum size of the downloadable file to show notifications."
                                },
                                sound_notifications: {
                                    title: "Sound notifications",
                                    intro: "On/Off sound notifications about the download process."
                                },
                                soundNotificationsDetails: {
                                    title: "Sound notifications settings",
                                    intro: "Set-up which sound notifications you want to hear: start of download, end of download, download error.<br> Also, you can choose the notifications volume."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Content downloaders",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Content downloaders control",
                                    intro: "Here you can tune domain names where content downloaders will work or not.<br> By default - all downloaders work on all pages you visit."
                                },
                                downloadersLegend: {
                                    title: "Possible options",
                                    intro: "There are 4 options for content downloaders work. <br> Check-out the list and select the most suitable for you."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Select the necessary option",
                                    intro: "Select the necessary option from the dropdown menu.<br> If you enable black/white lists - you need to add the necessary domain into the table."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Cloud синхронізування",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Cloud синхронізування",
                                    intro: "Here you can authorize ODM to your cloud storage(s).<br> It will let you upload content found on the pages directly to your storage from the extensions pop-up interface.<br><br><strong>This option available with PRO subscription and higher.</strong> "
                                },
                                cloudSelect: {
                                    title: "Storage select",
                                    intro: "Select the necessary storage clicking on its logo. Then click the 'Log in' button and log in using your Login/Password.<br><br><strong>Keep in mind - we use official API from cloud storages - your personal data in complete safety.</strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "Sorting system",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "Sorting system",
                                    intro: "Enable/Disable sorting system.<br><br> <strong>Disabled by default.</strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Sorting rules list",
                                    intro: "List of pre-settled rules with the most popular file extensions."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Enable/Disable rule",
                                    intro: "Click checkbox to disable rule, click again to enable it."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Actions with rule",
                                    intro: "Buttons for actions with rules. You can edit any rule or delete it permanently."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Users rules",
                                    intro: "You can add your custom rule."
                                }
                            }
                        },
                        Help: {
                            title: "Help",
                            steps: {
                                help_faq: {
                                    title: "FAQ",
                                    intro: "FAQ page with answers to most popular and common questions."
                                },
                                help_recommendations: {
                                    title: "Have recommendations?",
                                    intro: "With this form, you can drop us a line with your ideas and proposals."
                                },
                                help_bugs: {
                                    title: "Report the bug",
                                    intro: "Let us know if there are any problems with the ODM extension."
                                },
                                help_updates: {
                                    title: "News and updates",
                                    intro: "We post detailed information about the most important updates in our blog."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "Пакетний завантажувач посилань",
                    step1: "1. Завантажте файл із посиланнями",
                    step1Description: "Клацніть або перетягніть файл у цю область, щоб завантажити список посилань",
                    step1SupportedFiles: "Підтримувані формати списку: .csv, .json, .xls, .xlsx, .txt, з переносом рядка",
                    step2: "2. або введіть посилання вручну",
                    step3: "3. Результат перевірки",
                    checkBtn: "Перевірте посилання",
                    downloadBtn: "Завантажити",
                    allLinks: "Всі",
                    okLinks: "Робочі",
                    errorLinks: "Неробочі",
                    linksListDeleteErrors: "Видалити посилання з помилками",
                    linksListDeleteDuplicated: "Видалити повторювані посилання"
                }
            }
        }), {
            ru: {
                content: {
                    download_all: "Скачать все",
                    download_selected: "Скачать выбранное"
                },
                popup: {
                    toolsBar_filter_finished: "Загруженные",
                    toolsBar_filter_deleted: "Удаленные",
                    toolsBar_filter_canceled: "Отмененные",
                    toolsBar_filter_error: "С ошибками",
                    toolsBar_filter_paused: "Приостановленные",
                    toolsBar_filter_in_progress: "Активные",
                    toolsBar_search_placeholder: "Поиск",
                    toolsBar_downloader_placeholder: "Скачать по URL",
                    toolsBar_downloader_error: "Неверная ссылка",
                    clearList_modal_text: "Вы хотите очистить список загрузок?",
                    clearList_modal_btn_yes: "Да",
                    clearList_modal_btn_yes_all: "Да, все",
                    clearList_modal_btn_yes_selected: "Очистить выбранные",
                    clearList_modal_clear_paused: "Очистить загрузки на паузе",
                    clearList_modal_clear_progressed: "Очистить активные загрузки",
                    clearList_modal_btn_no: "Нет",
                    sidebar_item_manager: "Менеджер",
                    sidebar_item_images: "Изображения",
                    sidebar_item_audio: "Музыка",
                    sidebar_item_video: "Видео",
                    sidebar_item_document: "Документ",
                    fileStatus_error: "Ошибка",
                    fileStatus_canceled: "Отменен",
                    fileStatus_deleted: "Файл удален",
                    fileStatus_paused: "Пауза",
                    fileIconsText_openInFolder: "Показать в папке",
                    fileIconsText_openFile: "Открыть файл",
                    fileActionsMenu_copyLink: "Скопировать ссылку файла",
                    fileActionsMenu_continue: "Продолжить",
                    fileActionsMenu_cancel: "Отменить",
                    fileActionsMenu_pause: "Пауза",
                    fileActionsMenu_retry: "Перезапустить",
                    fileActionsMenu_deleteFromList: "Удалить из списка",
                    fileActionsMenu_deleteFromPC: "Удалить с ПК",
                    noSearchResult_msg: "Нет результатов",
                    removing_msg: "Удаление...",
                    noDownloads_msg: "Нет загрузок",
                    noConnection_msg: "Соединение потеряно",
                    notificationStart: "Загрузка началась",
                    notificationComplete: "Загрузка завершилась",
                    notificationInterrupted: "Загрузка прервась",
                    notificationProgressState: "Скачивается",
                    notificationCompleteState: "Скачано",
                    notificationInterruptedState: "Было прервано",
                    notificationButtonOneText: "Открыть файл",
                    notificationButtonTwoText: "Показать в папке",
                    imageSnifferTitle: "Загрузчик изображений",
                    imageSnifferDescription: "Включить загрузчик изображений на текущей странице.",
                    imageSnifferButtonOn: "Вкл.",
                    imageSnifferButtonOff: "Выкл.",
                    removeAllSniffers: "Выключить загрузчик на всех вкладках - ",
                    imageSniffersWasDeactivated: "Загрузчик изображений выключен на всех вкладках.",
                    videoActionCopyLink: "Скопировать ссылку на видео",
                    videoSnifferTitle: "Для загрузки нужного видео вам необходимо:",
                    videoInfoStep1: "1. Перейдите на веб-страницу с видео, которое вы хотите скачать.",
                    videoInfoStep2: "2. Откройте окно менеджера загрузок на странице с видео.",
                    videoInfoStep3: "3. Выберите и скачайте нужный видеофайл из списка на этой вкладке.",
                    notificationNoDownloadableVideos: "Доступные для скачивания Видео не найдены.",
                    notificationNoDownloadableAudios: "Доступные для скачивания Аудио не найдены.",
                    audioActionDownload: "Скачать",
                    audioActionCopyLink: "Копировать ссылку",
                    audioActionCopyLinkCopied: "Cкопированно",
                    audioActionOpenInTab: "Открыть в новой вкладке",
                    uploadToCloud: "Загрузить в Cloud",
                    uploadedToCloud: "Уже Загружен",
                    NoContentTitle: "Уупсс!",
                    NoContentString: "ODM не нашел здесь никаких файлов.",
                    NoContentString2: "Вначале попробуйте",
                    NoContentRefreshBtn: "Обновить страницу",
                    NoContentRefreshBtnReloading: "Пожалуйста, подождите...",
                    NoContentString3: "Не помогло?",
                    NoContentString3_1_1: "Воспроизведите",
                    NoContentString3_1_2: "видео/аудио на странице",
                    NoContentString3_1_3: "Или отправьте запрос что бы",
                    NoContentString3_1_3doc: "Отправьте нам запрос",
                    NoContentLine1: "Похоже, ODM не нашел загружаемый контент на этой странице.",
                    NoContentLine2: "Нажмите кнопку ниже, если на сайте есть подходящий для загрузки контент.",
                    NoContentBtn: "Добавить этот сайт в ODM!",
                    NoContentUnAuthorizedUser: "Пожалуйста, авторизуйтесь, чтобы отправить запрос.",
                    NoContentAuthorizationLink: "Войти",
                    ticketWasSent: "Запрос отправлен!",
                    ticketAlreadyExist: "Запрос уже создан",
                    UpgradeTitle_1: "Подписка",
                    UpgradeTitle_2: "не обнаружена!",
                    UpgradeLine1: 'Получите бесплатную 7-дневную пробную версию или подписку "Ultra"',
                    UpgradeBtn: "Купить сейчас",
                    DomainDisabledTitle: "Загрузчик Выключен!",
                    DomainDisabledLine1: "Включите Загрузчик на странице опций, для использования на этом сайте.",
                    DomainDisabledBtn: "Перейти на страницу опций",
                    cloud_authorization_error: "Пожалуйста, войдите в Сloud",
                    clearList_modal_btn_only_finished: "Только завершённые",
                    generateQR: "Сгенерировать QR код",
                    optionBannerString_1: "Проверьте полный перечень",
                    optionBannerString_2: "опций и возможностей!",
                    optionBannerBtn: "Настройки",
                    upgradeBannerString_1: "Больше возможностей с Ultra",
                    upgradeBannerString_2: "цены начинаются с ",
                    upgradeBannerString_3: "/в месяц",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "Откройте все функции",
                    upgradeBannerPlayBtnString_2: "С",
                    upgradeBannerPlayBtnString_3: "и",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "Категория и расширение файла.",
                            intro: "Выберите категорию файлов для поиска и загрузки с посещаемых вами веб-сайтов. <br>\nВы также можете редактировать расширения файлов, удалять неиспользуемые или добавлять собственные. "
                        },
                        cd_intro_step2: {
                            title: "Меню",
                            intro: "Скрыть и показать меню."
                        },
                        cd_intro_step3: {
                            title: "Найденный контент",
                            intro: "Найденный контент будет отображен в этой области "
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "Выберите категорию",
                        fileExtensionTitle: "Выберите расширение файла"
                    }
                },
                notifications: {
                    option_menu: "Уведомления",
                    visual_notifications: {
                        enable_visual_notification: "Включить визуальные уведомления",
                        list: [{
                            notification_text: "Уведомление начала загрузки"
                        }, {
                            notification_text: "Уведомление окончания загрузки"
                        }, {
                            notification_text: "Уведомление об ошибке"
                        }],
                        notification_time: "Время отображения уведомления",
                        file_size_notification: "Минимальный размер файла для отображения уведомлений",
                        size: [{
                            notification_text: "Неограниченный"
                        }, {
                            notification_text: "КБ от"
                        }, {
                            notification_text: "МБ от"
                        }, {
                            notification_text: "ГБ от"
                        }],
                        time: "с"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "Включить звуковые уведомления",
                        list: [{
                            notification_text: "Уведомление начала загрузки"
                        }, {
                            notification_text: "Уведомление окончания загрузки"
                        }, {
                            notification_text: "Уведомление об ошибке"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "Вход",
                    sign_up_text: "Регистрация",
                    profile_btn: "Профиль",
                    log_out_btn: "Выход",
                    email_field_placeholder: "E-mail",
                    pass_field_placeholder: "Пароль",
                    remind_password_link: "Забыли пароль?",
                    invalid_email: "Проверьте праильность E-mail",
                    invalid_dataset: "Пожалуйста, проверьте правильность данных",
                    email_already_in_use: "Такой e-mail уже используется ",
                    email_not_found: "Пользователь с таким e-mail не найден",
                    email_not_verified: "Этот E-mail не подтвержден",
                    incorrect_password: "Неправильный пароль",
                    network_error: "Ошибка сети. Пожалуйста, повторите попытку позже",
                    registration_success_msg: "Отлично!\nМы отправили вам электронное письмо для активации. Проверьте свою электронную почту и нажмите на ссылку, чтобы проверить это!",
                    subscription_badge_text: "Ваша подписка:",
                    update_link_text: "Нажмите для обновления информации профиля.",
                    learn_more_link_text: "Подробнее",
                    user_data_updated: "Инофрмация вашего профиля успешно обновлена",
                    user_logged_out: "Вы успешно вышли",
                    device_limit_exceeded: "Лимит устройства исчерпан! Вы вошли в систему более чем на 3 устройствах.\nПожалуйста, используйте кнопку «Выход из сеансов» на странице профиля и повторно авторизуйтесь."
                },
                sniffer: {
                    option_menu: "Загрузчики контента",
                    video_sniffer_lablel: "Видео Загрузчик",
                    audio_sniffer_lablel: "Аудио Загрузчик",
                    image_sniffer_lablel: "Загрузчик Изображений",
                    doc_sniffer_lablel: "Загрузчик Документов",
                    add_domain_invalid_url: "Неверная ссылка!",
                    add_domain_url_exist: "Домен уже существует!",
                    options_values: {
                        all: "Вкл. везде",
                        none: "Выкл. везде",
                        blacklist: "Черный список",
                        whitelist: "Белый список"
                    },
                    legend_1_title: "Вкл. везде",
                    legend_1_descr: "Эта опция ВКЛЮЧАЕТ выбранные загрузчики для всех посещаемых вами страниц.",
                    legend_1_extra_descr: "Имейте ввиду, что загрузчики - это мощные парсеры контента, которые могут влиять на скорость загрузки страниц, производительность вашего браузера и ПК в целом.",
                    legend_2_title: "Выкл. везде",
                    legend_2_descr: "Эта опция ОТКЛЮЧАЕТ выбранный загрузчик для всех посещаемых вами страниц.",
                    legend_3_title: "Черный список",
                    legend_3_descr: "С этой опцией загрузчики не работают на сайтах из списка.",
                    legend_4_title: "Белый список",
                    legend_4_descr: "С этой опцией загрузчики работают ТОЛЬКО на сайтах из списка."
                },
                general: {
                    option_menu: "Общие",
                    ebable_default_download_bar: "Включить стандартную панель загрузок браузера:",
                    enable_icon_indicator: "Включить индикатор контента на иконке расширения",
                    enable_context_menu: 'Включить "Загрузить с ODM" для меню правой кнопкой мыши',
                    enable_autoclean_downloads: "Включить автоматическую очистку списка загрузок от загрузок с ошибками",
                    autoclean_description: "(Выберите лимит (10,50,100 записей), когда список должен быть очищен)"
                },
                app_appearance: {
                    option_menu: "Внешний вид",
                    application_theme: "Тема",
                    dark_theme: "Темная",
                    light_theme: "Светлая",
                    application_language: "Язык приложения",
                    default_download_bar: "Скрыть стандартную панель загрузки Chrome",
                    enable_dark_icon: "Значок панели инструментов"
                },
                cloud_sync: {
                    option_menu: "Синхронизация с Cloud",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "Имя аккаунта",
                    heading_strong: "Cloud синхронизация - ",
                    heading_string: "это функция, которая позволяет загружать файлы в ваши хранилища Dropbox или Google Drive. Для использования этой функции просто войдите в ваше хранилище с помощью кнопки ниже.",
                    cloud_login: "Вход",
                    cloud_logout: "Выход",
                    popup_cloud_status_title: "Статус:",
                    pricing_link_text: "Оформить PRO подписку"
                },
                save_folder: {
                    option_menu: "Система сортировки",
                    file_routing_title: "Включить систему сортировки загрузок",
                    file_routing_description: "Система сортировки(распределения) автоматически распределяет загружаемые файлы по соответствующим под-папкам в папке Загрузки. Ниже список расширений файлов и директории в которые они будут помещены после загрузки.",
                    option_addrule_btn: "Добавить каталог"
                },
                help: {
                    helpTitle: "Online Download Manager помощь",
                    faqTitle: "Часто задаваемые вопросы",
                    faqContent: "Не понятно как использовать Online Download Manager?",
                    faqContent2: "Мы сделали подробную",
                    faqContentEnding: "для вас.",
                    recommendTitle: "Рекомендации",
                    recommendContent: "Есть идеи как сделать ODM лучше?",
                    recommendContent2: "Воспользуйтесь",
                    recommendContentEnding: "формой, что бы рассказать нам идею.",
                    bugsTitle: "Ошибки",
                    bugsContent: "Нашли ошибку? Пришлите нам",
                    bugsContentEnding: "или разместите её на",
                    updatesTitle: "Обновления",
                    updatesContent: "Следите за нашими",
                    updatesContentEnding: "и будьте в курсе новостей ODM. ",
                    option_menu: "Помощь",
                    faq: "Здесь мы постараемся ответить на все Часто задаваемые вопросы",
                    issue: "Если у вас есть пожелания, рекомендации о продукте, пожалуйста, сообщите нам на почту: support@download-manager.online"
                },
                about: {
                    option_menu: "О проекте",
                    description: ["Кто мы? - мы - амбициозная команда дизайнеров и разработчиков, объединенных одной идеей.", "Наша главная цель - сделать повседневные вещи более удобными и поделиться этими решениями со всем Миром.", "Однажды мы заметили, что самый популярный браузер в мире имеет проблемы с интерфейсом во время процесса загрузки. Поэтому мы захотели решить эту проблему и разработали действительно один из лучших Менеджеров Загрузок.", "Мы собрали многолетний опыт веб-дизайна и разработки программного обеспечения для создания наиболее подходящего и совершенного решения. Также мы проанализировали большинство подобных решений, чтобы выяснить их сильные и слабые стороны.", "В результате долгой и сложной работы появился Менеджер Загрузок, в котором сконцентрированно все самое лучшее, что может быть в современном загрузчике.", "На сегодняшний день наша работа была оценена более чем 350,000 пользователей со всего мира - и этот факт заставляет нас понять, что наш путь правильный! Все наши усилия достигают цели, наша работа нравится пользователям, и это дает нам все больше силы двигаться дальше, улучшать Менеджер Загрузок и делать Мир чуточку лучше.", "Надеемся, что вы так же оцените наш продукт.", "В свою очередь мы обещаем прислушиваться к вашим потребностям и реализовывать их в следующих версих Менеджера Загрузок, чтобы сделать его действительно лучшим загрузчиком в мире.", "С уважением, команда Online Download Manager."],
                    rate_us: "Оцените ODM! ",
                    donate: "Поддержать проект! "
                },
                save_settings: "Настройки сохранены",
                table: {
                    fileType: "Типы файлов",
                    directory: "Директория",
                    file_extension: "Типы файлов",
                    rule_actions: "Действия",
                    extensions: ["Картинки", "Музыка", "Видео", "Программы", "Документы", "Книги", "Архивы", "Образы", "Система", "Шрифты", "Торрент", "Другое"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Выберите язык",
                    wlcModalTitle: "Привет!",
                    wlcModalSubTitle: "Спасибо что выбрали ODM и Добро Пожаловать!",
                    wlcString_1: "Мы подготовили быструю и понятную инструкцию по основным свойствам расширения. ",
                    wlcString_1_2: "Учтите, что некоторые функции (например видео, аудио загрузчики на некоторых сайтах) станут доступны только для зарегистрированных пользователей, после покупки подписки.",
                    wlcString_2: "Мы сделали быструю инструкция, это ускорит время на знакомство с интерфейсом.",
                    wlcString_3: "Начните тур используя клавиши управления",
                    wlcString_4: "шаг за шагом изучайте вашего нового помощника.",
                    startTourBtn: "Начать Тур",
                    skipTourBtn: "Пропустить"
                },
                tutorial_finish_modal: {
                    tfmTitle: "Это все для начала!",
                    tfmString_1: "Сейчас мы быстро прошли по основным опциям и вы можете раскрыть потенциал ODM полностью.",
                    tfmString_2: "Вы всегда можете воспользоваться подробной инструкцией по каждой функции ODM через иконку Центра Помощи в правом нижнем углу.",
                    tfmString_3: "получить все функции и подписаться на обновления и новости.",
                    tfmButton: "Закрыть"
                },
                sidebar_footer: {
                    Share: "Расскажите про ODM",
                    RateUs: "Оценить ODM",
                    raitingThanksText: "Спасибо!"
                },
                tutorial: {
                    heading: "Центр Помощи",
                    contents: "Содержание:",
                    quickStart: "Быстрый старт",
                    categories: {
                        introduction: {
                            title: "Вступление",
                            steps: {
                                profile: {
                                    title: "Профиль пользователя",
                                    intro: "Информация о вашей учетной записи: аватар, адрес электронной почты, подписка и т.д. <br> Вы можете изменить аватар и свою информацию <a href = 'https: //download-manager.online/profile'target ='_blank '>в профиле. </a>"
                                },
                                app_appearance: {
                                    title: "Внешний вид",
                                    intro: "Настройки внешнего вида расширения и языка"
                                },
                                notifications: {
                                    title: "Уведомления",
                                    intro: "Управление визуальными и звуковыми уведомлениями.<br>Настройте громкость и продолжительность отображения на экране."
                                },
                                content_downloaders: {
                                    title: "Загрузчики контента",
                                    intro: 'Загрузчики контента- модули которые находят медиа файлы на сайтах и позволяют скачать их.<br>Вы можете настроить списки "заблокированных" и "разрешенных" доменов для загрузчиков.'
                                },
                                cloud_sync: {
                                    title: "Синхронизация с Cloud",
                                    intro: " Синхронизация с Cloud - позволит вам добавить ваш аккаунт на облачном хранилище в ODM для передачи файла напрямую из расширения в сервис."
                                },
                                sorting_system: {
                                    title: "Система сортировки",
                                    intro: "Распределение загруженных файлов в подкаталогах в папке «Загрузки» в зависимости от расширения файла."
                                },
                                help: {
                                    title: "Помощь",
                                    intro: "Здесь вы можете рассказать нам об ошибках, связаться со службой поддержки или перейти на страницу часто задаваемых вопросов."
                                },
                                share: {
                                    title: "Рассказать про ODM друзьям",
                                    intro: "Рассказать миру про расширение ODM."
                                },
                                rate: {
                                    title: "Оценить ODM",
                                    intro: "Оцените расширение ODM. <br> Каждый пятизвездочный отзыв дает нам знать, что мы движемся в правильном направлении."
                                }
                            }
                        },
                        app_appearance: {
                            title: "Внешний вид",
                            steps: {
                                theme: {
                                    title: "Тема всплывающего окна",
                                    intro: "Выберите темную или светлую тему для всплывающего окна."
                                },
                                language: {
                                    title: "Язык в расширении",
                                    intro: "Язык в расширении.<br> Английский установлен по умолчанию."
                                },
                                defaultChromesBar: {
                                    title: "Стандартная панель загрузок в браузере",
                                    intro: "Включите / выключите стандартную панель загрузки браузера, которая отображает все текущие или завершенные загрузки."
                                },
                                contentIndicator: {
                                    title: "Индикатор контента в иконке",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>Красный индикатор на значке расширения указывает, что контент, доступный для загрузки, был найден на странице."
                                },
                                darkIcon: {
                                    title: "Ярлык расширения",
                                    intro: "Переключите значок расширения на цветной или темный."
                                }
                            }
                        },
                        notifications: {
                            title: "Уведомления",
                            steps: {
                                visual_notifications: {
                                    title: "Визуальные уведомления",
                                    intro: "Вкл/Выкл визуальных уведомлений о процессе загрузки."
                                },
                                visualNotificationsDetails: {
                                    title: "Настройки визуальных уведомлений",
                                    intro: "Укажите, какие визуальные уведомления вы хотите видеть: начало загрузки, конец загрузки, ошибка загрузки. <br> Кроме того, вы можете выбрать в секундах, как долго эти уведомления будут появляться на экране.<br> &#8734; - означает, что уведомление будет оставаться на экране, пока вы не нажмете на него."
                                },
                                filesizeToRunNotifications: {
                                    title: "Задать размер файла с которого начнут показываться уведомления.",
                                    intro: "Вы можете выбрать минимальный размер загружаемого файла для отображения уведомлений."
                                },
                                sound_notifications: {
                                    title: "Звуковые уведомления",
                                    intro: "Вкл / Выкл звуковые уведомления о процессе загрузки."
                                },
                                soundNotificationsDetails: {
                                    title: "Настройки звуковых уведомлений",
                                    intro: "Настройте звуковые уведомления, которые вы хотите услышать: начало загрузки, конец загрузки, ошибка загрузки. <br> Также вы можете выбрать громкость уведомлений."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Загрузчики контента",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Управление загрузчиками контента",
                                    intro: "Здесь вы можете настроить доменные имена, где загрузка контента будет работать или нет. <br> По умолчанию - все загрузчики работают на всех страницах, которые вы посещаете."
                                },
                                downloadersLegend: {
                                    title: "Возможные настройки",
                                    intro: "Есть 4 варианта работы с загрузчиками контента. <br> Проверьте список и выберите наиболее подходящий для вас."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Выберите необходимую опцию",
                                    intro: "Выберите нужный вариант из выпадающего меню. <br> Если вы включите черный / белый списки - вам нужно добавить нужный домен в таблицу."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Синхронизация с Cloud",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Синхронизация с Cloud",
                                    intro: "Здесь вы можете авторизовать ODM в своих облачных хранилищах. <br> Это позволит вам загружать контент, найденный на страницах, прямо в ваше хранилище из всплывающего интерфейса расширений. <br> <br> <strong> Эта опция доступна с подпиской PRO и выше. </ strong>"
                                },
                                cloudSelect: {
                                    title: "Выбор хранилища",
                                    intro: "Выберите необходимое хранилище, нажав на его логотип. Затем нажмите кнопку «Войти» и войдите, используя свой логин / пароль. <br> <br> <strong> Имейте в виду - мы используем официальный API из облачных хранилищ - ваши личные данные в полной безопасности. </strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "Система сортировки",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "Система сортировки",
                                    intro: "Включить/ Отключить систему сортировки.<br><br> <strong> Отключено по умолчанию. </strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Список правил сортировки",
                                    intro: "Список заранее установленных правил с наиболее популярными расширениями файлов."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Включить/ Выключить правило",
                                    intro: "Установите флажок, чтобы отключить правило, нажмите еще раз, чтобы включить его."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Действия с правилами",
                                    intro: "Кнопки для действий с правилами. Вы можете редактировать любое правило или удалить его навсегда."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Пользовательские правила",
                                    intro: "Вы можете добавить свое собственное правило."
                                }
                            }
                        },
                        Help: {
                            title: "Помощь",
                            steps: {
                                help_faq: {
                                    title: "FAQ",
                                    intro: "FAQ страница с ответами на популярные и часто задаваемые вопросы."
                                },
                                help_recommendations: {
                                    title: "Есть рекомендации?",
                                    intro: "С помощью этой формы вы можете написать нам свои идеи и предложения."
                                },
                                help_bugs: {
                                    title: "Написать об ошибке",
                                    intro: "Дайте нам знать, если есть какие-либо проблемы с расширением ODM."
                                },
                                help_updates: {
                                    title: "Новости и обновления",
                                    intro: "Мы публикуем подробную информацию о самых важных обновлениях в нашем блоге."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "Пакетный загрузчик ссылок",
                    step1: "1. Загрузите файл со ссылками",
                    step1Description: "Щелкните или перетащите файл в эту область, чтобы загрузить список ссылок.",
                    step1SupportedFiles: "Поддерживаемые форматы списков: .csv, .json, .xls, .xlsx, .txt, с переносом строки",
                    step2: "2. или введите ссылки вручную",
                    step3: "3. Результат проверки ссылок",
                    checkBtn: "Проверить ссылки",
                    downloadBtn: "Скачать",
                    allLinks: "Все",
                    okLinks: "Рабочие",
                    errorLinks: "Нерабочие",
                    linksListDeleteErrors: "Удалить все нерабочие ссылки",
                    linksListDeleteDuplicated: "Удалить повторяющиеся ссылки"
                }
            }
        }), {
            zh: {
                content: {
                    download_all: "下载全部",
                    download_selected: "下载所选"
                },
                popup: {
                    toolsBar_filter_finished: "已完成",
                    toolsBar_filter_deleted: "删除文件",
                    toolsBar_filter_canceled: "被取消下载的文件",
                    toolsBar_filter_error: "错误",
                    toolsBar_filter_paused: "暂停文件",
                    toolsBar_filter_in_progress: "正在下载的文件",
                    toolsBar_search_placeholder: "搜索",
                    toolsBar_downloader_placeholder: "通过网址获取",
                    toolsBar_downloader_error: "无效的网址",
                    clearList_modal_text: "您确定要清空此列表？",
                    clearList_modal_btn_yes: "是",
                    clearList_modal_btn_yes_all: "是全部",
                    clearList_modal_btn_yes_selected: "清除选择",
                    clearList_modal_clear_paused: "清除暂停的项目",
                    clearList_modal_clear_progressed: "清除进度项",
                    clearList_modal_btn_no: "否",
                    sidebar_item_manager: "管理",
                    sidebar_item_images: "图像",
                    sidebar_item_audio: "音频",
                    sidebar_item_video: "视频",
                    sidebar_item_document: "文献",
                    fileStatus_error: "错误",
                    fileStatus_canceled: "被取消文件",
                    fileStatus_deleted: "文件已被删除",
                    fileStatus_paused: "暂停",
                    fileIconsText_openInFolder: "在文件夹中显示",
                    fileIconsText_openFile: "打开文件",
                    fileActionsMenu_copyLink: "复制文件源",
                    fileActionsMenu_continue: "继续",
                    fileActionsMenu_cancel: "取消",
                    fileActionsMenu_pause: "暂停",
                    fileActionsMenu_retry: "重试",
                    fileActionsMenu_deleteFromList: "从列表中删除",
                    fileActionsMenu_deleteFromPC: "从电脑删除",
                    noSearchResult_msg: "没有符合的结果",
                    removing_msg: "正在移除...",
                    noDownloads_msg: "没有下载项目",
                    noConnection_msg: "连接中断",
                    notificationStart: "下载开始",
                    notificationComplete: "下载完成",
                    notificationInterrupted: "下载被中断",
                    notificationProgressState: "下载中",
                    notificationCompleteState: "下载完成",
                    notificationInterruptedState: "被中断",
                    notificationButtonOneText: "打开文件",
                    notificationButtonTwoText: "在文件夹中显示",
                    imageSnifferTitle: "图片下载器",
                    imageSnifferDescription: "在当前页面上启用图像下载器。",
                    imageSnifferButtonOn: "开",
                    imageSnifferButtonOff: "关",
                    removeAllSniffers: "删除所有下载程序",
                    imageSniffersWasDeactivated: "所有选项卡的图像下载器均已停用。",
                    videoActionCopyLink: "复制视频链接",
                    videoSnifferTitle: "要下载所需的视频，您需要:",
                    videoInfoStep1: "1、打开包含您要下载视频的网页。",
                    videoInfoStep2: "2、打开视频网页上的应用悬浮窗。",
                    videoInfoStep3: "3、从列表中选择您所要下载的视频。",
                    notificationNoDownloadableVideos: "此网页中没有适合的视频文件可以下载。",
                    notificationNoDownloadableAudios: "此网页中没有适合的音频文件可以下载。",
                    audioActionDownload: "下载",
                    audioActionCopyLink: "复制音频连接",
                    audioActionCopyLinkCopied: "复制的",
                    audioActionOpenInTab: "在新标签页中打开",
                    uploadToCloud: "上载到云端",
                    uploadedToCloud: "已上传",
                    NoContentTitle: "哎呀！",
                    NoContentString: "ODM在这里没有找到任何文件。",
                    NoContentString2: "首先尝试",
                    NoContentRefreshBtn: "刷新页面",
                    NoContentRefreshBtnReloading: "请稍候...",
                    NoContentString3: "帮不上忙",
                    NoContentString3_1_1: "玩",
                    NoContentString3_1_2: "页面上的视频/音频.",
                    NoContentString3_1_3: "或发送给我们请求",
                    NoContentString3_1_3doc: "向我們發送請求",
                    NoContentLine1: "好像ODM在此页面上找不到任何可下载的内容",
                    NoContentLine2: "如果该站点包含适合下载的内容，请单击下面的按钮。",
                    NoContentBtn: "将此站点添加到ODM！",
                    NoContentUnAuthorizedUser: "请授权发送请求以涵盖此资源",
                    NoContentAuthorizationLink: "现在登录！",
                    ticketWasSent: "票已发送！",
                    ticketAlreadyExist: "票已存在",
                    UpgradeTitle_1: "订阅",
                    UpgradeTitle_2: "没有检测到！",
                    UpgradeLine1: "獲得7天試用或“超”訂閱",
                    UpgradeBtn: "现在购买",
                    DomainDisabledTitle: "嗅探器已禁用！",
                    DomainDisabledLine1: "如果要在此站点上使用嗅探器，请检查选项页。",
                    DomainDisabledBtn: "转到选项页面",
                    cloud_authorization_error: "请登录云服务",
                    clearList_modal_btn_only_finished: "仅显完成",
                    generateQR: "生成QR码",
                    optionBannerString_1: "查看完整列表",
                    optionBannerString_2: "的选项和功能！",
                    optionBannerBtn: "选项",
                    upgradeBannerString_1: "更多功能购买Ultra",
                    upgradeBannerString_2: "价格从",
                    upgradeBannerString_3: "/月",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "發現所有功能",
                    upgradeBannerPlayBtnString_2: "一起",
                    upgradeBannerPlayBtnString_3: "&",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "文件的類別和擴展名。",
                            intro: "選擇文件類別以搜索並從您訪問的網站下載。<br> 您還可以編輯文件擴展名，刪除未使用的擴展名或添加自己的擴展名。 "
                        },
                        cd_intro_step2: {
                            title: "菜單",
                            intro: "隱藏並顯示菜單。"
                        },
                        cd_intro_step3: {
                            title: "找到的內容",
                            intro: "找到的內容將在此區域列出。"
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "選擇一個類別",
                        fileExtensionTitle: "選擇文件擴展名"
                    }
                },
                notifications: {
                    option_menu: "通知",
                    visual_notifications: {
                        enable_visual_notification: "开启图像通知",
                        list: [{
                            notification_text: "开始下载通知"
                        }, {
                            notification_text: "下载完成通知"
                        }, {
                            notification_text: "下载错误通知"
                        }],
                        notification_time: "通知显示时间",
                        file_size_notification: "最小文件大小以显示通知",
                        size: [{
                            notification_text: "无限"
                        }, {
                            notification_text: "KB以上"
                        }, {
                            notification_text: "MB以上"
                        }, {
                            notification_text: "GB以上"
                        }],
                        time: "秒"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "开启声音通知",
                        list: [{
                            notification_text: "开始下载通知"
                        }, {
                            notification_text: "下载完成通知"
                        }, {
                            notification_text: "下载错误通知"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "登入",
                    sign_up_text: "注册",
                    profile_btn: "个人资料",
                    log_out_btn: "登出",
                    email_field_placeholder: "电子邮件",
                    pass_field_placeholder: "密码",
                    remind_password_link: "忘记密码？",
                    invalid_email: "请检查是否正确输入了电子邮件",
                    invalid_dataset: "请检查输入的数据",
                    email_already_in_use: "电子邮件已在使用中",
                    email_not_found: "找不到该电子邮件的用户",
                    email_not_verified: "该电子邮件未验证",
                    incorrect_password: "密码错误",
                    network_error: "网络错误。 请稍后再试",
                    registration_success_msg: "太好了！ 我们向您发送了一封激活电子邮件。 检查您的电子邮件，然后单击链接进行验证！",
                    subscription_badge_text: "有效订阅：",
                    update_link_text: "单击以更新您的数据。",
                    learn_more_link_text: "学到更多",
                    user_data_updated: "您的数据已成功更新",
                    user_logged_out: "您已成功注销",
                    device_limit_exceeded: "設備極限用盡！ 您登錄的次數超過了3台設備。\n請使用“個人資料”頁面上的“註銷會話”按鈕，然後重新登錄。"
                },
                sniffer: {
                    option_menu: "内容嗅探器",
                    video_sniffer_lablel: "视频嗅探器",
                    audio_sniffer_lablel: "音频嗅探器",
                    image_sniffer_lablel: "图像嗅探器",
                    doc_sniffer_lablel: "文档下载器",
                    add_domain_invalid_url: "无效的网址！",
                    add_domain_url_exist: "域已经存在！",
                    options_values: {
                        all: "随处启用",
                        none: "随处禁用",
                        blacklist: "封锁清单",
                        whitelist: "允许清单"
                    },
                    legend_1_title: "随处启用",
                    legend_1_descr: "此选项包括您访问的所有页面的选定嗅探器。",
                    legend_1_extra_descr: "请记住，嗅探器是功能强大的内容解析器，通常会影响页面加载速度，浏览器和PC的性能。",
                    legend_2_title: "随处禁用",
                    legend_2_descr: "此选项为您访问的所有页面禁用选定的嗅探器。",
                    legend_3_title: "阻止的网址列表",
                    legend_3_descr: "使用此选项，嗅探器在列表中的站点上不起作用。",
                    legend_4_title: "允许的网址列表",
                    legend_4_descr: "使用此选项，嗅探器仅在列表中的站点上起作用。"
                },
                general: {
                    option_menu: "一般",
                    ebable_default_download_bar: "啟用默認瀏覽器的下載欄",
                    enable_icon_indicator: "啟用內容指示器圖標",
                    enable_context_menu: "為右鍵菜單啟用“使用ODM下載”",
                    enable_autoclean_downloads: "啟用自動清除錯誤下載中的下載列表",
                    autoclean_description: "（選擇應清除列表的限制（10,50,100條記錄））"
                },
                app_appearance: {
                    option_menu: "应用外观",
                    application_theme: "主题色调",
                    dark_theme: "深色",
                    light_theme: "浅色",
                    application_language: "应用语言",
                    default_download_bar: "隐藏Chrome默认下载栏",
                    enable_dark_icon: "工具欄圖標"
                },
                cloud_sync: {
                    option_menu: "云同步",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "用户名",
                    heading_strong: "云同步- ",
                    heading_string: "这项功能可让您将嗅探到的文件上传到Dropbox或Google云端硬盘存储中。 要使用它，您需要使用云存储API进行授权，只需单击按钮，一切都很容易。",
                    cloud_login: "登录",
                    cloud_logout: "登出",
                    popup_cloud_status_title: "状态：",
                    pricing_link_text: "获取“ PRO”订阅"
                },
                save_folder: {
                    option_menu: "文件归类系统",
                    file_routing_title: "开启下载文件路由系统",
                    file_routing_description: "排序系统自动将文件分发到“下载”文件夹中的相应子文件夹。 下面是文件扩展名以及下载后将在其中放置目录的列表。",
                    option_addrule_btn: "添加目录"
                },
                help: {
                    helpTitle: "Online Download Manager 协助",
                    faqTitle: "FAQ",
                    faqContent: "有一个问题如何使用 Online Download Manager?",
                    faqContent2: "我们做了一个详细的",
                    faqContentEnding: "给你的",
                    recommendTitle: "建议",
                    recommendContent: "对如何使ODM更好的想法？",
                    recommendContent2: "用",
                    recommendContentEnding: "形式与我们分享想法。",
                    bugsTitle: "Bugs",
                    bugsContent: "发现错误？ 给我们一个",
                    bugsContentEnding: "或张贴在",
                    updatesTitle: "更新",
                    updatesContent: "按照我们的",
                    updatesContentEnding: "敬请关注ODM的新闻。",
                    option_menu: "帮助",
                    faq: "在此我们尝试回答所有常见问题",
                    issue: "I如果您对应用程序功能有任何问题、建议或意见，请通过此链接联系我们。"
                },
                about: {
                    option_menu: "关于项目",
                    description: ["关于我们：我们的团队有设计师和编程员组成，并以共同想法团结一致雄心勃勃。", "我们的主要目标是让日常生活更便利，并与世界分享相关的解决方案。", "有一天，我们注意到世界上最流行浏览器在下载过程中经常出现与用户界面有关的问题。因此，我们决定解决这个问题，并开发了这款最佳下载管理器之一的应用。", "我们在网页设计和软件开发方面积累了多年的经验，以创建即便利又完美的解决方案。此外，我们对大多数类似的应用进行了分析，并找出了它们的强弱之处。", "经过长久辛苦的工作，一个在线下载管理器诞生了，它汇集了现代下载器中所有最好的方面。", "到目前为止，我们的工作已经得到了来自世界各地的28多万用户的赞赏。这一事实让我们明白，我们选择的道路是正确的！我们所有的努力都达到了设定的目标，我们的工作受到了用户的喜爱，并为我们提供了更多的力量继续前进，改进我们的产品，让世界变得更美好。", "ODM团队敬上", "轮到我们，我们承诺会倾听您的需求，并将其集成到Online Download Manager中，使其真正成为世界上最佳的下载管理器。", "问候，ODM团队。"],
                    rate_us: "给我们5星评价",
                    donate: "Donate"
                },
                save_settings: "设置保存成功",
                table: {
                    fileType: "文件类型",
                    directory: "文件夹",
                    file_extension: "文件格式",
                    rule_actions: "行动",
                    extensions: ["图像", "音频", "视频", "程序", "文档", "电子书", "压缩文件", "系统文件", "字体文件", "种子文件", "其他", "其他"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Choose the language",
                    wlcModalTitle: "Hello!",
                    wlcModalSubTitle: "Thanks for choosing the ODM extension and welcome!",
                    wlcString_1: "We prepared a quick and clear guide through the extension`s features.",
                    wlcString_1_2: "Keep in mind that some of the functions (like video downloaders or audio downloaders from certain sites) available only with a paid subscription and only for registered users.",
                    wlcString_2: "To shorten the learning time, we made a quick guide through the interface.",
                    wlcString_3: "Start tour using controls",
                    wlcString_4: "step-by-step learn your new download helper.",
                    startTourBtn: "Start Tour",
                    skipTourBtn: "Skip"
                },
                tutorial_finish_modal: {
                    tfmTitle: "That’s all for start!",
                    tfmString_1: "This is was a short review of the main options so you can open the full potential of ODM extension.",
                    tfmString_2: "You can always get detailed instructions for each ODM function, using the Help Center, the icon in the bottom right corner.",
                    tfmString_3: "to get all features and stay tuned for updates and news.",
                    tfmButton: "Close"
                },
                sidebar_footer: {
                    Share: "Tell the world about ODM",
                    RateUs: "Rate ODM",
                    raitingThanksText: "Thank you!"
                },
                tutorial: {
                    heading: "Help Center",
                    contents: "Contents:",
                    quickStart: "Quick start",
                    categories: {
                        introduction: {
                            title: "Introduction",
                            steps: {
                                profile: {
                                    title: "Users profile",
                                    intro: "Your account information goes here: avatar, email, subscription plan, etc.<br> You can change avatar and information in your profile on the <a href='https://download-manager.online/profile' target='_blank'>web site.</a> "
                                },
                                app_appearance: {
                                    title: "App Appearance",
                                    intro: "Settings for the extension`s appearance and language selection."
                                },
                                notifications: {
                                    title: "Notifications",
                                    intro: "Manage sound and visual notifications.<br>Set the volume and duration of the display on the screen."
                                },
                                content_downloaders: {
                                    title: "Content downloaders",
                                    intro: "Content downloaders - modules that find media files on sites and lets you download them.<br>You can set-up a white or blacklist of domains for content downloaders."
                                },
                                cloud_sync: {
                                    title: "Cloud Sync",
                                    intro: "Cloud Sync options - lets you add your Cloud storage account into ODM for files transfer directly from extension to storage."
                                },
                                sorting_system: {
                                    title: "文件归类系统",
                                    intro: "Distribution of downloaded files to sub-directories in the 'Downloads' folder depending on the file extension."
                                },
                                help: {
                                    title: "Help",
                                    intro: "Here you can tell us about the bugs, contact support, or go to the FAQ page."
                                },
                                share: {
                                    title: "Share ODM with friends",
                                    intro: "Tell the World about ODM extension."
                                },
                                rate: {
                                    title: "Rate ODM",
                                    intro: "Rate the ODM extension.<br>Each 5 stars review, let us know that we are moving in the right direction."
                                }
                            }
                        },
                        app_appearance: {
                            title: "App Appearance",
                            steps: {
                                theme: {
                                    title: "Pop-up theme",
                                    intro: "Select a light or dark pop-up theme."
                                },
                                language: {
                                    title: "Extension`s Language",
                                    intro: "Application language.<br> English is enabled by default."
                                },
                                defaultChromesBar: {
                                    title: "Default browser`s download bar",
                                    intro: "Turn on/off the standard browser`s download bar, which displays all current or completed downloads."
                                },
                                contentIndicator: {
                                    title: "Content indicator on the icon",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>A red indicator on the extension icon indicates that content available for download has been found on the page."
                                },
                                darkIcon: {
                                    title: "Extension`s icon",
                                    intro: "Switch extension`s icon to colored or dark."
                                }
                            }
                        },
                        notifications: {
                            title: "Notifications",
                            steps: {
                                visual_notifications: {
                                    title: "Visual notifications",
                                    intro: "On/Off visual notifications about the download process."
                                },
                                visualNotificationsDetails: {
                                    title: "Visual notifications settings",
                                    intro: "Set-up which visual notifications you want to see: start of download, end of download, download error.<br> Also, you can choose in seconds how long these notifications will appear on the screen.<br> &#8734; - means that notification will stay on screen till you click it."
                                },
                                filesizeToRunNotifications: {
                                    title: "Settings of file size to run notifications.",
                                    intro: "You can select the minimum size of the downloadable file to show notifications."
                                },
                                sound_notifications: {
                                    title: "Sound notifications",
                                    intro: "On/Off sound notifications about the download process."
                                },
                                soundNotificationsDetails: {
                                    title: "Sound notifications settings",
                                    intro: "Set-up which sound notifications you want to hear: start of download, end of download, download error.<br> Also, you can choose the notifications volume."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Content downloaders",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Content downloaders control",
                                    intro: "Here you can tune domain names where content downloaders will work or not.<br> By default - all downloaders work on all pages you visit."
                                },
                                downloadersLegend: {
                                    title: "Possible options",
                                    intro: "There are 4 options for content downloaders work. <br> Check-out the list and select the most suitable for you."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Select the necessary option",
                                    intro: "Select the necessary option from the dropdown menu.<br> If you enable black/white lists - you need to add the necessary domain into the table."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Cloud Sync",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Cloud Sync",
                                    intro: "Here you can authorize ODM to your cloud storage(s).<br> It will let you upload content found on the pages directly to your storage from the extensions pop-up interface.<br><br><strong>This option available with PRO subscription and higher.</strong> "
                                },
                                cloudSelect: {
                                    title: "Storage select",
                                    intro: "Select the necessary storage clicking on its logo. Then click the 'Log in' button and log in using your Login/Password.<br><br><strong>Keep in mind - we use official API from cloud storages - your personal data in complete safety.</strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "文件归类系统",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "文件归类系统",
                                    intro: "Enable/Disable sorting system.<br><br> <strong>Disabled by default.</strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Sorting rules list",
                                    intro: "List of pre-settled rules with the most popular file extensions."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Enable/Disable rule",
                                    intro: "Click checkbox to disable rule, click again to enable it."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Actions with rule",
                                    intro: "Buttons for actions with rules. You can edit any rule or delete it permanently."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Users rules",
                                    intro: "You can add your custom rule."
                                }
                            }
                        },
                        Help: {
                            title: "Help",
                            steps: {
                                help_faq: {
                                    title: "FAQ",
                                    intro: "FAQ page with answers to most popular and common questions."
                                },
                                help_recommendations: {
                                    title: "Have recommendations?",
                                    intro: "With this form, you can drop us a line with your ideas and proposals."
                                },
                                help_bugs: {
                                    title: "Report the bug",
                                    intro: "Let us know if there are any problems with the ODM extension."
                                },
                                help_updates: {
                                    title: "News and updates",
                                    intro: "We post detailed information about the most important updates in our blog."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "批處理鏈接下載器",
                    step1: "1.上載帶有鏈接的文件",
                    step1Description: "單擊或將文件拖放到此區域以上傳鏈接列表",
                    step1SupportedFiles: "支持的列表格式：.csv，.json，.xls，.xlsx，.txt和換行符",
                    step2: "2.或手動輸入鏈接",
                    step3: "3.檢查結果",
                    checkBtn: "檢查鏈接",
                    downloadBtn: "下载",
                    allLinks: "所有",
                    okLinks: "好",
                    errorLinks: "失誤",
                    linksListDeleteErrors: "刪除有錯誤的鏈接",
                    linksListDeleteDuplicated: "刪除重複的鏈接"
                }
            }
        }), {
            it: {
                content: {
                    download_all: "Scarica Tutto",
                    download_selected: "Scarica Selezionato"
                },
                popup: {
                    toolsBar_filter_finished: "File finiti",
                    toolsBar_filter_deleted: "File Eliminati",
                    toolsBar_filter_canceled: "File Cancellati",
                    toolsBar_filter_error: "Errori",
                    toolsBar_filter_paused: "File in pausa",
                    toolsBar_filter_in_progress: "In corso",
                    toolsBar_search_placeholder: "Cerca",
                    toolsBar_downloader_placeholder: "Ottieni per url",
                    toolsBar_downloader_error: "Url Non Valido",
                    clearList_modal_text: "Vuoi cancellare la lista dei file scaricati?",
                    clearList_modal_btn_yes: "Si",
                    clearList_modal_btn_yes_all: "Si tutti",
                    clearList_modal_btn_yes_selected: "Cancella selezionato",
                    clearList_modal_clear_paused: "Cancella gli articoli in pausa",
                    clearList_modal_clear_progressed: "Cancella gli articoli avanzati",
                    clearList_modal_btn_no: "No",
                    sidebar_item_manager: "Manager",
                    sidebar_item_images: "Immagini",
                    sidebar_item_audio: "Musica",
                    sidebar_item_video: "Video",
                    sidebar_item_document: "Documento",
                    fileStatus_error: "Errore",
                    fileStatus_canceled: "Cancellati",
                    fileStatus_deleted: "File eliminato",
                    fileStatus_paused: "In pausa",
                    fileIconsText_openInFolder: "Mostra nella cartella",
                    fileIconsText_openFile: "Apri file",
                    fileActionsMenu_copyLink: "Copia l'origine del file",
                    fileActionsMenu_continue: "Continua",
                    fileActionsMenu_cancel: "Cancella",
                    fileActionsMenu_pause: "Pausa",
                    fileActionsMenu_retry: "Riprova",
                    fileActionsMenu_deleteFromList: "Elimina dalla lista",
                    fileActionsMenu_deleteFromPC: "Elimina dal computer",
                    noSearchResult_msg: "Nessun risultato",
                    removing_msg: "Rimozione ...",
                    noDownloads_msg: "Ancora nessun download",
                    noConnection_msg: "Connessione persa",
                    notificationStart: "Download iniziato",
                    notificationComplete: "Download completato",
                    notificationInterrupted: "Download interrotto",
                    notificationProgressState: "Scaricamento",
                    notificationCompleteState: "Scaricato",
                    notificationInterruptedState: "Interrotto",
                    notificationButtonOneText: "Apri file",
                    notificationButtonTwoText: "Mostra nella cartella",
                    imageSnifferTitle: "Downloader Immagini",
                    imageSnifferDescription: "Abilita Image downloader nella pagina corrente.",
                    imageSnifferButtonOn: "On",
                    imageSnifferButtonOff: "Off",
                    removeAllSniffers: "Rimuovi tutti i downloader",
                    imageSniffersWasDeactivated: "Image Downloader è stato disattivato per tutte le schede.",
                    videoActionCopyLink: "Copia collegamento video",
                    videoSnifferTitle: "Per scaricare i video hai bisogno di:",
                    videoInfoStep1: "1. Vai nella pagina Web con il video che desideri scaricare.",
                    videoInfoStep2: "2. Apri il popup dell'estensione nella pagina con il video.",
                    videoInfoStep3: "3. Scegli e scarica il video desiderato dalla lista in questa scheda",
                    notificationNoDownloadableVideos: "Non ci sono video disponibili in questa pagina",
                    notificationNoDownloadableAudios: "Non ci sono tracce audio disponibili in questa pagina",
                    audioActionDownload: "Scarica",
                    audioActionCopyLink: "Copia link audio",
                    audioActionCopyLinkCopied: "Copiare",
                    audioActionOpenInTab: "Apri in una nuova scheda",
                    uploadToCloud: "Carica su cloud",
                    uploadedToCloud: "Già caricato",
                    NoContentTitle: "Ooopss!",
                    NoContentString: "ODM non ha trovato alcun file qui.",
                    NoContentString2: "Prima prova",
                    NoContentRefreshBtn: "Aggiorna pagina",
                    NoContentRefreshBtnReloading: "Ti prego, aspetta...",
                    NoContentString3: "Non aiuta?",
                    NoContentString3_1_1: "Riproduzione",
                    NoContentString3_1_2: "video / audio sulla pagina.",
                    NoContentString3_1_3: "O inviaci una richiesta a",
                    NoContentString3_1_3doc: "Inviaci una richiesta a",
                    NoContentLine1: "Sembra che ODM non abbia trovato contenuti scaricabili in questa pagina",
                    NoContentLine2: "Fare clic sul pulsante qui sotto se il sito ha contenuto adatto per il download.",
                    NoContentBtn: "Aggiungi questo sito a ODM!",
                    NoContentUnAuthorizedUser: "Per favore, autorizzi ad inviare una richiesta.",
                    NoContentAuthorizationLink: "Login",
                    ticketWasSent: "Il biglietto è stato spedito!",
                    ticketAlreadyExist: "Il biglietto esiste già",
                    UpgradeTitle_1: "Abbonamento",
                    UpgradeTitle_2: "non rilevato!",
                    UpgradeLine1: 'Ottieni 7 giorni di prova gratuita o abbonamento "Ultra"',
                    UpgradeBtn: "Acquista ora",
                    DomainDisabledTitle: "Downloader disattivato!",
                    DomainDisabledLine1: "Controlla la Pagina delle opzioni se vuoi usare sniffer su questo sito.",
                    DomainDisabledBtn: "Vai alla pagina delle opzioni",
                    cloud_authorization_error: "Accedere al servizio cloud",
                    clearList_modal_btn_only_finished: "Solo finiti",
                    generateQR: "Genera codice QR",
                    optionBannerString_1: "Dai un'occhiata all'elenco completo",
                    optionBannerString_2: "di opzioni e caratteristiche!",
                    optionBannerBtn: "Opzioni",
                    upgradeBannerString_1: "Più funzionalità con Ultra",
                    upgradeBannerString_2: "il prezzo parte da",
                    upgradeBannerString_3: "/mese",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "Scopri tutte le funzionalità",
                    upgradeBannerPlayBtnString_2: "Con",
                    upgradeBannerPlayBtnString_3: "e",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "Categoria ed estensione del file.",
                            intro: "Seleziona una categoria di file da cercare e scaricare dai siti Web visitati. <br>\nPuoi anche modificare le estensioni dei file, rimuovere quelle inutilizzate o aggiungerne di nuove. "
                        },
                        cd_intro_step2: {
                            title: "Menù",
                            intro: "Nasconde e mostra il menu."
                        },
                        cd_intro_step3: {
                            title: "Contenuto trovati",
                            intro: "I contenuti trovati verranno elencati in quest'area."
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "Seleziona una categoria",
                        fileExtensionTitle: "Seleziona l'estensione del file"
                    }
                },
                notifications: {
                    option_menu: "Notifiche",
                    visual_notifications: {
                        enable_visual_notification: "Abilita le notifiche visive",
                        list: [{
                            notification_text: "Notifica inizio download"
                        }, {
                            notification_text: "Notifica fine download"
                        }, {
                            notification_text: "Notifica errore download"
                        }],
                        notification_time: "Durata notifica a schermo",
                        file_size_notification: "Dimensione file minima per mostrare la notifica",
                        size: [{
                            notification_text: "Illimitato"
                        }, {
                            notification_text: "KB da"
                        }, {
                            notification_text: "MB da"
                        }, {
                            notification_text: "GB da"
                        }],
                        time: "s"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "Abilita notifiche audio",
                        list: [{
                            notification_text: "Notifica inizio download"
                        }, {
                            notification_text: "Notifica fine download"
                        }, {
                            notification_text: "Notifica errore download"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "Registrati",
                    sign_up_text: "Iscriviti",
                    profile_btn: "Profilo",
                    log_out_btn: "Logout",
                    email_field_placeholder: "E-mail",
                    pass_field_placeholder: "Parola d'ordine",
                    remind_password_link: "HAI DIMENTICATO LA PASSWORD?",
                    invalid_email: "Verifica che l'email sia stata inserita correttamente",
                    invalid_dataset: "Please check the entered data",
                    email_already_in_use: "Email già in uso",
                    email_not_found: "Nessun utente trovato con quell'email",
                    email_not_verified: "Questa email non è verificata",
                    incorrect_password: "La Password è errata",
                    network_error: "Errore di rete. Per Favore, Riprova più tardi",
                    registration_success_msg: "Greate! Ti abbiamo inviato un'email di attivazione. Controlla la tua email e fai clic sul link per verificare!",
                    subscription_badge_text: "Abbonamento attivo:",
                    update_link_text: "Fare clic per aggiornare i dati.",
                    learn_more_link_text: "Per saperne di più",
                    user_data_updated: "I tuoi dati sono stati aggiornati con successo",
                    user_logged_out: "Ti sei disconnesso con successo",
                    device_limit_exceeded: 'Il limite del dispositivo è esaurito! Hai effettuato l\'accesso a più di 3 dispositivi.\nUtilizza il pulsante "Esci dalle sessioni" nella pagina del profilo e accedi nuovamente.'
                },
                sniffer: {
                    option_menu: "Downloader di contenuti",
                    video_sniffer_lablel: "Video Downloader",
                    audio_sniffer_lablel: "Audio Downloader",
                    image_sniffer_lablel: "Immagine Downloader",
                    doc_sniffer_lablel: "Downloader Documenti",
                    add_domain_invalid_url: "Url non valido!",
                    add_domain_url_exist: "Dominio esiste già!",
                    options_values: {
                        all: "Abilitato ovunque",
                        none: "Disabili ovunque",
                        blacklist: "Elenco bloccato",
                        whitelist: "Elenco consentito"
                    },
                    legend_1_title: "Abilitato ovunque",
                    legend_1_descr: "Questa opzione INCLUDE il downloader selezionato per tutte le pagine che visiti.",
                    legend_1_extra_descr: "Tieni presente che i downloader sono potenti parser di contenuti che possono influire sulla velocità di caricamento della pagina, sulle prestazioni del browser e del PC in generale.",
                    legend_2_title: "Disabili ovunque",
                    legend_2_descr: "Questa opzione DISABILITA il downloader selezionato per tutte le pagine che visiti.",
                    legend_3_title: "Elenco URL bloccato",
                    legend_3_descr: "Con questa opzione, I Downloader non funzionano su siti dall'elenco.",
                    legend_4_title: "Elenco URL consentito",
                    legend_4_descr: "Con questa opzione, i downloader funzionano SOLO sui siti dell'elenco."
                },
                general: {
                    option_menu: "Generale",
                    ebable_default_download_bar: "Abilita la barra di download del browser predefinito",
                    enable_icon_indicator: "Attiva l'icona dell'indicatore di contenuto",
                    enable_context_menu: 'Abilita "Scarica con ODM" per il menu di scelta rapida',
                    enable_autoclean_downloads: "Abilita la pulizia automatica dell'elenco di download dai download con errore",
                    autoclean_description: "(Scegli il limite (10,50,100 record) quando l'elenco deve essere pulito)"
                },
                app_appearance: {
                    option_menu: "Aspetto dell'estensione",
                    application_theme: "Tema dell'estensione",
                    dark_theme: "Scuro",
                    light_theme: "Luce",
                    application_language: "Lingua dell'estensione",
                    default_download_bar: "Nascondi la barra di download predefinita di Chrome",
                    enable_dark_icon: "Icona della barra degli strumenti"
                },
                cloud_sync: {
                    option_menu: "Sincronizzazione Cloud",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "Nome Account",
                    heading_strong: "Sincronizzazione Cloud - ",
                    heading_string: "è una funzione che ti consente di caricare file sniffati sul tuo spazio Dropbox o Google Drive. Per usarlo è necessario autorizzare l'utilizzo dell'API di archiviazione cloud, basta fare clic sul pulsante, tutto è facile.",
                    cloud_login: "Accesso",
                    cloud_logout: "Disconnettersi",
                    popup_cloud_status_title: "Stato:",
                    pricing_link_text: "Ottieni un abbonamento PRO"
                },
                save_folder: {
                    option_menu: "Salva cartella",
                    file_routing_title: "Abilita il sistema di ordinamento per i file scaricati",
                    file_routing_description: "Il sistema di ordinamento distribuisce automaticamente i file nelle sottocartelle appropriate nella cartella Download. Di seguito è riportato un elenco di estensioni di file e la directory in cui verranno inseriti dopo il download.",
                    option_addrule_btn: "Aggiungi regola di ordinamento"
                },
                help: {
                    helpTitle: "Guida in Online Download Manager",
                    faqTitle: "FAQ",
                    faqContent: "Hai una domanda su come utilizzare Online Download Manager?",
                    faqContent2: "Abbiamo fatto un dettaglio",
                    faqContentEnding: "per te.",
                    recommendTitle: "Raccomandazioni",
                    recommendContent: "Hai idee su come migliorare l'ODM?",
                    recommendContent2: "Uso il",
                    recommendContentEnding: "modulo per condividere idee con noi.",
                    bugsTitle: "Difetto",
                    bugsContent: "Hai trovato un difetto? Inviaci a",
                    bugsContentEnding: "o pubblicalo su",
                    updatesTitle: "Aggiornamenti",
                    updatesContent: "Segui il nostro",
                    updatesContentEnding: "rimani aggiornato con le notizie su ODM.",
                    option_menu: "Aiuto",
                    faq: "Qui abbiamo provato a rispondere a tutte le domande frequenti (FAQ)",
                    issue: "Se avete qualche problema, raccomandazioni o richieste riguardanti le funzionalità dell'estensione, per favore, contattateci attraverso questo link"
                },
                about: {
                    option_menu: "Sul progetto",
                    description: ["Chi siamo? - siamo un team ambizioso di designer e sviluppatori Uniti da un'idea.", "Il nostro obiettivo principale è quello di rendere le cose quotidiane più confortevoli e condividere le soluzioni con il mondo.", "Un giorno abbiamo notato che il browser più popolare al mondo ha problemi con l'interfaccia utente durante il processo di download. Quindi abbiamo deciso di risolvere questo problema e sviluppato davvero uno dei migliori download manager.", "Come risultato di un lavoro lungo e complicato, è nato Online Download Manager che ha raccolto tutto il meglio che poteva essere inserito in un downloader moderno.", "Come risultato di un lavoro lungo e complicato, è nato un gestore di download online che ha raccolto tutto il meglio che poteva essere nel downloader moderno.", "Ad oggi, il nostro lavoro è stato apprezzato da più di 260.000 utenti provenienti da tutto il mondo - e questo fatto ci fa capire che la nostra strada è giusta! Tutti i nostri sforzi raggiungono l'obiettivo, il nostro lavoro è apprezzato dagli utenti e ci dà sempre più forza per andare avanti, migliorare il nostro prodotto e rendere il mondo un po ' migliore.", "Spero che anche voi, nostro caro utente, apprezziate il nostro prodotto.", "A nostra volta, promettiamo di ascoltare le tue esigenze e di integrarlo in Online Download Manager per renderlo davvero il miglior download manager al mondo.", "Regards, ODM Team."],
                    rate_us: "Votateci con 5 stelle!",
                    donate: "Donate"
                },
                save_settings: "Settaggi salvati",
                table: {
                    fileType: "Tipo di file",
                    directory: "Percorso",
                    file_extension: "Estensione del file",
                    rule_actions: "Azione",
                    extensions: ["Immagine", "Musica", "Video", "Programma", "Documento", "Libro", "Archivio", "Immagine", "Sistema", "Font", "Torrente", "Altri"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Choose the language",
                    wlcModalTitle: "Hello!",
                    wlcModalSubTitle: "Thanks for choosing the ODM extension and welcome!",
                    wlcString_1: "We prepared a quick and clear guide through the extension`s features.",
                    wlcString_1_2: "Keep in mind that some of the functions (like video downloaders or audio downloaders from certain sites) available only with a paid subscription and only for registered users.",
                    wlcString_2: "To shorten the learning time, we made a quick guide through the interface.",
                    wlcString_3: "Start tour using controls",
                    wlcString_4: "step-by-step learn your new download helper.",
                    startTourBtn: "Start Tour",
                    skipTourBtn: "Skip"
                },
                tutorial_finish_modal: {
                    tfmTitle: "That’s all for start!",
                    tfmString_1: "This is was a short review of the main options so you can open the full potential of ODM extension.",
                    tfmString_2: "You can always get detailed instructions for each ODM function, using the Help Center, the icon in the bottom right corner.",
                    tfmString_3: "to get all features and stay tuned for updates and news.",
                    tfmButton: "Close"
                },
                sidebar_footer: {
                    Share: "Racconta al mondo di ODM",
                    RateUs: "Tasso ODM",
                    raitingThanksText: "Thank you!"
                },
                tutorial: {
                    heading: "Help Center",
                    contents: "Contents:",
                    quickStart: "Quick start",
                    categories: {
                        introduction: {
                            title: "Introduction",
                            steps: {
                                profile: {
                                    title: "Users profile",
                                    intro: "Your account information goes here: avatar, email, subscription plan, etc.<br> You can change avatar and information in your profile on the <a href='https://download-manager.online/profile' target='_blank'>web site.</a> "
                                },
                                app_appearance: {
                                    title: "App Appearance",
                                    intro: "Settings for the extension`s appearance and language selection."
                                },
                                notifications: {
                                    title: "Notifications",
                                    intro: "Manage sound and visual notifications.<br>Set the volume and duration of the display on the screen."
                                },
                                content_downloaders: {
                                    title: "Content downloaders",
                                    intro: "Content downloaders - modules that find media files on sites and lets you download them.<br>You can set-up a white or blacklist of domains for content downloaders."
                                },
                                cloud_sync: {
                                    title: "Cloud Sync",
                                    intro: "Cloud Sync options - lets you add your Cloud storage account into ODM for files transfer directly from extension to storage."
                                },
                                sorting_system: {
                                    title: "Sorting system",
                                    intro: "Distribution of downloaded files to sub-directories in the 'Downloads' folder depending on the file extension."
                                },
                                help: {
                                    title: "Help",
                                    intro: "Here you can tell us about the bugs, contact support, or go to the FAQ page."
                                },
                                share: {
                                    title: "Share ODM with friends",
                                    intro: "Tell the World about ODM extension."
                                },
                                rate: {
                                    title: "Tasso ODM",
                                    intro: "Rate the ODM extension.<br>Each 5 stars review, let us know that we are moving in the right direction."
                                }
                            }
                        },
                        app_appearance: {
                            title: "App Appearance",
                            steps: {
                                theme: {
                                    title: "Pop-up theme",
                                    intro: "Select a light or dark pop-up theme."
                                },
                                language: {
                                    title: "Extension`s Language",
                                    intro: "Application language.<br> English is enabled by default."
                                },
                                defaultChromesBar: {
                                    title: "Default browser`s download bar",
                                    intro: "Turn on/off the standard browser`s download bar, which displays all current or completed downloads."
                                },
                                contentIndicator: {
                                    title: "Content indicator on the icon",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>A red indicator on the extension icon indicates that content available for download has been found on the page."
                                },
                                darkIcon: {
                                    title: "Extension`s icon",
                                    intro: "Switch extension`s icon to colored or dark."
                                }
                            }
                        },
                        notifications: {
                            title: "Notifications",
                            steps: {
                                visual_notifications: {
                                    title: "Visual notifications",
                                    intro: "On/Off visual notifications about the download process."
                                },
                                visualNotificationsDetails: {
                                    title: "Visual notifications settings",
                                    intro: "Set-up which visual notifications you want to see: start of download, end of download, download error.<br> Also, you can choose in seconds how long these notifications will appear on the screen.<br> &#8734; - means that notification will stay on screen till you click it."
                                },
                                filesizeToRunNotifications: {
                                    title: "Settings of file size to run notifications.",
                                    intro: "You can select the minimum size of the downloadable file to show notifications."
                                },
                                sound_notifications: {
                                    title: "Sound notifications",
                                    intro: "On/Off sound notifications about the download process."
                                },
                                soundNotificationsDetails: {
                                    title: "Sound notifications settings",
                                    intro: "Set-up which sound notifications you want to hear: start of download, end of download, download error.<br> Also, you can choose the notifications volume."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Content downloaders",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Content downloaders control",
                                    intro: "Here you can tune domain names where content downloaders will work or not.<br> By default - all downloaders work on all pages you visit."
                                },
                                downloadersLegend: {
                                    title: "Possible options",
                                    intro: "There are 4 options for content downloaders work. <br> Check-out the list and select the most suitable for you."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Select the necessary option",
                                    intro: "Select the necessary option from the dropdown menu.<br> If you enable black/white lists - you need to add the necessary domain into the table."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Cloud Sync",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Cloud Sync",
                                    intro: "Here you can authorize ODM to your cloud storage(s).<br> It will let you upload content found on the pages directly to your storage from the extensions pop-up interface.<br><br><strong>This option available with PRO subscription and higher.</strong> "
                                },
                                cloudSelect: {
                                    title: "Storage select",
                                    intro: "Select the necessary storage clicking on its logo. Then click the 'Log in' button and log in using your Login/Password.<br><br><strong>Keep in mind - we use official API from cloud storages - your personal data in complete safety.</strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "Sorting system",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "Sorting system",
                                    intro: "Enable/Disable sorting system.<br><br> <strong>Disabled by default.</strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Sorting rules list",
                                    intro: "List of pre-settled rules with the most popular file extensions."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Enable/Disable rule",
                                    intro: "Click checkbox to disable rule, click again to enable it."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Actions with rule",
                                    intro: "Buttons for actions with rules. You can edit any rule or delete it permanently."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Users rules",
                                    intro: "You can add your custom rule."
                                }
                            }
                        },
                        Help: {
                            title: "Help",
                            steps: {
                                help_faq: {
                                    title: "FAQ",
                                    intro: "FAQ page with answers to most popular and common questions."
                                },
                                help_recommendations: {
                                    title: "Have recommendations?",
                                    intro: "With this form, you can drop us a line with your ideas and proposals."
                                },
                                help_bugs: {
                                    title: "Report the bug",
                                    intro: "Let us know if there are any problems with the ODM extension."
                                },
                                help_updates: {
                                    title: "News and updates",
                                    intro: "We post detailed information about the most important updates in our blog."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "Downloader di collegamento batch",
                    step1: "1. Carica il file con i link",
                    step1Description: "Fare clic o trascinare e rilasciare il file in quest'area per caricare l'elenco dei collegamenti",
                    step1SupportedFiles: "Formati di elenco supportati: .csv, .json, .xls, .xlsx, .txt, con interruzioni di riga",
                    step2: "2. oppure immettere manualmente i collegamenti",
                    step3: "3. Risultato del controllo",
                    checkBtn: "Controlla i link",
                    downloadBtn: "Scarica",
                    allLinks: "Tutte",
                    okLinks: "OK",
                    errorLinks: "Errori",
                    linksListDeleteErrors: "Elimina i collegamenti con errori",
                    linksListDeleteDuplicated: "Elimina i link duplicati"
                }
            }
        }), {
            fi: {
                content: {
                    download_all: "Lataa kaikki",
                    download_selected: "Lataa valitut"
                },
                popup: {
                    toolsBar_filter_finished: "Valmistuneet tiedostot",
                    toolsBar_filter_deleted: "Poistetut tiedostot",
                    toolsBar_filter_canceled: "Peruutetut tiedostot",
                    toolsBar_filter_error: "Virheet",
                    toolsBar_filter_paused: "Keskeytetyt tiedostot",
                    toolsBar_filter_in_progress: "Meneillään",
                    toolsBar_search_placeholder: "Etsi",
                    toolsBar_downloader_placeholder: "Hanki URL-osoitteesta",
                    toolsBar_downloader_error: "Virheellinen URL",
                    clearList_modal_text: "Haluatko tyhjentää latauslistan?",
                    clearList_modal_btn_yes: "Kyllä",
                    clearList_modal_btn_yes_all: "Kyllä, kaikki",
                    clearList_modal_btn_yes_selected: "Tyhjennä valitut",
                    clearList_modal_clear_paused: "Tyhjennä keskeytetyt kohteet",
                    clearList_modal_clear_progressed: "Tyhjennä valmistuneet kohteet",
                    clearList_modal_btn_no: "Ei",
                    sidebar_item_manager: "Hallinta",
                    sidebar_item_images: "Kuvat",
                    sidebar_item_audio: "Musiikki",
                    sidebar_item_video: "Videot",
                    sidebar_item_document: "Asiakirja",
                    fileStatus_error: "Virhe",
                    fileStatus_canceled: "Peruutettu",
                    fileStatus_deleted: "Tiedosto poistettu",
                    fileStatus_paused: "Keskeytetty",
                    fileIconsText_openInFolder: "Näytä kansiossa",
                    fileIconsText_openFile: "Avaa tiedosto",
                    fileActionsMenu_copyLink: "Kopioi tiedoston lähde",
                    fileActionsMenu_continue: "Jatka",
                    fileActionsMenu_cancel: "Peruuta",
                    fileActionsMenu_pause: "Keskeytä",
                    fileActionsMenu_retry: "Yritä uudelleen",
                    fileActionsMenu_deleteFromList: "Poista listalta",
                    fileActionsMenu_deleteFromPC: "Poista tietokoneelta",
                    noSearchResult_msg: "Ei tuloksia",
                    removing_msg: "Poistamalla ...",
                    noDownloads_msg: "Ei vielä latauksia",
                    noConnection_msg: "Yhteys katkennut",
                    notificationStart: "Lataus aloitettu",
                    notificationComplete: "Lataus valmis",
                    notificationInterrupted: "Lataus keskeytettiin",
                    notificationProgressState: "ladataan",
                    notificationCompleteState: "ladattu",
                    notificationInterruptedState: "keskeytettiin",
                    notificationButtonOneText: "Avaa tiedosto",
                    notificationButtonTwoText: "Näytä kansiossa",
                    imageSnifferTitle: "Kuvanuuskija",
                    imageSnifferDescription: "Ota kuvanuuskija käyttöön ja huomaa nettisivuilla kuvake oikeassa ylänurkassa.",
                    imageSnifferButtonOn: "Päällä",
                    imageSnifferButtonOff: "Pois",
                    removeAllSniffers: "Poista kaikki nuuskijat",
                    imageSniffersWasDeactivated: "Kuvanuuskijat poistettiin käytöstä kaikilla välilehdillä.",
                    videoActionCopyLink: "Kopioi videolinkki",
                    videoSnifferTitle: "Ladataksesi haluamasi videon:",
                    videoInfoStep1: "1. Mene nettisivulle, jossa haluamasi video on.",
                    videoInfoStep2: "2. Avaa Online Download Manager -popup videon sisältämällä sivulla.",
                    videoInfoStep3: "3. Valitse ja lataa haluamasi video tällä välilehdellä olevasta listasta.",
                    notificationNoDownloadableVideos: "Ei videoita tällä sivulla.",
                    notificationNoDownloadableAudios: "Ei audiota tällä sivulla.",
                    audioActionDownload: "Lataa",
                    audioActionCopyLink: "Kopioi audiolinkki",
                    audioActionCopyLinkCopied: "Kopioitu",
                    audioActionOpenInTab: "Avaa uudessa välilehdessä",
                    uploadToCloud: "Lataa pilveen",
                    uploadedToCloud: "Jo aiemmin ladattu",
                    NoContentTitle: "Hupsista!",
                    NoContentString: "ODM ei löytänyt täältä tiedostoja.",
                    NoContentString2: "Yritä ensin",
                    NoContentRefreshBtn: "Päivitä sivu",
                    NoContentRefreshBtnReloading: "Odota...",
                    NoContentString3: "Eikö auta?",
                    NoContentString3_1_1: "Toisto",
                    NoContentString3_1_2: "video / ääni sivulla.",
                    NoContentString3_1_3: "Tai lähetä meille pyyntö osoitteeseen",
                    NoContentString3_1_3doc: "Lähetä meille pyyntö",
                    NoContentLine1: "Näyttää siltä, että ODM ei löytänyt mitään ladattavaa sisältöä tältä sivulta.",
                    NoContentLine2: "Napsauta painiketta alta, jos sivulla on ladattavaa sisältöä.",
                    NoContentBtn: "Lisää tämä sivu ODM:ään!",
                    NoContentUnAuthorizedUser: "Tämän resurssin käyttö vaatii valtuuuksen",
                    NoContentAuthorizationLink: "Kirjaudu sisään nyt!",
                    ticketWasSent: "Lippu lähetettiin!",
                    ticketAlreadyExist: "Pyyntö on jo olemassa",
                    UpgradeTitle_1: "Tilaus",
                    UpgradeTitle_2: "ei havaittu!",
                    UpgradeLine1: 'Hanki ilmainen 7 päivän kokeilu tai "Ultra" -tilaus',
                    UpgradeBtn: "Hae se nyt",
                    DomainDisabledTitle: "Nuuskija pois käytöstä!",
                    DomainDisabledLine1: "Vieraile asetussivulla, jos haluat käyttää nuuskijaa tällä sivulla.",
                    DomainDisabledBtn: "Siirry asetussivulle",
                    cloud_authorization_error: "Kirjaudu pilvipalveluun",
                    clearList_modal_btn_only_finished: "Vain valmiit",
                    generateQR: "Luo QR-koodi",
                    optionBannerString_1: "Katso koko luettelo",
                    optionBannerString_2: "asetuksista ja ominaisuuksista!",
                    optionBannerBtn: "Asetukset",
                    upgradeBannerString_1: "Lisää ominaisuuksia Ultra: n kanssa",
                    upgradeBannerString_2: "hinta alkaen ",
                    upgradeBannerString_3: "/kuukausi",
                    upgradeBannerStringHeighlighted: "3$",
                    upgradeBannerPlayBtnString_1: "Löydä kaikki ominaisuudet",
                    upgradeBannerPlayBtnString_2: "Kanssa",
                    upgradeBannerPlayBtnString_3: "ja",
                    upgradeBannerPlayBtnStringPro: "Pro",
                    upgradeBannerPlayBtnStringUltra: "Ultra",
                    customSnifferTutorialSteps: {
                        cd_intro_step1: {
                            title: "Tiedoston luokka ja laajennus.",
                            intro: "Valitse tiedostoluokka, jota haluat etsiä ja ladata vierailemiltasi verkkosivustoilta. <br> \nVoit myös muokata tiedostopääteitä, poistaa käyttämättömiä tai lisätä omia."
                        },
                        cd_intro_step2: {
                            title: "Valikko",
                            intro: "Piilota ja näytä valikko."
                        },
                        cd_intro_step3: {
                            title: "Löytyi sisältö",
                            intro: "Löytyi sisältö luetellaan tällä alueella."
                        }
                    },
                    customDownloader: {
                        fileCategoryTitle: "Valitse hakuluokan tiedostoluokka",
                        fileExtensionTitle: "Valitse tiedostotunnisteet"
                    }
                },
                notifications: {
                    option_menu: "Ilmoitukset",
                    visual_notifications: {
                        enable_visual_notification: "Käytä visuaalisia ilmoituksia",
                        list: [{
                            notification_text: "Latauksen aloitusilmoitus"
                        }, {
                            notification_text: "Latauksen valmistumisilmoitus"
                        }, {
                            notification_text: "Latausvirheilmoitus"
                        }],
                        notification_time: "Aika ruudulla",
                        file_size_notification: "Minimitiedostokoko, jolle ilmoitus näytetään",
                        size: [{
                            notification_text: "Rajaton"
                        }, {
                            notification_text: "Kb >"
                        }, {
                            notification_text: "Mb >"
                        }, {
                            notification_text: "Gb >"
                        }],
                        time: "s"
                    },
                    sound_notifications: {
                        enable_sound_notifications: "Käytä ääni-ilmoituksia",
                        list: [{
                            notification_text: "Latauksen aloitusilmoitus"
                        }, {
                            notification_text: "Latauksen valmistumisilmoitus"
                        }, {
                            notification_text: "Latausvirheilmoitus"
                        }]
                    }
                },
                user_box: {
                    sign_in_text: "Kirjaudu",
                    sign_up_text: "Rekisteröidy",
                    profile_btn: "Profiili",
                    log_out_btn: "Kirjaudu ulos",
                    email_field_placeholder: "Sähköposti",
                    pass_field_placeholder: "Salasana",
                    remind_password_link: "UNOHTUIKO SALASANA?",
                    invalid_email: "Tarkista, että sähköposti on kirjoitettu oikein",
                    invalid_dataset: "Tarkista syötetty tieto",
                    email_already_in_use: "Sähköposti on jo käytössä",
                    email_not_found: "Ei löytynyt käyttäjää tällä sähköpostiosoitteella",
                    email_not_verified: "Tätä sähköpostia ei ole vahvistettu",
                    incorrect_password: "Salasana on väärin",
                    network_error: "Verkkovirhe. Yritä myöhemmin uudelleen.",
                    registration_success_msg: "Hienoa! Lähetimme sinulle vahvistusviestin. Tarkista sähköpostisi ja napsauta vahvistuslinkkiä!",
                    subscription_badge_text: "Aktiivinen tilaus:",
                    update_link_text: "Napsauta päivittääksesi tiedot.",
                    learn_more_link_text: "Opi lisää",
                    user_data_updated: "Tietosi on päivitetty onnistuneesti",
                    user_logged_out: "Kirjauduit ulos onnistuneesti",
                    device_limit_exceeded: 'Laiteraja on käytetty! Kirjaudut sisään enemmän kuin kolmelle laitteelle.\nKäytä Profiilisivun "Kirjaudu ulos istunnot" -painiketta ja kirjaudu sisään uudelleen.'
                },
                sniffer: {
                    option_menu: "Sisältönuuskijat",
                    video_sniffer_lablel: "Videonuuskija",
                    audio_sniffer_lablel: "Audionuuskija",
                    image_sniffer_lablel: "Levykuvanuuskija",
                    doc_sniffer_lablel: "Asiakirjalataaja",
                    add_domain_invalid_url: "Virheellinen URL!",
                    add_domain_url_exist: "Domain on jo olemassa!",
                    options_values: {
                        all: "Käytössä kaikkialla",
                        none: "Pois käytöstä",
                        blacklist: "Estetyt URL:t",
                        whitelist: "Sallitut URL:t"
                    },
                    legend_1_title: "Käytössä kaikkialla",
                    legend_1_descr: "Tämä valinta OTTAA valitun nuuskijan KÄYTTÖÖN kaikilla sivuilla, joissa vierailet.",
                    legend_1_extra_descr: " Muista, että nuuskijat ovat tehokkaita sisällön jäsentäjiä, jotka voivat vaikuttaa sivun latausnopeuteen, sekä selaimesi ja tietokoneesi yleiseen suorituskykyyn.",
                    legend_2_title: "Pois käytöstä",
                    legend_2_descr: "Tämä valinta POISTAA valitun nuuskijan KÄYTÖSTÄ kaikilta sivuilla, joissa vierailet.",
                    legend_3_title: "Estetyt URL:t",
                    legend_3_descr: "Tämä valinta poistaa nuuskijat käytöstä listalla olevilla sivuilla.",
                    legend_4_title: "Sallitut URL:t",
                    legend_4_descr: "Tämä valinta käyttää nuuskijoita VAIN listalla olevilla sivuilla."
                },
                general: {
                    option_menu: "Yleiset",
                    ebable_default_download_bar: "Ota selaimen oletuslatauspalkki käytöön",
                    enable_icon_indicator: "Ota sisällönilmaisinkuvake käyttöön",
                    enable_context_menu: 'Ota käyttöön "Lataa ODM: stä" -valikkokohta',
                    enable_autoclean_downloads: "Ota käyttöön latausluettelon automaattinen puhdistus virheellisistä latauksista",
                    autoclean_description: "(Valitse raja (10, 50, 100 virhetietuetta), jolloin luettelo on puhdistettava)"
                },
                app_appearance: {
                    option_menu: "Ulkoasu",
                    application_theme: "Teema",
                    dark_theme: "Tumma",
                    light_theme: "Vaalea",
                    application_language: "Sovelluksen kieli",
                    default_download_bar: "Piilota Chromen oletuslatauspalkki",
                    enable_dark_icon: "Työkalurivin kuvake"
                },
                cloud_sync: {
                    option_menu: "Pilvisynkronointi",
                    dropbox_tab: "Dropbox",
                    gdrive_tab: "Google Drive",
                    onedrive_tab: "One Drive",
                    account_name: "Tilinimi",
                    heading_strong: "Pilvisynkronointi - ",
                    heading_string: "ominaisuus, jonka avulla voit lähettää nuuskitut tiedostot Dropboxiin tai Google Driveen. Jotta voit käyttää ominaisuutta, sinun on valtuutettava pilvitallennus napsauttamalla painiketta.",
                    cloud_login: "Kirjaudu sisään",
                    cloud_logout: "Kirjaudu ulos",
                    popup_cloud_status_title: "Tila:",
                    pricing_link_text: "Hanki PRO-versio"
                },
                save_folder: {
                    option_menu: "Lajittelujärjestelmä",
                    file_routing_title: "Ota tiedostojen reititysjärjestelmä käyttöön",
                    file_routing_description: "Reititysjärjestelmä jakaa tiedostot automaattisesti latauskansiossa asianmukaisiin kansioihin. Alla on luettelo tiedostopääteistä sekä hakemisto, johon ne sijoitetaan lataamisen jälkeen. ",
                    option_addrule_btn: "Lisää hakemisto"
                },
                help: {
                    helpTitle: "Online Download Manager -tuki",
                    faqTitle: "UKK",
                    faqContent: "Onko sinulla kysymyksiä Online Download Managerin käytöstä?",
                    faqContent2: "Teimme yksityiskohtaisen",
                    faqContentEnding: "sinua varten.",
                    recommendTitle: "Suositukset",
                    recommendContent: "Onko sinulla ideoita, joilla parantaisimme ODM:ää?",
                    recommendContent2: "Käytä",
                    recommendContentEnding: "-lomaketta jakaaksesi ideoita kanssamme.",
                    bugsTitle: "Virheet",
                    bugsContent: "Löysitkö virheen? Lähetä meille",
                    bugsContentEnding: "tai tee se sivulla",
                    updatesTitle: "Päivitykset",
                    updatesContent: "Seuraa meidän",
                    updatesContentEnding: "ja pysy ajan tasalla ODM-uutisista.",
                    option_menu: "Apua",
                    faq: "Yritimme tässä vastata kaikkiin usein kysyttyihin kysymyksiin",
                    issue: "Jos sinulla on ongelmia, suosituksia tai toiveita, ota meihin yhteyttä tämän linkin avulla."
                },
                about: {
                    option_menu: "Tietoa projektista",
                    description: ["Keitä olemme? - Olemme kunnianhimoinen suunnittelijoiden ja kehittäjien tiimi, jota yhdistää yksi idea.", "Päätavoitteemme on tehdä arjesta mukavampaa ja jakaa ratkaisuja maailmalle.", "Eräänä päivänä huomasimme, että maailman suosituimmalla selaimella on ongelmia latauskäyttöliittymän kanssa. Joten päätimme ratkaista tämän ongelman ja kehitimme yhden parhaista lataushallinnoista.", "Olemme keränneet monen vuoden kokemuksen web-suunnittelusta ja ohjelmistojen kehittämisestä luodaksemme sopivimman ja täydellisimmän ratkaisun. Lisäksi analysoimme suurimman osan samankaltaisista ratkaisuista selvittääksemme niiden vahvat ja heikot puolet.", "Pitkän ja monimutkaisen työn tuloksena syntyi Online Download Manager, johon kokosimme parhaat nykyaikaisen lataushallinnan ominaisuudet.", "Tähän mennessä työtämme on arvostanut jo yli 260 000 käyttäjää ympäri maailmaa - ja tämä tosiasia saa meidät ymmärtämään, että suuntamme on oikea! Kaikki ponnistelumme tavoitteen saavuttamiseksi, käyttäjät pitävät työstämme ja se antaa meille yhä enemmän voimaa siirtyä eteenpäin, parantaa tuotteitamme ja tehdä maailmasta hieman parempaa.", "Toivomme, että sinä, rakas käyttäjä, arvostat myös tuotettamme.", "Meidän puolestamme lupaamme kuunnella tarpeitasi ja integroida ne Online Download Manager -sovellukseen, jotta siitä tulee todella maailman paras lataushallinta.", "Terveisin, ODM-tiimi"],
                    rate_us: "Arvioi meidät",
                    donate: "Lahjoita"
                },
                save_settings: "Asetukset tallennettu",
                table: {
                    fileType: "Tiedostotyyppi",
                    directory: "Hakemisto",
                    file_extension: "Tiedostopääte",
                    rule_actions: "Toiminnot",
                    extensions: ["Kuva", "Musiikki", "Video", "Ohjelma", "Asiakirja", "Kirja", "Arkisto", "Levykuva", "Järjestelmä", "Fontti", "Torrent", "Muut"]
                },
                tutorial_start_modal: {
                    wlcModalLangChooser: "Valitse kieli",
                    wlcModalTitle: "Hei!",
                    wlcModalSubTitle: "Kiitos, kun valitsit ODM-laajennuksen ja tervetuloa!",
                    wlcString_1: "Valmistelimme nopean ja selkeän oppaan ominaisuuksiin tutustumiseksi.",
                    wlcString_1_2: "Pidäthän mielessäsi, että jotkin toiminnot (kuten video- ja audiotiedostojen lataajat tietyillä sivuilla) ovat saatavissa vain maksullisessa versiossa ja ainoastaan rekisteröityneille käyttäjille.",
                    wlcString_2: "Lyhentääksesi oppimisaikaasi, teimme lyhyen ohjeen toimintojen läpikäymiseksi.",
                    wlcString_3: "Aloita opastus käyttämällä säätimiä",
                    wlcString_4: "ja opi askel askeleelta uuden latausapurisi toiminnot.",
                    startTourBtn: "Aloita opastus",
                    skipTourBtn: "Ohita"
                },
                tutorial_finish_modal: {
                    tfmTitle: "Siinä kaikki!",
                    tfmString_1: "Tämä oli lyhyt opastus päätoimintoihin, jotta voit saada kaiken irti ODM-laajennuksesta.",
                    tfmString_2: "Voit saada yksityiskohtaisia ohjeita kullekin ODM:n toiminnolle käyttämällä tukikeskustamme, kuvake sivun oikeassa alakulmassa.",
                    tfmString_3: "saadaksesi kaikki ominaisuudet ja pysyäksesi ajan tasalla.",
                    tfmButton: "Sulje"
                },
                sidebar_footer: {
                    Share: "Kerro maailmalle ODM:stä",
                    RateUs: "Arvostele ODM",
                    raitingThanksText: "Kiitos"
                },
                tutorial: {
                    heading: "Tukikeskus",
                    contents: "Sisältö:",
                    quickStart: "Pika-aloitus",
                    categories: {
                        introduction: {
                            title: "Esittely",
                            steps: {
                                profile: {
                                    title: "Profiili",
                                    intro: "Tilitietosi menevät tänne: avatar, sähköposti, tilaustyyppi, jne.<br> Voit vaihtaa avatartasi ja profiilisi tietoja <a href='https://download-manager.online/profile' target='_blank'>kotisivuillamme.</a> "
                                },
                                app_appearance: {
                                    title: "Ulkoasu",
                                    intro: "Laajennuksen ulkoasuasetukset ja kielivalinta."
                                },
                                notifications: {
                                    title: "Ilmoitukset",
                                    intro: "Hallitse ääni- ja visuaalisia ilmoituksia.<br>Aseta äänenvoimakkuutta ja ilmoituksen kestoa ruudulla."
                                },
                                content_downloaders: {
                                    title: "Sisältölataajat",
                                    intro: "Sisältölataajat-moduuli, löytää mediatiedostoja sivuilta ja antaa sinun ladata niitä.<br>Voit asettaa valkoisen ja mustan listan domaineille sisällön lautausta varten."
                                },
                                cloud_sync: {
                                    title: "Pilvisynkronointi",
                                    intro: "Pilvisynkronoinnin avulla voit lisätä pilvitallennustilisi ODM:ään tiedostojen siirtoa varten suoraan laajennuksesta tallennustilaasi."
                                },
                                sorting_system: {
                                    title: "Lajittelujärjestelmä",
                                    intro: "Ladattujen tiedostojen jaottelu alihakemistoihin perustuen tiedostotyyppin."
                                },
                                help: {
                                    title: "Apua",
                                    intro: "Täällä voit kertoa vioista, ottaa yhteyttä tukeen tai siirtyä UKK-sivulle."
                                },
                                share: {
                                    title: "Jaa ODM ystävillesi",
                                    intro: "Kerro ODM-laajennuksen maailmasta."
                                },
                                rate: {
                                    title: "Arvostele ODM",
                                    intro: "Arvostele ODM-laajennus.<br>Jokainen 5 tähden arvio kertoo meille, että olemme matkalla oikeaan suuntaan."
                                }
                            }
                        },
                        app_appearance: {
                            title: "Ulkoasu",
                            steps: {
                                theme: {
                                    title: "Pop-up -teema",
                                    intro: "Valitse vaalea tai tumma pop-up -teema."
                                },
                                language: {
                                    title: "Laajennuksen kieli",
                                    intro: "Sovelluksen kieli.<br> Englanti on oletuskieli."
                                },
                                defaultChromesBar: {
                                    title: "Selaimen oletuslatauspalkki",
                                    intro: "Ota käyttöön selaimen oma latauspalkki, joka näyttää nykyiset ja valmistuneet lataukset."
                                },
                                contentIndicator: {
                                    title: "Kuvakkeen sisältöilmaisin",
                                    intro: "<img src='/img/content_indicator.png' alt='Content indicator'> <br>Punainen ilmaisin laajennuksen kuvakkeessa kertoo, että sivulta on löytynyt sisältöä ladattavaksi."
                                },
                                darkIcon: {
                                    title: "Laajennuksen kuvake",
                                    intro: "Vaihda laajennuksen kuvake värilliseksi tai tummaksi."
                                }
                            }
                        },
                        notifications: {
                            title: "Ilmoitukset",
                            steps: {
                                visual_notifications: {
                                    title: "Visuaaliset ilmoitukset",
                                    intro: "Ota käyttöön latausprosessin visuaaliset ilmoitukset."
                                },
                                visualNotificationsDetails: {
                                    title: "Visuaalisten ilmoitusten asetukset",
                                    intro: "Aseta haluamasi visuaaliset ilmoitukset: latauksen aloitus tai lopetus, latausvirhe.<br> Voit myös määrittää, montako sekuntia ilmoitusta näytetään ruudulla.<br> &#8734; - tarkoittaa, että ilmoitusta näytettään kunnes napsautat sitä."
                                },
                                filesizeToRunNotifications: {
                                    title: "Tiedostokoon ilmoitusasetukset.",
                                    intro: "Voit valita minimikoon ladattaville tiedostoille, joille ilmoitus näytetään."
                                },
                                sound_notifications: {
                                    title: "Ääni-ilmoitukset",
                                    intro: "Ota käyttöön ääni-ilmoituksia latausprosessille."
                                },
                                soundNotificationsDetails: {
                                    title: "Ääni-ilmoitusten asetukset",
                                    intro: "Aseta, mitkä ääni-ilmoitukset haluat kuulla: latauksen aloitus tai lopetus, latausvirhe.<br> Voit myös valita ilmoitusten äänenvoimakkuudet."
                                }
                            }
                        },
                        contentDownloaders: {
                            title: "Sisältölataajat",
                            steps: {
                                downloadersIntoduction: {
                                    title: "Sisältönuuskijoiden määritys",
                                    intro: "Tässä voit määrittää domainit, joitta sisältölataaja toimii tai ei toimi.<br> Oletuksena kaikki toimivat kaikilla käymilläsi sivuilla."
                                },
                                downloadersLegend: {
                                    title: "Mahdolliset vaihtoehdot",
                                    intro: "On 4 tapaa, jolla lataaja toimii. <br> Valitse sinulle sopivin vaihtoehto."
                                },
                                dowloadersSelectIntrojs: {
                                    title: "Valitse tarvittava vaihtoehto",
                                    intro: "Valitse tarvittava vaihtoehto pudotusvalikosta.<br> Jos otat käyttöön mustat/valkoiset listat, pitää sinun määrittää halutut domainit taulukkoon."
                                }
                            }
                        },
                        CloudSync: {
                            title: "Pilvisynkronointi",
                            steps: {
                                CloudSyncIntroduction: {
                                    title: "Pilvisynkronointi",
                                    intro: "Täällä voit valtuuttaa ODM:n omaan pilvitallennustilaasi.<br> Tämän avulla voit ladata sisältöä suoraan laajennuksesta pilveen.<br><br><strong>Tämä toiminto on käytössä PRO-versiosta alkaen.</strong> "
                                },
                                cloudSelect: {
                                    title: "Tallennustilan valinta",
                                    intro: "Valitse haluttu tallennustila napsauttamalla sen logoa. Tämän jälkeen napsauta 'Kirjaudu sisään' -painiketta ja kirjaudu tunnuksillasi sisään.<br><br><strong>Huomioithan, että käytämme virallisia API-rajapintoja ja henkilökohtaiset tietosi pysyvät täysin turvassa.</strong>"
                                }
                            }
                        },
                        SortingSystem: {
                            title: "Lajittelujärjestelmä",
                            steps: {
                                sortingIntoductionIntojs: {
                                    title: "Lajittelujärjestelmä",
                                    intro: "Ota käyttöön lajittelujärjestelmä.<br><br> <strong>Oletuksena poissa käytöstä.</strong>"
                                },
                                sortingTableIntojs: {
                                    title: "Lajittelusääntöjen lista",
                                    intro: "Esiasetettujen sääntöjen lista yleisimmille tiedostopäätteille."
                                },
                                sortingCheckboxIntrojs: {
                                    title: "Ota sääntö käyttöön",
                                    intro: "Napsauta valintaruutua poistaaksesi säännön, napsauta uudelleen ottaaksesi sen käyttöön."
                                },
                                sortingRuleActionsIntrojs: {
                                    title: "Sääntöjen toiminnot",
                                    intro: "Sääntöjen toimintipainikkeet. Voit muokata sääntöä tai poistaa sen lopullisesti."
                                },
                                sortingAddRuleIntojs: {
                                    title: "Käyttäjän säännöt",
                                    intro: "Voit lisätä omia sääntöjäsi."
                                }
                            }
                        },
                        Help: {
                            title: "Apua",
                            steps: {
                                help_faq: {
                                    title: "UKK",
                                    intro: "UKK-sivulla on vastauksia kysytyimpiin kysymyksiin (englanniksi)."
                                },
                                help_recommendations: {
                                    title: "Suosituksia?",
                                    intro: "Tämän lomakkeen avulla voit lähettää meille ideoita ja ehdotuksia."
                                },
                                help_bugs: {
                                    title: "Ilmoita viasta",
                                    intro: "Kerro meille, jos ODM-laajennuksessa on vikoja tai ongelmia."
                                },
                                help_updates: {
                                    title: "Uutiset ja päivitykset",
                                    intro: "Julkaisemme yksityiskohtaista tietoa tärkeimmistä päivityksistämme blogissamme."
                                }
                            }
                        }
                    }
                },
                massdownloader: {
                    heading: "Linkkien erälataus",
                    step1: "1. Lähetä tiedosto linkkien kanssa",
                    step1Description: "Lataa linkkiluettelo napsauttamalla tai vetämällä ja pudottamalla tiedosto tälle alueelle",
                    step1SupportedFiles: "Tuetut luettelomuodot: .csv, .json, .xls, .xlsx, .txt, rivinvaihdolla",
                    step2: "2. Tai kirjoita linkit manuaalisesti",
                    step3: "3. Tarkastuksen tulos",
                    checkBtn: "Tarkista linkit",
                    downloadBtn: "Lataa",
                    allLinks: "Kaikki",
                    okLinks: "OK",
                    errorLinks: "Virheet",
                    linksListDeleteErrors: "Poista virheitä sisältävät linkit",
                    linksListDeleteDuplicated: "Poista linkkien kaksoiskappaleet"
                }
            }
        })
    },
    474: function (e, t, n) {
        "use strict";
        var i = n(272);
        n.n(i).a
    },
    475: function (e, t, n) {
        "use strict";
        var i = n(273);
        n.n(i).a
    },
    476: function (e, t, n) {
        "use strict";
        var i = n(274);
        n.n(i).a
    },
    478: function (e, t, n) {
        "use strict";
        var i = n(275);
        n.n(i).a
    },
    479: function (e, t, n) {
        "use strict";
        var i = n(276);
        n.n(i).a
    },
    480: function (e, t, n) {
        "use strict";
        var i = n(277);
        n.n(i).a
    },
    481: function (e, t, n) {
        "use strict";
        var i = n(278);
        n.n(i).a
    },
    482: function (e, t, n) {
        "use strict";
        var i = n(279);
        n.n(i).a
    },
    6: function (e, t, n) {
        "use strict";
        n.d(t, "c", (function () {
            return H
        })), n.d(t, "a", (function () {
            return O
        })), n.d(t, "r", (function () {
            return k
        })), n.d(t, "p", (function () {
            return C
        })), n.d(t, "j", (function () {
            return D
        })), n.d(t, "l", (function () {
            return E
        })), n.d(t, "m", (function () {
            return P
        })), n.d(t, "k", (function () {
            return A
        })), n.d(t, "s", (function () {
            return x
        })), n.d(t, "Q", (function () {
            return j
        })), n.d(t, "J", (function () {
            return z
        })), n.d(t, "o", (function () {
            return U
        })), n.d(t, "q", (function () {
            return V
        })), n.d(t, "B", (function () {
            return q
        })), n.d(t, "P", (function () {
            return K
        })), n.d(t, "h", (function () {
            return W
        })), n.d(t, "K", (function () {
            return Y
        })), n.d(t, "M", (function () {
            return G
        })), n.d(t, "n", (function () {
            return N
        })), n.d(t, "A", (function () {
            return Q
        })), n.d(t, "D", (function () {
            return M
        })), n.d(t, "S", (function () {
            return L
        })), n.d(t, "H", (function () {
            return J
        })), n.d(t, "O", (function () {
            return $
        })), n.d(t, "z", (function () {
            return X
        })), n.d(t, "y", (function () {
            return te
        })), n.d(t, "i", (function () {
            return ne
        })), n.d(t, "I", (function () {
            return R
        })), n.d(t, "v", (function () {
            return ie
        })), n.d(t, "G", (function () {
            return oe
        })), n.d(t, "w", (function () {
            return ae
        })), n.d(t, "F", (function () {
            return re
        })), n.d(t, "u", (function () {
            return I
        })), n.d(t, "C", (function () {
            return se
        })), n.d(t, "f", (function () {
            return le
        })), n.d(t, "b", (function () {
            return ce
        })), n.d(t, "t", (function () {
            return ue
        })), n.d(t, "L", (function () {
            return de
        })), n.d(t, "R", (function () {
            return T
        })), n.d(t, "N", (function () {
            return fe
        })), n.d(t, "e", (function () {
            return _e
        })), n.d(t, "x", (function () {
            return pe
        })), n.d(t, "g", (function () {
            return ge
        })), n.d(t, "E", (function () {
            return me
        })), n.d(t, "d", (function () {
            return he
        }));
        var i = n(40),
            o = n.n(i),
            a = n(1),
            s = n.n(a),
            l = (n(19), n(5)),
            c = n.n(l),
            u = n(14),
            d = n.n(u),
            f = n(13),
            _ = n.n(f),
            p = n(2),
            h = n(52),
            g = n.n(h),
            m = n(47),
            v = n.n(m);

        function b(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function y(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? b(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : b(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        String.prototype.replaceAt = function (e, t) {
            this.substr(0, e), this.substr(e + t.length)
        };
        var w = /[|&\/\\+":*?<>]/g,
            S = {
                "image/jpeg": "jpg",
                "image/jpg": "jpg",
                "image/png": "png",
                "image/gif": "gif",
                "image/webp": "webp",
                "image/flif": "flif",
                "image/svg+xml": "svg",
                "image/svg": "svg",
                "image/x-canon-cr2": "cr2",
                "image/tiff": "tif",
                "image/bmp": "bmp",
                "image/vnd.ms-photo": "jxr",
                "image/vnd.adobe.photoshop": "psd"
            },
            O = function (e) {
                var t = e.id;
                _.a.downloads.acceptDanger(t)
            },
            k = function (e) {
                var t = e.id;
                _.a.downloads.resume(t)
            },
            C = function (e) {
                var t = e.id;
                _.a.downloads.pause(t)
            },
            D = function (e) {
                var t = e.id;
                _.a.downloads.cancel(t)
            },
            E = function (e) {
                var t = e.id;
                _.a.downloads.erase({
                    id: t
                })
            },
            P = function () {
                _.a.downloads.erase({})
            },
            A = function () {
                var e = d()(c.a.mark((function e(t) {
                    var n;
                    return c.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return n = t.id, e.next = 3, _.a.downloads.removeFile(n);
                            case 3:
                                return e.next = 5, _.a.downloads.erase({
                                    id: n
                                });
                            case 5:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(),
            x = function (e) {
                var t = e.finalUrl,
                    n = e.url;
                _.a.downloads.download({
                    url: t || n,
                    saveAs: !1,
                    conflictAction: "uniquify"
                })
            },
            T = function (e) {
                return new Promise((function (t, n) {
                    g.a.getBinaryContent(e, (function (e, i) {
                        e ? n(e) : t(i)
                    }))
                }))
            },
            M = function () {
                var e = d()(c.a.mark((function e(t) {
                    var n, i, o, a, r, s, l, u, d, f, _ = arguments;
                    return c.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return n = _.length > 1 && void 0 !== _[1] ? _[1] : "image", i = "", o = "", e.next = 5, T(t);
                            case 5:
                                return a = e.sent, r = a.byteLength, s = I(r), 0 === t.indexOf("http") ? (l = new URL(t).pathname.split("/"), u = l[l.length - 1].split("."), d = v()(a), i = u.slice(0, -1).join(".") || n, o = d && "xml" !== d.ext ? d.ext : u.splice(-1, 1)[0]) : -1 !== t.indexOf("data:") && (f = t.split(",")[0].split(";")[0].split(":")[1], i = n, o = S[f] || v()(a).ext), e.abrupt("return", {
                                    name: i,
                                    ext: o,
                                    size: r,
                                    formattedSize: s
                                });
                            case 10:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(),
            I = function (e) {
                if (Math.abs(e) < 1024) return e + " B";
                var t = ["kB", "MB", "GB"],
                    n = -1;
                do {
                    e /= 1024, ++n
                } while (Math.abs(e) >= 1024 && n < t.length - 1);
                return e.toFixed(1) + " " + t[n]
            },
            L = function (e, t) {
                var n = t.condition,
                    i = t.startPoint,
                    o = t.endPoint;
                if (!i) return !0;
                switch (e = +e, i = +i, o = +o, n) {
                    case "all":
                        return !0;
                    case ">":
                        return e > i;
                    case "=":
                        return e === i;
                    case "<":
                        return e < i;
                    case ">=":
                        return e >= i;
                    case "<=":
                        return e <= i;
                    case "between":
                        return e >= i && e <= o;
                    default:
                        return !1
                }
            },
            j = function (e) {
                var t = e.id;
                _.a.downloads.show(t)
            },
            R = function (e) {
                var t = Math.floor(e / 60),
                    n = e % 60;
                return n = n < 10 ? "0" + n : n, "".concat(t = t < 10 ? "0" + t : t, ":").concat(n)
            },
            z = function (e) {
                var t = e.id;
                _.a.downloads.open(t).catch((function (e) {}))
            },
            B = function (e) {
                var t = Math.floor(Math.log(e) / Math.log(1024));
                return 1 * (e / Math.pow(1024, t)).toFixed(2) + " " + ["B", "kB", "MB", "GB", "TB"][t]
            },
            F = function (e) {
                var t = -1,
                    n = e;
                do {
                    n /= 1024, t += 1
                } while (n > 1024);
                return "".concat(n.toFixed(), " ").concat(e >= 1024 ? ["KB", "Mb", "Gb"][t] : "B")
            },
            N = function (e, t) {
                return e ? B(e) : F(t)
            },
            U = function (e, t, n, i) {
                var o = Math.abs((new Date(e) - new Date) / 1e3),
                    a = "".concat(o && n ? B((n - i) / o) : F(i), "/s"),
                    r = B(n || i);
                return "".concat(a, " – ").concat(B(i), " of ").concat(r, ", ").concat(o ? function (e) {
                    return e < 60 ? "".concat(Math.ceil(e), " s") : e < 300 ? "".concat(Math.floor(e / 60), " m ").concat(Math.ceil(e % 60), " s") : e < 3600 ? "".concat(Math.ceil(e / 60), " m") : e < 18e3 ? "".concat(Math.floor(e / 60 / 60), " h ").concat(Math.ceil(e / 60) % 60, " mins") : e < 86400 ? "".concat(Math.ceil(e / 60 / 60), " h") : "".concat(Math.ceil(e / 60 / 60 / 24), " d")
                }(o) : "∞")
            },
            V = function (e, t) {
                return e && t ? Math.floor(100 * t / e) : 0
            },
            H = function (e, t) {
                var n = !1,
                    i = {
                        finished: function (e) {
                            var t = e.exists,
                                n = e.state;
                            return t && "complete" === n
                        },
                        deleted: function (e) {
                            var t = e.exists,
                                n = e.state;
                            return !t && "complete" === n
                        },
                        canceled: function (e) {
                            var t = e.error;
                            return "interrupted" === e.state && "USER_CANCELED" === t
                        },
                        error: function (e) {
                            var t = e.error,
                                n = void 0 === t ? null : t;
                            return "interrupted" === e.state && Object.prototype.hasOwnProperty.call(p.e, n) && "USER_CANCELED" !== n
                        },
                        paused: function (e) {
                            var t = e.exists,
                                n = e.paused,
                                i = e.canResume;
                            return t && n && i
                        },
                        progress: function (e) {
                            var t = e.exists,
                                n = e.paused,
                                i = e.state;
                            return t && !n && "in_progress" === i
                        }
                    };
                return t.forEach((function (t) {
                    if (i[t](e)) return n = !0, !1
                })), n
            },
            q = function () {
                var e = d()(c.a.mark((function e(t) {
                    var n, i;
                    return c.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return n = t.id, e.prev = 1, e.next = 4, _.a.downloads.getFileIcon(n, {
                                    size: 32
                                });
                            case 4:
                                return i = e.sent, e.abrupt("return", i);
                            case 8:
                                e.prev = 8, e.t0 = e.catch(1);
                            case 10:
                            case "end":
                                return e.stop()
                        }
                    }), e, null, [
                        [1, 8]
                    ])
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(),
            K = function (e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                _.a.browserAction && ((e = +e) ? (_.a.browserAction.setIcon({
                    tabId: e,
                    path: _.a.extension.getURL(t)
                }), null !== n && _.a.browserAction.setBadgeText({
                    tabId: e,
                    text: n.toString()
                })) : (_.a.browserAction.setIcon({
                    path: _.a.extension.getURL(t)
                }), null !== n && _.a.browserAction.setBadgeText({
                    text: n.toString()
                })))
            },
            W = function () {
                var e = d()(c.a.mark((function e() {
                    var t, n, i, o, a, r, s, l, u, d, f = arguments;
                    return c.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                for (t = f.length, n = new Array(t), i = 0; i < t; i++) n[i] = f[i];
                                return o = n[0], a = n[1], r = n[2], s = n[3], l = n[4], u = y(y({
                                    type: "basic",
                                    priority: 2,
                                    iconUrl: _.a.extension.getURL("icons/".concat(o, "_manager-48.png")),
                                    title: _.a.i18n.getMessage(r),
                                    message: "".concat(a.substring(a.lastIndexOf("/") + 1), " ").concat(_.a.i18n.getMessage(s))
                                }, "complete" === o && {
                                    buttons: [{
                                        title: _.a.i18n.getMessage("notificationButtonOneText")
                                    }, {
                                        title: _.a.i18n.getMessage("notificationButtonTwoText")
                                    }]
                                }), "infinity" === l ? {
                                    requireInteraction: !0
                                } : {
                                    eventTime: Date.now() + parseInt(l, 10)
                                }), d = "dm_notification_" + Date.now(), e.next = 6, _.a.notifications.create(d, u);
                            case 6:
                                "infinity" !== l && setTimeout((function () {
                                    _.a.notifications.clear(d)
                                }), 1e3 * parseInt(l));
                            case 7:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function () {
                    return e.apply(this, arguments)
                }
            }(),
            G = function (e, t) {
                try {
                    e.volume = parseInt(t, 10) / 100, e.play()
                } catch (e) {}
            },
            Y = function () {
                _.a.runtime.openOptionsPage()
            },
            Q = function (e) {
                return e.slice(2 + (e.lastIndexOf(".") - 1 >>> 0))
            },
            J = function () {
                var e = d()(c.a.mark((function e() {
                    var t;
                    return c.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, _.a.storage.local.get("@@vwe-persistence");
                            case 2:
                                return t = e.sent, e.abrupt("return", t["@@vwe-persistence"] ? t["@@vwe-persistence"] : {});
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function () {
                    return e.apply(this, arguments)
                }
            }(),
            $ = function (e, t, n) {
                var i = n || {},
                    o = i.expires;
                if ("number" == typeof o && o) {
                    var a = new Date;
                    a.setTime(a.getTime() + 1e3 * o), o = i.expires = a
                }
                o && o.toUTCString && (i.expires = o.toUTCString());
                var r = e + "=" + encodeURIComponent(t);
                for (var s in i) {
                    r += "; ".concat(s);
                    var l = i[s];
                    !0 !== l && (r += "=".concat(l))
                }
                document.cookie = r
            },
            X = function (e) {
                var t = ("; " + document.cookie).split("; " + e + "=");
                if (2 == t.length) return t.pop().split(";").shift()
            },
            Z = function (e) {
                return 9 == e || 10 == e || 11 == e || 12 == e || 13 == e || 32 == e || 133 == e || 160 == e || 5760 == e || e >= 8192 && e <= 8202 || 8232 == e || 8233 == e || 8239 == e || 8287 == e || 8232 == e || 12288 == e || 6158 == e || 8203 == e || 8204 == e || 8205 == e || 8288 == e || 65279 == e
            },
            ee = function (e) {
                e && "." == e[0] && (e = e.replaceAt(0, "_"));
                for (var t = (e = e.replace(/quot;/g, '"').replace(/<em>/g, "").replace(/<\/em>/g, "").replace("&amp;", "&")).split(""), n = 0; n < t.length; n++) {
                    var i = t[n].charCodeAt(0);
                    (Z(i) || 173 == i) && (t[n] = " ")
                }
                return t.join("").replace(w, "").trim()
            },
            te = function (e) {
                var t, n = {};
                n.album = ee(e.album), n.artist = ee(e.artist), n.title = ee(e.name);
                var i = n.artist.trim() + " - " + n.title.trim() + ".mp3";
                return (i = i.replace(/^ +/, "")) || (i = "Unnamed.mp3"), n.album ? (n.album.endsWith(".") && (n.album = n.album.substring(0, n.album.length - 1)), t = sanitizePathString(n.album) + "/" + i) : t = i, t
            },
            ne = {
                r: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMN0PQRSTUVWXYZO123456789+/=",
                vkId: 0,
                getRealLink: function (e) {
                    if (~e.indexOf("audio_api_unavailable")) {
                        var t = e.split("?extra=")[1].split("#"),
                            n = "" === t[1] ? "" : this.a(t[1]);
                        if (t = this.a(t[0]), "string" != typeof n || !t) return e;
                        for (var i, o, a = (n = n ? n.split(String.fromCharCode(9)) : []).length; a--;) {
                            if (i = (o = n[a].split(String.fromCharCode(11))).splice(0, 1, t)[0], !this.decodeUrl[i]) return e;
                            t = this.decodeUrl[i].apply(null, o)
                        }
                        if (t && "http" === t.substr(0, 4)) return t
                    }
                    return e
                },
                a: function (e) {
                    if (!e || e.length % 4 == 1) return !1;
                    for (var t, n, i = 0, o = 0, a = ""; n = e.charAt(o++);) ~(n = this.r.indexOf(n)) && (t = i % 4 ? 64 * t + n : n, i++ % 4) && (a += String.fromCharCode(255 & t >> (-2 * i & 6)));
                    return a
                },
                s: function (e, t) {
                    var n = e.length,
                        i = [];
                    if (n) {
                        var o = n;
                        for (t = Math.abs(t); o--;) i[o] = (t += t * (o + n) / t) % n | 0
                    }
                    return i
                },
                decodeUrl: {
                    v: function (e) {
                        return e.split("").reverse().join("")
                    },
                    r: function (e) {
                        function t(t, n) {
                            return e.apply(this, arguments)
                        }
                        return t.toString = function () {
                            return e.toString()
                        }, t
                    }((function (e, t) {
                        e = e.split("");
                        for (var n, i = r + r, o = e.length; o--;) ~(n = i.indexOf(e[o])) && (e[o] = i.substr(n - t, 1));
                        return e.join("")
                    })),
                    s: function (e, t) {
                        var n = e.length;
                        if (n) {
                            var i = function (e, t) {
                                    var n = e.length,
                                        i = [];
                                    if (n) {
                                        var o = n;
                                        for (t = Math.abs(t); o--;) t = (n * (o + 1) ^ t + o) % n, i[o] = t
                                    }
                                    return i
                                }(e, t),
                                o = 0;
                            for (e = e.split(""); ++o < n;) e[o] = e.splice(i[n - 1 - o], 1, e[o])[0];
                            e = e.join("")
                        }
                        return e
                    },
                    x: function (e, t) {
                        var n = [];
                        return t = t.charCodeAt(0), each(e.split(""), (function (e, i) {
                            n.push(String.fromCharCode(i.charCodeAt(0) ^ t))
                        })), n.join("")
                    },
                    i: function (e, t) {
                        return ne.decodeUrl.s(e, t ^ ne.vkId)
                    }
                }
            },
            ie = function () {
                return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (function (e) {
                    return (e ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> e / 4).toString(16)
                }))
            },
            oe = function (e) {
                var t = new URL(e).hostname;
                return t.includes("facebook.com") ? p.g.fb : t.includes("vk.com") ? p.g.vk : t.includes("twitter.com") ? p.g.tw : t.includes("instagram.com") ? p.g.ig : t.includes("tiktok.com") ? p.g.tt : t.includes("coub.com") ? p.g.cb : t.includes("download-manager.online") ? p.g.odm : t.includes("vimeo.com") ? p.n.vm : t.includes("dailymotion.com") ? p.n.dm : t.includes("smule.com") ? p.n.sm : t.includes("linkedin.com") ? p.n.in : t.includes("soundcloud.com") ? p.n.sc : t.includes("wistia") ? p.n.wi : t.includes("bilibili") ? p.n.bi : t.includes("rezka.ag") ? p.n.hr : t.includes("web.de") ? p.n.wd : t.includes("nytimes.com") ? p.n.nt : t.includes("youku.com") ? p.n.yk : t.includes("radiojavan.com") ? p.n.rj : t.includes("veoh.com") ? p.n.vh : t.includes("hdrezka.ag") ? p.n.hr : t.includes("vidmax.com") ? p.n.vdm : t.includes("gfycat.com") ? p.n.gfc : t.includes("pornhub.com") || t.includes("pornhubpremium.com") ? p.n.ph : t.includes("xnxx.com") ? p.n.xn : t.includes("xhamster") ? p.n.xh : t.includes("youporn.com") ? p.n.yp : t.includes("xvideos.com") ? p.n.xv : t.includes("tube8.com") ? p.n.t8 : t.includes("sxyprn.com") ? p.n.sx : t.includes("download-manager.online") ? "ODM" : t
            },
            ae = function () {
                return Math.random().toString(36).substring(2) + (new Date).getTime().toString(36)
            },
            re = function (e) {
                var t = e.split("?", 1)[0].split("/");
                return (t.length > 0 ? t[t.length - 1] : "unknown").split(".").slice(0, -1).join(".")
            },
            se = function (e) {
                return new Promise((function (t) {
                    var n = new XMLHttpRequest;
                    n.open("HEAD", e, !0), n.send(null);
                    var i = null;
                    n.onreadystatechange = function () {
                        if (this.readyState == this.DONE && 200 === this.status) return i = n.getResponseHeader("content-length") || n.getResponseHeader("Content-Length"), t({
                            size: i,
                            formatted_size: I(i)
                        })
                    }
                }))
            },
            le = function e(t) {
                var n = {};
                for (var i in t) null != t[i] && "object" == o()(t[i]) && "0" === Object.keys(t[i])[0] ? n[i] = Object.keys(t[i]).map((function (e) {
                    return t[i][e]
                })) : null != t[i] && "object" == o()(t[i]) ? n[i] = e(t[i]) : n[i] = t[i];
                return n
            },
            ce = function (e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "json";
                return new Promise((function (i) {
                    fetch(e, t).then((function (e) {
                        return "json" === n ? e.json() : e.text()
                    })).then((function (e) {
                        i(e)
                    }))
                }))
            },
            ue = function (e, t) {
                for (var n = -1, i = 0; i < e.length; i++)
                    if (e[i].url === t) {
                        n = i;
                        break
                    } return n
            },
            de = function (e) {
                for (var t = {}, n = ("?" === e[0] ? e.substr(1) : e).split("&"), i = 0; i < n.length; i++) {
                    var o = n[i].split("=");
                    t[decodeURIComponent(o[0])] = decodeURIComponent(o[1] || "")
                }
                return t
            },
            fe = function () {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "file",
                    t = arguments.length > 1 ? arguments[1] : void 0,
                    n = e.length > 60 ? e.slice(0, 60) : e;
                return 0 !== (n = n.replace(/[\r\n]/gi, "-").replace(/[\s\-]+/gi, "-").replace(/\./g, "").replace(/\,/g, "").replace(/\#/g, "").replace(/\//g, "").replace(/\//g, "").replace(/([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g, "").replace(/([#0-9]\u20E3)|[\xA9\xAE\u203C\u2047-\u2049\u2122\u2139\u3030\u303D\u3297\u3299][\uFE00-\uFEFF]?|[\u2190-\u21FF][\uFE00-\uFEFF]?|[\u2300-\u23FF][\uFE00-\uFEFF]?|[\u2460-\u24FF][\uFE00-\uFEFF]?|[\u25A0-\u25FF][\uFE00-\uFEFF]?|[\u2600-\u27BF][\uFE00-\uFEFF]?|[\u2900-\u297F][\uFE00-\uFEFF]?|[\u2B00-\u2BF0][\uFE00-\uFEFF]?|(?:\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDEFF])[\uFE00-\uFEFF]?/g, "").replace(/([\uE000-\uF8FF]|\uD83C[\uDF00-\uDFFF]|\uD83D[\uDC00-\uDDFF])/g, "").replace(/\s+/g, "")).length && /\/(.|[\r\n])*/.test("/".concat(n)) || (n = "".concat(t, "-file")), (n = "odm-".concat(n)).toLowerCase()
            },
            _e = function () {
                return new Promise((function (e) {
                    var t = setInterval((function () {
                        console.log("try to connect"), window.window.__ODM_STORE_CONNECTED && (e(!0), clearInterval(t))
                    }), 100)
                }))
            },
            pe = function (e, t) {
                return Math.round(e / 1e6 / (t / 60 * .0075))
            },
            he = function (e) {
                return new Promise((function (t) {
                    var n, i = new URL(e).pathname.split("/"),
                        o = i[i.length - 1].split("."),
                        a = {
                            url: e,
                            status: "error",
                            errorDescription: "",
                            size: null,
                            formattedSize: null,
                            name: o[0] || i[0],
                            category: "Other",
                            ext: null
                        };
                    n = e, new RegExp("^(http[s]?:\\/\\/(www\\.)?|ftp:\\/\\/(www\\.)?|www\\.){1}([0-9A-Za-z-\\.@:%_+~#=]+)+((\\.[a-zA-Z]{2,3})+)(/(.)*)?(\\?(.)*)?").test(n) || t(y(y({}, a), {}, {
                        errorDescription: "invalid_url"
                    })), a.ext = e.match(/\.([^\./\?\#]+)($|\?|\#)/) && e.match(/\.([^\./\?\#]+)($|\?|\#)/)[1] || "";
                    var r = p.f.find((function (e) {
                        return e.extensions.includes(a.ext)
                    }));
                    a.fileType = r && r.type || "Other";
                    var s = new XMLHttpRequest;
                    s.open("HEAD", e, !0), s.send(null);
                    var l = null,
                        c = e.match(/\.([^\./\?\#]+)($|\?|\#)/) && e.match(/\.([^\./\?\#]+)($|\?|\#)/)[1],
                        u = setTimeout((function () {
                            t(y(y({}, a), {}, {
                                ext: c,
                                category: r && r.type || "Other",
                                status: "error",
                                errorDescription: "network_error_410"
                            }))
                        }), 2e3);
                    s.onreadystatechange = function () {
                        if (clearTimeout(u), this.readyState == this.DONE) return 200 === this.status ? (l = s.getResponseHeader("content-length") || s.getResponseHeader("Content-Length"), c || (c = s.getResponseHeader("content-type") && s.getResponseHeader("content-type").split("/")[1] || s.getResponseHeader("Content-Type") && s.getResponseHeader("Content-Type").split("/")[1]), -1 !== c.indexOf("html") && (c = "html"), t(y(y({}, a), {}, {
                            status: "success",
                            ext: c,
                            category: r && r.type || "Other",
                            size: l,
                            formattedSize: I(l)
                        }))) : t(y(y({}, a), {}, {
                            ext: c,
                            category: r && r.type || "Other",
                            status: "error",
                            errorDescription: "network_error_".concat(this.status)
                        }))
                    }
                }))
            },
            ge = function () {
                var e = d()(c.a.mark((function e(t) {
                    var n, i, o;
                    return c.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                for (n = t.split("\n"), i = [], o = 0; o < n.length; ++o) n[o].length > 0 && i.push(he(n[o].replace(" ", "")));
                                return e.next = 5, Promise.all(i);
                            case 5:
                                return e.abrupt("return", e.sent);
                            case 6:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(),
            me = function (e) {
                for (var t = {
                        dublicateLinksCnt: 0,
                        errorLinksCnt: 0,
                        successLinksCnt: 0,
                        categories: {},
                        approximateSize: 0
                    }, n = [], i = 0; i < e.length; i++) - 1 === n.indexOf(e[i].url) ? n.push(e[i].url) : t.dublicateLinksCnt += 1, "error" === e[i].status ? t.errorLinksCnt += 1 : "success" === e[i].status && (t.successLinksCnt += 1, t.approximateSize += +e[i].size), t.categories[e[i].category] ? t.categories[e[i].category] += 1 : t.categories[e[i].category] = 1;
                return t
            }
    },
    754: function (e, t, n) {
        "use strict";
        n.r(t);
        var i = n(32),
            o = n(55),
            a = n(46),
            r = n(1),
            s = n.n(r),
            l = n(19),
            c = n.n(l),
            u = n(51),
            d = n.n(u),
            f = n(18),
            _ = n(113),
            p = n.n(_),
            h = {
                name: "RangeFilter",
                props: {
                    filterName: {
                        type: String,
                        required: !0
                    },
                    placeholder: {
                        type: String,
                        required: !0
                    },
                    step: {
                        type: Number,
                        required: !0
                    },
                    maxFileSize: {
                        type: Number
                    }
                },
                data: function () {
                    return {
                        isActive: !1,
                        filterCondition: "all",
                        startPoint: null,
                        endPoint: 0,
                        rangeInputTarget: "startPoint",
                        rangeInputVal: 0
                    }
                },
                computed: {
                    isWidthFilter: function () {
                        return "all" !== this.filterCondition
                    },
                    isRangeInput: function () {
                        return "all" !== this.filterCondition && "size" === this.filterName
                    }
                },
                methods: {
                    handleFilterChange: function () {
                        this.$emit("filter-change", {
                            name: this.filterName,
                            condition: this.filterCondition,
                            startPoint: this.startPoint,
                            endPoint: this.endPoint
                        });
                        var e = this.rangeInputTarget;
                        this.rangeInputVal = (this[e] * Math.pow(1024, 2)).toFixed(6)
                    },
                    handleRangeInput: function (e) {
                        var t = (this.rangeInputVal / Math.pow(1024, 2)).toFixed(6);
                        "startPoint" === this.rangeInputTarget ? this.startPoint = t : this.endPoint = t, this.handleFilterChange()
                    },
                    setRangeInputTarget: function (e) {
                        this.rangeInputTarget = e, this.rangeInputVal = (this[e] * Math.pow(1024, 2)).toFixed(6)
                    }
                }
            },
            g = (n(474), n(22)),
            m = Object(g.a)(h, (function () {
                var e = this,
                    t = e.$createElement,
                    n = e._self._c || t;
                return n("div", {
                    staticClass: "range_filter sliderRange_wrap"
                }, [n("div", {
                    staticClass: "wrap"
                }, [n("select", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.filterCondition,
                        expression: "filterCondition"
                    }],
                    attrs: {
                        name: "equal"
                    },
                    on: {
                        change: [function (t) {
                            var n = Array.prototype.filter.call(t.target.options, (function (e) {
                                return e.selected
                            })).map((function (e) {
                                return "_value" in e ? e._value : e.value
                            }));
                            e.filterCondition = t.target.multiple ? n : n[0]
                        }, e.handleFilterChange]
                    }
                }, [n("option", {
                    attrs: {
                        value: "all"
                    }
                }, [e._v("All")]), e._v(" "), n("option", {
                    attrs: {
                        value: "="
                    }
                }, [e._v("=")]), e._v(" "), n("option", {
                    attrs: {
                        value: ">"
                    }
                }, [e._v(">")]), e._v(" "), n("option", {
                    attrs: {
                        value: "<"
                    }
                }, [e._v("<")]), e._v(" "), n("option", {
                    attrs: {
                        value: ">="
                    }
                }, [e._v(">=")]), e._v(" "), n("option", {
                    attrs: {
                        value: "<="
                    }
                }, [e._v("<=")]), e._v(" "), n("option", {
                    attrs: {
                        value: "between"
                    }
                }, [e._v("Between")])]), e._v(" "), "all" !== e.filterCondition ? n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.startPoint,
                        expression: "startPoint"
                    }],
                    attrs: {
                        placeholder: e.placeholder,
                        step: e.step,
                        type: "number",
                        min: "0"
                    },
                    domProps: {
                        value: e.startPoint
                    },
                    on: {
                        input: [function (t) {
                            t.target.composing || (e.startPoint = t.target.value)
                        }, e.handleFilterChange],
                        focus: function () {
                            return e.setRangeInputTarget("startPoint")
                        }
                    }
                }) : e._e(), e._v(" "), "between" === e.filterCondition ? n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.endPoint,
                        expression: "endPoint"
                    }],
                    attrs: {
                        placeholder: e.placeholder,
                        step: e.step,
                        type: "number",
                        min: e.step
                    },
                    domProps: {
                        value: e.endPoint
                    },
                    on: {
                        input: [function (t) {
                            t.target.composing || (e.endPoint = t.target.value)
                        }, e.handleFilterChange],
                        focus: function () {
                            return e.setRangeInputTarget("endPoint")
                        }
                    }
                }) : e._e()]), e._v(" "), e.isRangeInput ? n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.rangeInputVal,
                        expression: "rangeInputVal"
                    }],
                    attrs: {
                        step: "1",
                        max: e.maxFileSize,
                        min: "0",
                        type: "range"
                    },
                    domProps: {
                        value: e.rangeInputVal
                    },
                    on: {
                        change: e.handleRangeInput,
                        __r: function (t) {
                            e.rangeInputVal = t.target.value
                        }
                    }
                }) : e._e()])
            }), [], !1, null, "41928c06", null).exports;

        function v(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function b(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? v(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : v(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var y = {
                width: {
                    condition: null,
                    startPoint: null,
                    endPoint: null
                },
                height: {
                    condition: null,
                    startPoint: null,
                    endPoint: null
                },
                size: {
                    condition: null,
                    startPoint: null,
                    endPoint: null
                }
            },
            w = b({
                sortCondition: "default",
                extensions: []
            }, y),
            S = {
                name: "ImagesFilter",
                components: {
                    Multiselect: p.a,
                    RangeFilter: m
                },
                props: {
                    maxFileSize: {
                        type: Number,
                        required: !0
                    },
                    availableExtProp: {
                        type: Array,
                        required: !0
                    }
                },
                data: function () {
                    return {
                        isFiltersShowing: !1,
                        isSizeFilterShowing: !1,
                        isExtensionsFilterShowing: !1,
                        rangeFilters: [{
                            label: "Width",
                            name: "width",
                            placeholder: "px"
                        }, {
                            label: "Height",
                            name: "height",
                            placeholder: "px"
                        }, {
                            label: "Size",
                            name: "size",
                            placeholder: "Mb",
                            step: .001
                        }],
                        filterValues: b({}, w)
                    }
                },
                computed: {
                    isWidthFilter: function () {
                        return this.widthFilter && "all" !== this.widthFilter
                    },
                    isHeightFilter: function () {
                        return this.heightFilter && "all" !== this.heightFilter
                    },
                    availableExt: function () {
                        return this.availableExtProp
                    }
                },
                watch: {
                    isFiltersShowing: function (e) {
                        e || (this.filterValues = b({}, w), this.isSizeFilterShowing = !1, this.isExtensionsFilterShowing = !1, this.$emit("filter-files", this.filterValues))
                    },
                    isSizeFilterShowing: function (e) {
                        e || (this.filterValues = b(b({}, this.filterValues), y), this.$emit("filter-files", this.filterValues))
                    },
                    isExtensionsFilterShowing: function (e) {
                        e || (this.filterValues = b(b({}, this.filterValues), {}, {
                            extensions: []
                        }), this.$emit("filter-files", this.filterValues))
                    }
                },
                mounted: function () {
                    this.filterValues.extensions = c()(this.availableExt)
                },
                methods: {
                    addFileExtension: function (e) {
                        this.filterValues.extensions.push(e), this.handleFilterChange({
                            name: "extensions",
                            extensions: c()(this.filterValues.extensions)
                        })
                    },
                    removeFileExtension: function (e) {
                        var t = c()(this.filterValues.extensions),
                            n = t.indexOf(e);
                        n > -1 && t.splice(n, 1), this.filterValues.extensions = c()(t), this.handleFilterChange({
                            name: "extensions",
                            extensions: t
                        })
                    },
                    handleFilterChange: function (e) {
                        switch (e.name) {
                            case "extensions":
                                this.filterValues.extensions = e.extensions;
                                break;
                            case "size":
                                e.startPoint = this.convertToBites(e.startPoint), e.endPoint = this.convertToBites(e.endPoint), this.filterValues[e.name] = b({}, e);
                                break;
                            default:
                                this.filterValues[e.name] = b({}, e)
                        }
                        this.$emit("filter-files", this.filterValues)
                    },
                    convertToBites: function (e) {
                        return e ? 1 * (e * Math.pow(1024, 2)).toFixed(2) : null
                    }
                }
            },
            O = (n(475), n(476), Object(g.a)(S, (function () {
                var e = this,
                    t = e.$createElement,
                    n = e._self._c || t;
                return n("div", {
                    staticClass: "filters_wrap"
                }, [n("div", {
                    staticClass: "filters"
                }, [n("label", {
                    staticClass: "label",
                    attrs: {
                        for: "showFilters"
                    }
                }, [e._v("Show filters:")]), e._v(" "), n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.isFiltersShowing,
                        expression: "isFiltersShowing"
                    }],
                    attrs: {
                        type: "checkbox",
                        id: "showFilters"
                    },
                    domProps: {
                        checked: Array.isArray(e.isFiltersShowing) ? e._i(e.isFiltersShowing, null) > -1 : e.isFiltersShowing
                    },
                    on: {
                        change: function (t) {
                            var n = e.isFiltersShowing,
                                i = t.target,
                                o = !!i.checked;
                            if (Array.isArray(n)) {
                                var a = e._i(n, null);
                                i.checked ? a < 0 && (e.isFiltersShowing = n.concat([null])) : a > -1 && (e.isFiltersShowing = n.slice(0, a).concat(n.slice(a + 1)))
                            } else e.isFiltersShowing = o
                        }
                    }
                })]), e._v(" "), n("ul", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.isFiltersShowing,
                        expression: "isFiltersShowing"
                    }],
                    staticClass: "filters"
                }, [n("li", [n("label", {
                    staticClass: "label",
                    attrs: {
                        for: "sortBy"
                    }
                }, [e._v("Sort by:")]), e._v(" "), n("select", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.filterValues.sortCondition,
                        expression: "filterValues.sortCondition"
                    }],
                    attrs: {
                        id: "sortBy"
                    },
                    on: {
                        change: [function (t) {
                            var n = Array.prototype.filter.call(t.target.options, (function (e) {
                                return e.selected
                            })).map((function (e) {
                                return "_value" in e ? e._value : e.value
                            }));
                            e.$set(e.filterValues, "sortCondition", t.target.multiple ? n : n[0])
                        }, e.handleFilterChange]
                    }
                }, [n("option", {
                    attrs: {
                        value: "default"
                    }
                }, [e._v("Default")]), e._v(" "), n("option", {
                    attrs: {
                        value: "url"
                    }
                }, [e._v("Url")]), e._v(" "), n("option", {
                    attrs: {
                        value: "name"
                    }
                }, [e._v("Name")]), e._v(" "), n("option", {
                    attrs: {
                        value: "ext"
                    }
                }, [e._v("Extensions")]), e._v(" "), n("option", {
                    attrs: {
                        value: "width"
                    }
                }, [e._v("Width")]), e._v(" "), n("option", {
                    attrs: {
                        value: "height"
                    }
                }, [e._v("Height")]), e._v(" "), n("option", {
                    attrs: {
                        value: "size"
                    }
                }, [e._v("Size")])])]), e._v(" "), n("li", [n("div", [n("label", {
                    staticClass: "label",
                    attrs: {
                        for: "sizeSelect"
                    }
                }, [e._v("Size:")]), e._v(" "), n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.isSizeFilterShowing,
                        expression: "isSizeFilterShowing"
                    }],
                    attrs: {
                        type: "checkbox",
                        id: "sizeSelect"
                    },
                    domProps: {
                        checked: Array.isArray(e.isSizeFilterShowing) ? e._i(e.isSizeFilterShowing, null) > -1 : e.isSizeFilterShowing
                    },
                    on: {
                        change: function (t) {
                            var n = e.isSizeFilterShowing,
                                i = t.target,
                                o = !!i.checked;
                            if (Array.isArray(n)) {
                                var a = e._i(n, null);
                                i.checked ? a < 0 && (e.isSizeFilterShowing = n.concat([null])) : a > -1 && (e.isSizeFilterShowing = n.slice(0, a).concat(n.slice(a + 1)))
                            } else e.isSizeFilterShowing = o
                        }
                    }
                })]), e._v(" "), e.isSizeFilterShowing ? n("ul", {
                    staticClass: "size_filter_list"
                }, e._l(e.rangeFilters, (function (t, i) {
                    return n("li", {
                        key: i
                    }, [n("label", {
                        staticClass: "label"
                    }, [e._v(e._s(t.label) + ":")]), e._v(" "), n("RangeFilter", {
                        attrs: {
                            filterName: t.name,
                            placeholder: t.placeholder,
                            step: t.step || 1,
                            maxFileSize: e.maxFileSize
                        },
                        on: {
                            "filter-change": e.handleFilterChange
                        }
                    })], 1)
                })), 0) : e._e()]), e._v(" "), n("li", [n("div", [n("label", {
                    staticClass: "label",
                    attrs: {
                        for: "filterByExt"
                    }
                }, [e._v("Extensions:")]), e._v(" "), n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.isExtensionsFilterShowing,
                        expression: "isExtensionsFilterShowing"
                    }],
                    attrs: {
                        type: "checkbox",
                        id: "filterByExt"
                    },
                    domProps: {
                        checked: Array.isArray(e.isExtensionsFilterShowing) ? e._i(e.isExtensionsFilterShowing, null) > -1 : e.isExtensionsFilterShowing
                    },
                    on: {
                        change: function (t) {
                            var n = e.isExtensionsFilterShowing,
                                i = t.target,
                                o = !!i.checked;
                            if (Array.isArray(n)) {
                                var a = e._i(n, null);
                                i.checked ? a < 0 && (e.isExtensionsFilterShowing = n.concat([null])) : a > -1 && (e.isExtensionsFilterShowing = n.slice(0, a).concat(n.slice(a + 1)))
                            } else e.isExtensionsFilterShowing = o
                        }
                    }
                })]), e._v(" "), e.isExtensionsFilterShowing ? n("Multiselect", {
                    attrs: {
                        value: e.filterValues.extensions,
                        options: e.availableExt,
                        multiple: !0,
                        taggable: !0,
                        placeholder: "Type to search"
                    },
                    on: {
                        select: e.addFileExtension,
                        tag: e.addFileExtension,
                        remove: e.removeFileExtension
                    }
                }) : e._e()], 1)])])
            }), [], !1, null, "acff3586", null).exports),
            k = n(5),
            C = n.n(k),
            D = n(14),
            E = n.n(D),
            P = n(434),
            A = n.n(P),
            x = (n(477), n(15)),
            T = n(2);

        function M(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function I(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? M(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : M(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var L = {
                name: "DownloadImageItem",
                components: {
                    Loading: A.a,
                    DownloadImageBtnIcon: x.t,
                    CopyImageLinkBtnIcon: x.i,
                    OpenImageLinkBtnIcon: x.O
                },
                props: {
                    currentTabId: {
                        type: Number,
                        required: !0
                    },
                    image_id: {
                        type: String,
                        required: !0
                    },
                    isImageSelected: {
                        type: Boolean,
                        required: !0
                    }
                },
                data: function () {
                    return {
                        image: {},
                        isImageReady: !1,
                        tooltipShowing: !1,
                        isNameBeingEdited: !1,
                        tempImageName: this.imageName
                    }
                },
                computed: I(I({}, Object(f.c)({
                    getImage: "ormDB/images/find",
                    locale: "options/getLocale"
                })), {}, {
                    imageObject: function () {
                        return this.$store.state.ormDB.images.data[this.image_id]
                    },
                    imageUrl: function () {
                        return this.image.url
                    },
                    imageName: function () {
                        return this.image.temp_names && this.image.temp_names[this.currentTabId] || this.image.name
                    },
                    imageResolution: function () {
                        var e = this.image,
                            t = e.width,
                            n = e.height;
                        return t && n ? "".concat(t, " × ").concat(n) : ""
                    },
                    imageFormat: function () {
                        return this.image.ext
                    },
                    imageSize: function () {
                        return this.image.formattedSize
                    }
                }),
                watch: {
                    imageObject: function (e, t) {
                        var n = this;
                        Object.keys(e).forEach((function (i) {
                            e[i] !== t[i] && (n.image[i] = e[i]), "temp_names" === e[i] && (n.image[i] = I({}, e[i]))
                        }))
                    }
                },
                mounted: function () {
                    this.image = this.imageObject
                },
                beforeDestroy: function () {
                    clearTimeout(this.tooltipTimeout)
                },
                methods: I(I({}, Object(f.b)({
                    updateImg: "ormDB/images/update"
                })), {}, {
                    imageOnload: function (e) {
                        this.isImageReady = !0;
                        var t = this.currentTabId;
                        if (this.updateImg({
                                where: this.image_id,
                                data: {
                                    temp_names: s()({}, t, null)
                                }
                            }), 0 === this.image.width || 0 === this.image.height) {
                            var n = e.path[0];
                            this.updateImg({
                                where: this.image_id,
                                data: {
                                    width: n.naturalWidth,
                                    height: n.naturalHeight,
                                    status: T.j.ready
                                }
                            })
                        }
                    },
                    imageOnError: function () {
                        this.updateImg({
                            where: this.image_id,
                            data: {
                                status: T.j.failed
                            }
                        })
                    },
                    imageSelect: function () {
                        this.$emit("image-select", this.image.image_id, this.isImageSelected)
                    },
                    startNameEditing: function (e) {
                        var t = this;
                        this.isNameBeingEdited = !0, this.tempImageName = this.imageName, this.$nextTick((function () {
                            t.$refs.nameInput.focus()
                        }))
                    },
                    updateImgName: function () {
                        var e = this.isNameBeingEdited,
                            t = this.tempImageName,
                            n = this.imageName;
                        e && t && t !== n && this.updateImg({
                            where: this.image_id,
                            data: {
                                temp_names: I(I({}, this.image.temp_names), {}, s()({}, this.currentTabId, t))
                            }
                        }), this.stopImgNameEditing()
                    },
                    stopImgNameEditing: function () {
                        this.isNameBeingEdited = !1, this.tempImageName = ""
                    },
                    downloadImage: function () {
                        this.$emit("download-image", this.image.image_id)
                    },
                    copyToClipboard: function () {
                        var e = this;
                        return E()(C.a.mark((function t() {
                            return C.a.wrap((function (t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.prev = 0, t.next = 3, navigator.clipboard.writeText(e.imageUrl);
                                    case 3:
                                        e.successCopied(), t.next = 9;
                                        break;
                                    case 6:
                                        t.prev = 6, t.t0 = t.catch(0), console.log("Copy to clipboard failed");
                                    case 9:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, null, [
                                [0, 6]
                            ])
                        })))()
                    },
                    successCopied: function () {
                        var e = this;
                        this.tooltipShowing = !0, this.tooltipTimeout = setTimeout((function () {
                            e.tooltipShowing = !1
                        }), 500)
                    }
                })
            },
            j = (n(478), Object(g.a)(L, (function () {
                var e = this,
                    t = e.$createElement,
                    n = e._self._c || t;
                return n("li", {
                    staticClass: "dm_sniffer_item"
                }, [n("div", {
                    staticClass: "dm_sniffer_image_holder",
                    class: {
                        selected: e.isImageSelected
                    },
                    on: {
                        click: function (t) {
                            return e.imageSelect()
                        }
                    }
                }, [n("img", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.isImageReady,
                        expression: "isImageReady"
                    }],
                    staticClass: "dm_sniffer_image",
                    attrs: {
                        src: e.imageUrl
                    },
                    on: {
                        load: e.imageOnload,
                        error: e.imageOnError
                    }
                }), e._v(" "), e.isImageReady ? e._e() : n("div", {
                    staticClass: "preloader"
                }, [n("div"), n("div"), n("div"), n("div"), n("div"), n("div"), n("div"), n("div"), n("div"), n("div"), n("div"), n("div")])]), e._v(" "), n("div", {
                    staticClass: "dm_sniffer_item_footer"
                }, [e.isNameBeingEdited ? e._e() : n("div", {
                    staticClass: "file_name",
                    attrs: {
                        title: "Click to renaming!"
                    },
                    on: {
                        click: e.startNameEditing
                    }
                }, [e._v("\n          " + e._s(e.imageName) + "\n      ")]), e._v(" "), e.isNameBeingEdited ? n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.tempImageName,
                        expression: "tempImageName"
                    }],
                    ref: "nameInput",
                    attrs: {
                        type: "text"
                    },
                    domProps: {
                        value: e.tempImageName
                    },
                    on: {
                        blur: e.updateImgName,
                        keydown: [function (t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.updateImgName(t)
                        }, function (t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "esc", 27, t.key, ["Esc", "Escape"]) ? null : e.stopImgNameEditing(t)
                        }],
                        input: function (t) {
                            t.target.composing || (e.tempImageName = t.target.value)
                        }
                    }
                }) : e._e(), e._v(" "), e.isImageReady ? n("div", {
                    staticClass: "dm_sniffer_item_footer_info"
                }, [n("div", {
                    staticClass: "vld-resolution"
                }, [n("span", {
                    staticClass: "dm_sniffer_item_resolution"
                }, [e._v(" " + e._s(e.imageResolution) + " ")])]), e._v(" "), n("div", {
                    staticClass: "vld-format"
                }, [n("span", {
                    staticClass: "dm_sniffer_item_type"
                }, [e._v(" ." + e._s(e.imageFormat))])]), e._v(" "), n("div", {
                    staticClass: "vld-format"
                }, [n("span", {
                    staticClass: "dm_sniffer_item_type"
                }, [e._v(" " + e._s(e.imageSize))])])]) : e._e(), e._v(" "), n("div", {
                    staticClass: "dm_sniffer_item_footer_buttons"
                }, [n("a", {
                    staticClass: "dm_sniffer_item_footer_btn",
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.downloadImage()
                        }
                    }
                }, [n("DownloadImageBtnIcon")], 1), e._v(" "), n("a", {
                    staticClass: "dm_sniffer_item_footer_btn",
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.copyToClipboard()
                        }
                    }
                }, [n("CopyImageLinkBtnIcon"), e._v(" "), n("transition", {
                    attrs: {
                        name: "show-tooltip"
                    }
                }, [e.tooltipShowing ? n("span", [e._v("Copied")]) : e._e()])], 1), e._v(" "), n("a", {
                    staticClass: "dm_sniffer_item_footer_btn",
                    attrs: {
                        href: e.imageUrl,
                        target: "_blank"
                    }
                }, [n("OpenImageLinkBtnIcon")], 1)])])])
            }), [], !1, null, "4fa3b0fb", null).exports),
            R = {
                name: "DownloadNamingBox",
                props: {
                    selectedFilesCount: {
                        type: Number,
                        required: !0
                    }
                },
                data: function () {
                    return {
                        isNamingBoxShowing: !1,
                        prefixInput: "",
                        prefixOption: "all",
                        renameInput: "",
                        renameOption: "all"
                    }
                },
                computed: {
                    isSelectedFiles: function () {
                        return this.selectedFilesCount > 0
                    }
                },
                methods: {
                    addPrefix: function () {
                        this.$emit("add-prefix-to-group", this.prefixInput, this.prefixOption), this.prefixInput = ""
                    },
                    rename: function () {
                        this.$emit("rename-group", this.renameInput, this.renameOption), this.renameInput = ""
                    }
                }
            },
            z = (n(479), n(480), Object(g.a)(R, (function () {
                var e = this,
                    t = e.$createElement,
                    n = e._self._c || t;
                return n("div", {
                    staticClass: "filters_wrap naming_wrapper"
                }, [n("div", {
                    staticClass: "filters"
                }, [n("label", {
                    staticClass: "label",
                    attrs: {
                        for: "nmasking"
                    }
                }, [e._v("Name Masking:")]), e._v(" "), n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.isNamingBoxShowing,
                        expression: "isNamingBoxShowing"
                    }],
                    attrs: {
                        type: "checkbox",
                        id: "nmasking"
                    },
                    domProps: {
                        checked: Array.isArray(e.isNamingBoxShowing) ? e._i(e.isNamingBoxShowing, null) > -1 : e.isNamingBoxShowing
                    },
                    on: {
                        change: function (t) {
                            var n = e.isNamingBoxShowing,
                                i = t.target,
                                o = !!i.checked;
                            if (Array.isArray(n)) {
                                var a = e._i(n, null);
                                i.checked ? a < 0 && (e.isNamingBoxShowing = n.concat([null])) : a > -1 && (e.isNamingBoxShowing = n.slice(0, a).concat(n.slice(a + 1)))
                            } else e.isNamingBoxShowing = o
                        }
                    }
                })]), e._v(" "), e.isNamingBoxShowing ? n("div", {
                    staticClass: "naming_wrapper_div"
                }, [n("div", {
                    staticClass: "naming_wrapper_div__row",
                    staticStyle: {
                        "margin-bottom": "5px"
                    }
                }, [n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.prefixInput,
                        expression: "prefixInput"
                    }],
                    attrs: {
                        type: "text",
                        placeholder: "Image prefix"
                    },
                    domProps: {
                        value: e.prefixInput
                    },
                    on: {
                        keydown: function (t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.addPrefix(t)
                        },
                        input: function (t) {
                            t.target.composing || (e.prefixInput = t.target.value)
                        }
                    }
                }), e._v(" "), e.isSelectedFiles ? n("select", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.prefixOption,
                        expression: "prefixOption"
                    }],
                    on: {
                        change: function (t) {
                            var n = Array.prototype.filter.call(t.target.options, (function (e) {
                                return e.selected
                            })).map((function (e) {
                                return "_value" in e ? e._value : e.value
                            }));
                            e.prefixOption = t.target.multiple ? n : n[0]
                        }
                    }
                }, [n("option", {
                    attrs: {
                        value: "all"
                    }
                }, [e._v("All images")]), e._v(" "), n("option", {
                    attrs: {
                        value: "selected"
                    }
                }, [e._v("Selected images")])]) : e._e(), e._v(" "), n("button", {
                    staticClass: "snif_control_btn",
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.addPrefix(t)
                        }
                    }
                }, [e._v("Add")])]), e._v(" "), n("div", {
                    staticClass: "naming_wrapper_div__row"
                }, [n("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.renameInput,
                        expression: "renameInput"
                    }],
                    attrs: {
                        type: "text",
                        placeholder: "New name"
                    },
                    domProps: {
                        value: e.renameInput
                    },
                    on: {
                        keydown: function (t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.rename(t)
                        },
                        input: function (t) {
                            t.target.composing || (e.renameInput = t.target.value)
                        }
                    }
                }), e._v(" "), e.isSelectedFiles ? n("select", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.renameOption,
                        expression: "renameOption"
                    }],
                    on: {
                        change: function (t) {
                            var n = Array.prototype.filter.call(t.target.options, (function (e) {
                                return e.selected
                            })).map((function (e) {
                                return "_value" in e ? e._value : e.value
                            }));
                            e.renameOption = t.target.multiple ? n : n[0]
                        }
                    }
                }, [n("option", {
                    attrs: {
                        value: "all"
                    }
                }, [e._v("All images")]), e._v(" "), n("option", {
                    attrs: {
                        value: "selected"
                    }
                }, [e._v("Selected images")])]) : e._e(), e._v(" "), n("button", {
                    staticClass: "snif_control_btn",
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.rename(t)
                        }
                    }
                }, [e._v("Rename")])])]) : e._e()])
            }), [], !1, null, "3ad0d4ee", null).exports),
            B = n(6);

        function F(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function N(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? F(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : F(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var U = {
                name: "ImagesSniffer",
                components: {
                    DownloadNamingBox: z,
                    DownloadImagesFilter: O,
                    DownloadImageItem: j,
                    DeselectBtnIcon: x.m,
                    ImagesIcon: x.H,
                    SnifferOff: x.jb
                },
                props: {
                    currentTabId: {
                        type: Number,
                        required: !0
                    }
                },
                data: function () {
                    return {
                        imageIds: [],
                        filteredImageIds: [],
                        selectedImageIds: [],
                        images: [],
                        maxFileSize: 0,
                        availableExt: [],
                        filterValues: {
                            sortCondition: "default",
                            extensions: [],
                            width: {
                                condition: "all",
                                startPoint: null,
                                endPoint: null
                            },
                            height: {
                                condition: "all",
                                startPoint: null,
                                endPoint: null
                            },
                            size: {
                                condition: "all",
                                startPoint: null,
                                endPoint: null
                            }
                        }
                    }
                },
                computed: N(N({}, Object(f.c)({
                    getTabImages: "ormDB/images/findIn",
                    imagesQuery: "ormDB/images/query",
                    locale: "options/getLocale",
                    isSnifferEnableForDomain: "options/isSnifferEnableForDomain",
                    isUserHaveAccess: "user/isUserHaveAccess"
                })), {}, {
                    snifferOpen: function () {
                        return this.$store.state.ormDB.tabs.data[this.currentTabId] && this.$store.state.ormDB.tabs.data[this.currentTabId].isContentSnifferOpened || !1
                    },
                    snifferPosition: function () {
                        return this.$store.state.ormDB.tabs.data[this.currentTabId] && this.$store.state.ormDB.tabs.data[this.currentTabId].contentSnifferPosition || "right"
                    },
                    isImgSnifferEnableForDomain: function () {
                        var e = window.location.hostname.replace("www.", "");
                        return this.isSnifferEnableForDomain("image", e)
                    },
                    currentTabImageIds: function () {
                        return this.$store.state.ormDB.tabs.data[this.currentTabId] && this.$store.state.ormDB.tabs.data[this.currentTabId].image_ids
                    },
                    isPositionRight: function () {
                        return "right" === this.snifferPosition
                    },
                    isPositionLeft: function () {
                        return "left" === this.snifferPosition
                    },
                    isSnifferOpen: function () {
                        return this.snifferOpen ? "_opened" : ""
                    },
                    selectedFilesCount: function () {
                        return this.selectedImageIds.length
                    },
                    allImagesCount: function () {
                        return this.images.length
                    },
                    isODMProvider: function () {
                        return "ODM" === this.$store.state.ormDB.tabs.data[this.currentTabId].provider
                    }
                }),
                watch: {
                    locale: function () {
                        this.setLocale()
                    },
                    currentTabImageIds: function (e) {
                        Array.isArray(e) && (this.imageIds = c()(e), this.filterFiles())
                    },
                    filteredImageIds: d()((function (e) {
                        this.images = c()(e)
                    }), 500)
                },
                methods: N(N({}, Object(f.b)({
                    disableTabImgSniffer: "app/disableTabImgSniffer",
                    updateTab: "ormDB/tabs/update",
                    updateImage: "ormDB/images/update"
                })), {}, {
                    isImageSelected: function (e) {
                        return this.selectedImageIds.indexOf(e) > -1
                    },
                    setLocale: function () {
                        this.$i18n.locale = this.locale
                    },
                    toggleSnifferPanel: function () {
                        this.updateTab({
                            where: this.currentTabId,
                            data: {
                                isContentSnifferOpened: !this.snifferOpen
                            }
                        })
                    },
                    closeSniffer: function () {
                        this.disableTabImgSniffer(this.currentTabId)
                    },
                    toggleSnifferPosition: function (e) {
                        this.position = e, this.updateTab({
                            where: this.currentTabId,
                            data: {
                                contentSnifferPosition: e
                            }
                        })
                    },
                    filterFiles: function () {
                        var e = this;
                        this.filteredImageIds = [], this.maxFileSize = 0;
                        var t = this.filterValues,
                            n = t.sortCondition,
                            i = t.extensions,
                            o = t.width,
                            a = t.height,
                            r = t.size;
                        this.imagesQuery().whereIdIn(this.imageIds).where((function (e) {
                            return e.status !== T.j.failed && (!(i.length > 0 && -1 === i.indexOf(e.ext)) && (!("all" !== o.condition && !Object(B.S)(e.width, o)) && (!("all" !== a.condition && !Object(B.S)(e.height, a)) && !("all" !== r.condition && !Object(B.S)(e.size, r)))))
                        })).orderBy("default" === n ? null : n, "asc").get().forEach((function (t, n) {
                            t.size > e.maxFileSize && (e.maxFileSize = t.size), -1 === e.availableExt.indexOf(t.ext) && e.availableExt.push(t.ext), e.filteredImageIds.push(t.image_id)
                        }))
                    },
                    addPrefixToGroup: function (e, t) {
                        var n = this,
                            i = this.currentTabId;
                        this.images;
                        ("selected" === t ? c()(this.selectedImageIds) : c()(this.images)).forEach((function (t, o) {
                            n.updateImage({
                                where: t,
                                data: {
                                    temp_names: s()({}, i, "".concat(e).concat(n.getPrevImageName(t)))
                                }
                            })
                        }))
                    },
                    getPrevImageName: function (e) {
                        return this.$store.state.ormDB.images.data[e].temp_names[this.currentTabId] || this.$store.state.ormDB.images.data[e].name
                    },
                    renameGroup: function (e, t) {
                        var n = this,
                            i = this.currentTabId;
                        this.images;
                        ("selected" === t ? c()(this.selectedImageIds) : c()(this.images)).forEach((function (t, o) {
                            n.updateImage({
                                where: t,
                                data: {
                                    temp_names: s()({}, i, "".concat(e, "(").concat(o + 1, ")"))
                                }
                            })
                        }))
                    },
                    imageSelect: function (e, t) {
                        var n = this.selectedImageIds;
                        if (t) {
                            var i = this.selectedImageIds.findIndex((function (t) {
                                return t === e
                            }));
                            n.splice(i, 1)
                        } else this.selectedImageIds.push(e);
                        this.selectedImageIds = c()(n)
                    },
                    updateFiltersVal: function (e) {
                        this.filterValues = N({}, e), this.filterFiles()
                    },
                    downloadImage: function (e) {
                        chrome.runtime.sendMessage({
                            msg: "singleDownloadFromStore",
                            data: {
                                tabId: this.currentTabId,
                                model: "images",
                                itemId: e
                            }
                        })
                    },
                    downloadZip: function (e) {
                        chrome.runtime.sendMessage({
                            msg: "multipleDownloadFromStore",
                            data: {
                                tabId: this.currentTabId,
                                model: "images",
                                itemIds: this[e],
                                downloadZip: !0
                            }
                        })
                    },
                    deselectImages: function () {
                        this.selectedImageIds = []
                    },
                    openOptionsPage: function () {
                        chrome.runtime.sendMessage({
                            msg: "openUrl",
                            data: {
                                url: chrome.extension.getURL("options/options.html"),
                                inNewTab: !0
                            }
                        })
                    }
                })
            },
            V = (n(481), Object(g.a)(U, (function () {
                var e = this,
                    t = e.$createElement,
                    n = e._self._c || t;
                return n("div", {
                    ref: "interactElm",
                    class: ["ps_" + e.snifferPosition, "dm_sniffer" + e.isSnifferOpen],
                    attrs: {
                        id: "dm-extension-sniffer"
                    }
                }, [n("div", {
                    staticClass: "dm_sniffer_control"
                }, [n("div", {
                    staticClass: "snif_btns_box"
                }, [n("a", {
                    staticClass: "snif_control_btn btn_open",
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.toggleSnifferPanel(t)
                        }
                    }
                }, [n("ImagesIcon"), e._v(" "), n("span", {
                    staticClass: "close_sniffer",
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.closeSniffer(t)
                        }
                    }
                }, [n("DeselectBtnIcon")], 1)], 1)]), e._v(" "), e.isImgSnifferEnableForDomain ? n("div", {
                    staticClass: "tools_holder"
                }, [n("div", {
                    staticClass: "download_actions"
                }, [n("a", {
                    staticClass: "snif_control_btn btn_download",
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.downloadZip("images")
                        }
                    }
                }, [e._v(" " + e._s(e.$t("content.download_all")) + "(" + e._s(e.allImagesCount) + ")")]), e._v(" "), n("a", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.selectedFilesCount > 0,
                        expression: "selectedFilesCount > 0"
                    }],
                    staticClass: "snif_control_btn btn_download",
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.downloadZip("selectedImageIds")
                        }
                    }
                }, [e._v("\n          " + e._s(e.$t("content.download_selected")) + "(" + e._s(e.selectedFilesCount) + ") ")]), e._v(" "), n("a", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.selectedFilesCount > 0,
                        expression: "selectedFilesCount > 0"
                    }],
                    staticClass: "snif_control_btn btn_download btn_deselect",
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.deselectImages(t)
                        }
                    }
                }, [e._v("\n          x \n        ")])])]) : e._e()]), e._v(" "), e.isImgSnifferEnableForDomain ? n("div", {
                    staticClass: "images_list"
                }, [e.isODMProvider || e.isUserHaveAccess("imageFiltration") ? n("DownloadImagesFilter", {
                    attrs: {
                        maxFileSize: e.maxFileSize,
                        availableExtProp: e.availableExt
                    },
                    on: {
                        "filter-files": e.updateFiltersVal
                    }
                }) : e._e(), e._v(" "), e.isODMProvider || e.isUserHaveAccess("imageRenaming") ? n("DownloadNamingBox", {
                    attrs: {
                        selectedFilesCount: e.selectedFilesCount
                    },
                    on: {
                        "add-prefix-to-group": e.addPrefixToGroup,
                        "rename-group": e.renameGroup
                    }
                }) : e._e(), e._v(" "), e.imageIds.length > 0 ? n("ul", {
                    staticClass: "dm_sniffer_container"
                }, e._l(e.images, (function (t) {
                    return n("DownloadImageItem", {
                        key: t,
                        attrs: {
                            image_id: t,
                            currentTabId: e.currentTabId,
                            isImageSelected: e.isImageSelected(t)
                        },
                        on: {
                            "image-select": e.imageSelect,
                            "download-image": e.downloadImage
                        }
                    })
                })), 1) : e._e()], 1) : n("div", [n("div", {
                    staticClass: "users_instruction"
                }, [n("SnifferOff"), e._v(" "), n("p", {
                    staticClass: "title"
                }, [e._v(e._s(e.$t("popup.DomainDisabledTitle")))]), e._v(" "), n("p", {
                    staticClass: "mb-20"
                }, [e._v(e._s(e.$t("popup.DomainDisabledLine1")))]), e._v(" "), n("a", {
                    staticClass: "msg_btn",
                    attrs: {
                        target: "_blank",
                        href: "#"
                    },
                    on: {
                        click: function (t) {
                            return t.preventDefault(), e.openOptionsPage(t)
                        }
                    }
                }, [e._v("\n        " + e._s(e.$t("popup.DomainDisabledBtn")) + "\n      ")])], 1)])])
            }), [], !1, null, "380296c5", null).exports),
            H = n(8);

        function q(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function K(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? q(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : q(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var W = {
                name: "App",
                components: {
                    ImagesSniffer: V
                },
                data: function () {
                    return {
                        currentTabId: 0
                    }
                },
                computed: K(K({}, Object(f.c)({
                    isImageSnifferEnableOnTab: "app/isImageSnifferEnableOnTab"
                })), {}, {
                    isImgSnifferEnabled: function () {
                        return this.isImageSnifferEnableOnTab(this.currentTabId)
                    }
                }),
                created: function () {
                    var e = this;
                    this.getCurrentTabId().then((function (t) {
                        return e.currentTabId = t
                    }))
                },
                methods: K(K({}, Object(f.b)(["addTabIdEnableSniffer", "removeTabIdEnableSniffer"])), {}, {
                    getCurrentTabId: function () {
                        return new Promise((function (e) {
                            chrome.runtime.sendMessage({
                                msg: "getTabId"
                            }, (function (t) {
                                return e(t)
                            }))
                        }))
                    }
                })
            },
            G = (n(482), Object(g.a)(W, (function () {
                var e = this.$createElement,
                    t = this._self._c || e;
                return t("div", {
                    ref: "imageSniffer",
                    staticClass: "odm_extension image_downloader_wrapper"
                }, [this.isImgSnifferEnabled ? t("ImagesSniffer", {
                    attrs: {
                        currentTabId: this.currentTabId
                    }
                }) : this._e()], 1)
            }), [], !1, null, "7e2550d6", null).exports),
            Y = n(11),
            Q = n.n(Y),
            J = n(12),
            $ = n.n(J),
            X = n(31),
            Z = n(84),
            ee = n.n(Z),
            te = n(20),
            ne = n.n(te),
            ie = n(21),
            oe = n.n(ie),
            ae = n(10),
            re = n.n(ae),
            se = n(9),
            le = n.n(se),
            ce = n(17);

        function ue(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function de(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ue(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ue(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function fe(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var _e = function (e) {
            ne()(n, e);
            var t = fe(n);

            function n() {
                var e;
                return Q()(this, n), (e = t.call(this)).processed_video_ids = {}, e.processed_track_ids = {}, e.bindedParseMutation = e.parseMutation.bind(ee()(e)), e.setMutationObserver(), e.isStarted = !1, e
            }
            return $()(n, [{
                key: "search",
                value: function () {
                    var e = this,
                        t = window.location.hostname,
                        n = this._store.getters["options/isSnifferEnableForDomain"]("video", t),
                        i = this._store.getters["options/isSnifferEnableForDomain"]("audio", t),
                        o = this._store.getters["options/isSnifferEnableForDomain"]("image", t);
                    n && this.videoSearch(), this.oldHref !== document.location.href && (this.oldHref = document.location.href, this.clearTabMedia().then((function () {
                        i && e.runNodeProcess()
                    }))), !this.isStarted && "complete" === document.readyState && i && (this.runNodeProcess(), this.isStarted = !0), this.isImageSnifferEnabled && o && this.grabImageFiles()
                }
            }, {
                key: "setMutationObserver",
                value: function () {
                    var e = this;
                    this.observer = null, this.observer = new MutationObserver((function (t) {
                        return e.bindedParseMutation(t)
                    })), this.observer.observe(document.body || document, {
                        childList: !0,
                        subtree: !0
                    })
                }
            }, {
                key: "parseMutation",
                value: function (e) {
                    var t = this;
                    e.forEach((function (e) {
                        t.runNodeProcess()
                    }))
                }
            }, {
                key: "runNodeProcess",
                value: function () {
                    if (!document.location.href.includes("?q=")) {
                        var e = le()(".audio_row").not(".audio_claimed.processed");
                        this.processingNodes(e)
                    }
                }
            }, {
                key: "processingNodes",
                value: function (e) {
                    var t = this;
                    le()(e).each((function (e, n) {
                        t.hasClass(n, "audio_row") && !t.hasClass(n, "audio_claimed") ? t.updateOneAudio(n) : t.updateLinks(n)
                    }))
                }
            }, {
                key: "updateLinks",
                value: function (e) {
                    var t = this;
                    if (1 === e.nodeType || 9 === e.nodeType) {
                        e.querySelectorAll(".audio_row:not(.audio_claimed)").forEach((function (e) {
                            t.updateOneAudio(e)
                        }))
                    }
                }
            }, {
                key: "updateOneAudio",
                value: function (e) {
                    var t = e.getAttribute("data-full-id");
                    if (t && !this.processed_track_ids[t]) {
                        this.processed_track_ids[t] = 1;
                        var n = this.getAudioInfo(e),
                            i = n.track_addon,
                            o = n.artist,
                            a = n.name,
                            r = n.duration,
                            s = n.formatted_duration,
                            l = "act=reload_audio&al=1&ids=".concat(e.dataset.fullId, "_").concat(i);
                        this.addTrack({
                            audio_id: this.hashCode(),
                            name: a,
                            ext: "mp3",
                            type: "audio/mpeg",
                            artist: o,
                            url: l,
                            poster: n.poster,
                            duration: r,
                            formatted_duration: s,
                            status: T.b.waitRealUrl
                        })
                    }
                }
            }, {
                key: "getAudioInfo",
                value: function (e) {
                    if (e.getAttribute("data-full-id")) {
                        var t = JSON.parse(e.dataset.audio),
                            n = t[13],
                            i = t[15].vk_id;
                        return {
                            type: "getAudioInfo",
                            fullId: e.dataset.fullId,
                            duration: t[5],
                            formatted_duration: this.minsToHrsMins(t[5]),
                            artist: t[4],
                            name: t[3],
                            vk_id: i,
                            poster: t[14].split(",")[0] || "",
                            track_addon: ~n.indexOf("///") ? "".concat(n.split("/")[2], "_").concat(n.split("///")[1].split("/")[0]) : "".concat(n.split("/")[2], "_").concat(n.split("//").pop().split("/")[0])
                        }
                    }
                }
            }, {
                key: "clearTabMedia",
                value: function () {
                    var e = this;
                    return new Promise((function (t) {
                        ce.e.update({
                            where: e.tabId,
                            data: {
                                audio_ids: [],
                                selected_audio_ids: [],
                                video_ids: [],
                                selected_video_ids: []
                            }
                        }).then((function () {
                            e.tab_audio_ids = [], e.processed_track_ids = {}, t("cleared")
                        }))
                    }))
                }
            }, {
                key: "hasClass",
                value: function (e, t) {
                    return " ".concat(e.className, " ").indexOf(" ".concat(t, " ")) > -1
                }
            }, {
                key: "videoSearch",
                value: function () {
                    var e = this;
                    le()("video").not("." + this.INIT_CLASS).each(function () {
                        var t = E()(C.a.mark((function t(n, i) {
                            var o;
                            return C.a.wrap((function (t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        o = e.getVideoIdByHtml(i), le()("#mv_main_info .like_cont"), o && !e.processed_video_ids[o] && (e.processed_video_ids[o] = !0, e.getVideoData(o)), i.classList.add(e.INIT_CLASS);
                                    case 4:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function (e, n) {
                            return t.apply(this, arguments)
                        }
                    }()), le()(".page_post_thumb_video[data-video]").not("." + this.INIT_CLASS).each(function () {
                        var t = E()(C.a.mark((function t(n, i) {
                            var o;
                            return C.a.wrap((function (t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        o = le()(i).attr("data-video"), i.closest(".wall_post_cont"), o && e.getVideoData(o), i.classList.add(e.INIT_CLASS);
                                    case 4:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function (e, n) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "getVideoIdByHtml",
                value: function (e) {
                    var t = e.closest(".video_box_wrap");
                    if (t) {
                        var n = t.id.replace("video_box_wrap", "");
                        if (n) return n;
                        console.warn("video id not found")
                    }
                }
            }, {
                key: "getVideoData",
                value: function (e) {
                    var t = this;
                    return new Promise((function (n) {
                        var i = "https://vk.com/al_video.php?act=show_inline&al=1&video=" + e;
                        le.a.get(i, (function (i) {
                            var o = i.payload[1][3];
                            if (o) {
                                var a = o.player.params[0],
                                    r = a.extra_data,
                                    s = {
                                        video_group_id: t.hashCode(),
                                        name: a.md_title,
                                        provider: t.provider,
                                        poster: a.jpg,
                                        ext: "mp4",
                                        type: "video/mp4"
                                    };
                                if (a.url720 && t.customAddVideo(de(de({}, s), {}, {
                                        video_id: t.hashCode(),
                                        url: a.url720,
                                        quality: "720"
                                    })), a.url480 && t.customAddVideo(de(de({}, s), {}, {
                                        video_id: t.hashCode(),
                                        url: a.url480,
                                        quality: "480"
                                    })), a.url360 && t.customAddVideo(de(de({}, s), {}, {
                                        video_id: t.hashCode(),
                                        url: a.url360,
                                        quality: "360"
                                    })), a.url240 && t.customAddVideo(de(de({}, s), {}, {
                                        video_id: t.hashCode(),
                                        url: a.url240,
                                        quality: "240"
                                    })), r && r.includes("instagram")) {
                                    var l = "https:" + r;
                                    t.customAddVideo(de(de({}, s), {}, {
                                        video_id: t.hashCode(),
                                        url: l,
                                        quality: "640"
                                    }))
                                } else r && /^[a-zA-Z0-9\-_]+$/.test(r) ? console.log("extra video", e, a) : console.log("unknown video", e, a);
                                n(s)
                            }
                        }))
                    }))
                }
            }]), n
        }(X.a);

        function pe(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var he = function (e) {
            ne()(n, e);
            var t = pe(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = this,
                        t = le()(".player_container, .player").not("." + this.INIT_CLASS),
                        n = le()(".contextclip-items-wrapper article").not(":first-child").not("." + this.INIT_CLASS),
                        i = le()(".iris_video-vital").not("." + this.INIT_CLASS),
                        o = le()("div[data-video-id]").not("." + this.INIT_CLASS);
                    t.length > 0 && (setTimeout((function () {
                        var n = t[0].id.replace("clip_", "");
                        if ("string" == typeof n) {
                            var i = le()(le()("h1")[1]).find("span").text(),
                                o = le()(".vp-preview").length > 0 ? le()(".vp-preview").attr("data-thumb") : "";
                            e.getVideoData(n, i, o).then((function (t) {
                                t.forEach((function (t) {
                                    e.customAddVideo(t)
                                }))
                            }))
                        }
                    }), 200), t.addClass(this.INIT_CLASS)), n.length > 0 && n.each((function (t, n) {
                        var i = le()(n),
                            o = i.find("a[href]").attr("href").match(/\d+$/)[0],
                            a = i.find("._13NFb.sc-dfVpRl a[title]").text(),
                            r = i.find("img").attr("src");
                        e.getVideoData(o, a, r).then((function (t) {
                            t.forEach((function (t) {
                                console.log("ururur"), e.customAddVideo(t)
                            }))
                        })), i.addClass(e.INIT_CLASS)
                    })), i.length > 0 && i.each((function (t, n) {
                        var i = le()(n),
                            o = JSON.parse(i.find(".iris_chip[data-custom]").attr("data-custom")).clip_id,
                            a = i.find("h5 span[title]").attr("title"),
                            r = i.find(".iris_thumbnail img").attr("src");
                        e.getVideoData(o, a, r).then((function (t) {
                            t.forEach((function (t) {
                                e.customAddVideo(t)
                            }))
                        })), i.addClass(e.INIT_CLASS)
                    })), o.length > 0 && o.each((function (t, n) {
                        var i = le()(n),
                            o = i.attr("data-video-id"),
                            a = le()("h1.article-title").text();
                        e.getVideoData(o, a, "").then((function (t) {
                            t.forEach((function (t) {
                                e.customAddVideo(t)
                            }))
                        })), i.addClass(e.INIT_CLASS)
                    }))
                }
            }, {
                key: "getVideoData",
                value: function (e, t, n) {
                    var i = this;
                    return new Promise((function (o) {
                        var a = "https://player.vimeo.com/video/".concat(e, "/config");
                        console.log(t), chrome.runtime.sendMessage({
                            msg: "makeXHRrequest",
                            url: a
                        }, (function (e) {
                            var a = e.request.files.progressive,
                                r = [],
                                s = i.hashCode();
                            a.forEach((function (e) {
                                e && r.push({
                                    video_id: i.hashCode(),
                                    video_group_id: s,
                                    name: t,
                                    poster: n,
                                    url: e.url,
                                    quality: e.quality,
                                    type: "video/mp4",
                                    ext: "mp4",
                                    width: e.width,
                                    height: e.height
                                })
                            })), o(r)
                        }))
                    }))
                }
            }]), n
        }(X.a);

        function ge(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var me = function (e) {
            ne()(n, e);
            var t = ge(n);

            function n() {
                var e;
                return Q()(this, n), (e = t.call(this)).tab_audio_ids = [], e.bindedParseMutation = e.parseMutation.bind(ee()(e)), e.setMutationObserver(), e.isStarted = !1, e
            }
            return $()(n, [{
                key: "search",
                value: function () {
                    var e = window.location.hostname,
                        t = this._store.getters["options/isSnifferEnableForDomain"]("video", e),
                        n = this._store.getters["options/isSnifferEnableForDomain"]("image", e);
                    !this.isStarted && "complete" === document.readyState && t && (this.grabVideoFiles(), this.isStarted = !0), this.isImageSnifferEnabled && n && this.grabImageFiles()
                }
            }, {
                key: "setMutationObserver",
                value: function () {
                    var e = this;
                    this.observer = null, this.observer = new MutationObserver((function (t) {
                        return e.bindedParseMutation(t)
                    })), this.observer.observe(document.body || document, {
                        childList: !0,
                        subtree: !0
                    })
                }
            }, {
                key: "parseMutation",
                value: function (e) {
                    var t = this;
                    e.forEach((function (e) {
                        t.grabVideoFiles()
                    }))
                }
            }, {
                key: "clearIGVideo",
                value: function () {
                    var e = this;
                    return new Promise((function (t) {
                        ce.e.update({
                            where: e.tabId,
                            data: {
                                video_ids: [],
                                selected_video_ids: []
                            }
                        }).then((function () {
                            e.processed_video_urls = {}, t("cleared")
                        }))
                    }))
                }
            }, {
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    le()(".v1Nh3.kIKUG").not("." + this.INIT_CLASS).each(function () {
                        var t = E()(C.a.mark((function t(n, i) {
                            var o, a, r;
                            return C.a.wrap((function (t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if ((o = le()(i)).addClass(e.INIT_CLASS), o.find(".coreSpriteVideoIconLarge").length) {
                                            t.next = 4;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 4:
                                        if (!(a = o.children("a").attr("href"))) {
                                            t.next = 10;
                                            break
                                        }
                                        return t.next = 8, e.getVideoData(a);
                                    case 8:
                                        r = t.sent, e.customAddVideo(r);
                                    case 10:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function (e, n) {
                            return t.apply(this, arguments)
                        }
                    }()), le()("article video").not("." + this.INIT_CLASS).each(function () {
                        var t = E()(C.a.mark((function t(n, i) {
                            var o, a, r;
                            return C.a.wrap((function (t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        (o = le()(i)).addClass(e.INIT_CLASS), (a = o.closest("article").find("a.c-Yi7").attr("href")) && (r = o.attr("poster"), e.getVideoData(a, r).then((function (t) {
                                            return e.customAddVideo(t)
                                        })).catch((function (t) {
                                            -1 === o.attr("src").indexOf("blob") && e.customAddVideo({
                                                video_id: Object(B.w)(),
                                                video_group_id: Object(B.w)(),
                                                name: "IG video",
                                                poster: o.attr("poster"),
                                                url: o.attr("src"),
                                                quality: "640",
                                                type: "video/mp4",
                                                ext: "mp4"
                                            })
                                        })));
                                    case 4:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function (e, n) {
                            return t.apply(this, arguments)
                        }
                    }()), le()(".y-yJ5").not("." + this.INIT_CLASS).each(function () {
                        var t = E()(C.a.mark((function t(n, i) {
                            var o, a;
                            return C.a.wrap((function (t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (le()(i).find("video"), le()(i).addClass(e.INIT_CLASS), o = le()(i).find("source").attr("src")) {
                                            t.next = 5;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 5:
                                        a = window.location.pathname.split("/"), e.customAddVideo({
                                            video_id: Object(B.w)(),
                                            video_group_id: Object(B.w)(),
                                            name: "story-".concat(a[a.length - 2]),
                                            poster: le()("img.y-yJ5").attr("src"),
                                            url: o,
                                            quality: "640",
                                            type: "video/mp4",
                                            ext: "mp4"
                                        });
                                    case 7:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function (e, n) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "getVideoData",
                value: function (e, t) {
                    return new Promise((function (n, i) {
                        var o = "https://www.instagram.com" + e;
                        o += o.includes("?") ? "&__a=1" : "?__a=1", chrome.runtime.sendMessage({
                            msg: "makeXHRrequest",
                            url: o
                        }, (function (e) {
                            var o = e.graphql.shortcode_media,
                                a = o.title || o.edge_media_to_caption.edges[0] && o.edge_media_to_caption.edges[0].node && o.edge_media_to_caption.edges[0].node.text || "video",
                                r = o.video_url;
                            r || i("Error");
                            var s = {
                                video_id: Object(B.w)(),
                                video_group_id: Object(B.w)(),
                                name: a,
                                poster: t,
                                url: r,
                                quality: "640",
                                type: "video/mp4",
                                ext: "mp4"
                            };
                            n(s)
                        }))
                    }))
                }
            }]), n
        }(X.a);

        function ve(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function be(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ve(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ve(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function ye(e, t) {
            var n;
            if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                if (Array.isArray(e) || (n = function (e, t) {
                        if (!e) return;
                        if ("string" == typeof e) return we(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        "Object" === n && e.constructor && (n = e.constructor.name);
                        if ("Map" === n || "Set" === n) return Array.from(e);
                        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return we(e, t)
                    }(e)) || t && e && "number" == typeof e.length) {
                    n && (e = n);
                    var i = 0,
                        o = function () {};
                    return {
                        s: o,
                        n: function () {
                            return i >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[i++]
                            }
                        },
                        e: function (e) {
                            throw e
                        },
                        f: o
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var a, r = !0,
                s = !1;
            return {
                s: function () {
                    n = e[Symbol.iterator]()
                },
                n: function () {
                    var e = n.next();
                    return r = e.done, e
                },
                e: function (e) {
                    s = !0, a = e
                },
                f: function () {
                    try {
                        r || null == n.return || n.return()
                    } finally {
                        if (s) throw a
                    }
                }
            }
        }

        function we(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
            return i
        }

        function Se(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var Oe = function (e) {
            ne()(n, e);
            var t = Se(n);

            function n() {
                var e;
                return Q()(this, n), (e = t.call(this)).oauth2_access_token = "AAAAAAAAAAAAAAAAAAAAAPYXBAAAAAAACLXUNDekMxqa8h%2F40K4moUkGsoc%3DTYfbDKbT3jJPCEVnMYqilB28NHfOPqkca3qaAxGfsyKCs0wRbw", e.videos = [], e
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    this.oauth2_access_token && le()("video").not("." + this.INIT_CLASS).each((function (t, n) {
                        var i = le()(n),
                            o = i.closest("article"),
                            a = e.getTweetId(o),
                            r = o.find('[data-testid="poster"]').css("background-image") && o.find('[data-testid="poster"]').css("background-image").slice(4, -1).replace(/['"]/g, "");
                        i.parent();
                        a && e.getVideoData(a, r), i.addClass(e.INIT_CLASS)
                    }))
                }
            }, {
                key: "getTweetId",
                value: function (e) {
                    return this.getTweetData(e, /(?:https:\/\/[A-z.]*\/\w*\/status\/)(\d*)(?:\/?\w*)/g)
                }
            }, {
                key: "getTweetData",
                value: function (e, t) {
                    var n, i = ye(e.find("a").toArray());
                    try {
                        for (i.s(); !(n = i.n()).done;) {
                            var o = n.value,
                                a = t.exec(o.href);
                            if (a) return a[1]
                        }
                    } catch (e) {
                        i.e(e)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "getVideoData",
                value: function (e, t) {
                    var n = this,
                        i = "https://api.twitter.com/1.1/statuses/show.json?id=".concat(e, "&include_profile_interstitial_type=1&include_blocking=1&include_blocked_by=1&include_followed_by=1&include_want_retweets=1&skip_status=1&cards_platform=Web-12&include_cards=1&include_ext_alt_text=true&include_reply_count=1&tweet_mode=extended&trim_user=false&include_ext_media_color=true"),
                        o = {
                            headers: {
                                Authorization: "Bearer " + this.oauth2_access_token,
                                "x-csrf-token": Object(B.z)("ct0")
                            }
                        };
                    chrome.runtime.sendMessage({
                        msg: "makeXHRrequest",
                        url: i,
                        config: o
                    }, (function (e) {
                        console.log(e);
                        var t = {
                            video_group_id: n.hashCode(),
                            name: e.full_text.replace(/(?:https?|ftp):\/\/[\n\S]+/g, ""),
                            provider: n.provider,
                            ext: "mp4",
                            type: "video/mp4"
                        };
                        e.extended_entities.media[0].video_info.variants.filter((function (e) {
                            return "video/mp4" === e.content_type
                        })).forEach((function (i) {
                            var o = i.url,
                                a = o.match(/vid\/(.+)\//),
                                r = a && a[1] ? a[1].replace(/^.+x/, "") : "";
                            n.customAddVideo(be(be({}, t), {}, {
                                video_id: n.hashCode(),
                                url: o,
                                quality: r,
                                poster: e.extended_entities.media[0].media_url_https
                            }))
                        }))
                    }))
                }
            }]), n
        }(X.a);

        function ke(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var Ce = function (e) {
            ne()(n, e);
            var t = ke(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    le()('a[href*="/video/"]').not("." + this.INIT_CLASS).each((function (t, n) {
                        var i = le()(n),
                            o = i.attr("href"),
                            a = i.find("video").attr("src");
                        if (!a) return !1;
                        e.GetVideoFromURL(o, a), i.addClass(e.INIT_CLASS)
                    }))
                }
            }, {
                key: "GetVideoFromURL",
                value: function (e, t) {
                    var n = this;
                    return this.Fetch(e, !1).then((function (e) {
                        var i = le()("<output>").append(e),
                            o = le()('script[id="__NEXT_DATA__"]', i);
                        if (!o.length) throw new Error("Script not found");
                        var a = JSON.parse(o.text());
                        console.log(a);
                        var r = a.props.pageProps.itemInfo.itemStruct.video;
                        n.customAddVideo({
                            video_id: n.hashCode(),
                            video_group_id: n.hashCode(),
                            name: a.props.pageProps.metaParams.title,
                            poster: r.cover,
                            quality: r.ratio,
                            ext: "mp4",
                            type: "video/mp4",
                            duration: r.duration,
                            url: t
                        })
                    }))
                }
            }]), n
        }(X.a);

        function De(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Ee(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? De(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : De(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Pe(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var Ae = function (e) {
            ne()(n, e);
            var t = Pe(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    this.oldHref !== document.location.href && (this.oldHref = document.location.href, this.videos = [], this.tab_audio_ids = [], le()("video").removeClass(this.INIT_CLASS), le()("audio").removeClass(this.INIT_CLASS)), le()("video").not("." + this.INIT_CLASS).each((function (t, n) {
                        var i = le()(n);
                        if (!i.attr("src") || "" === i.attr("src")) return !1;
                        if (i.on("loadedmetadata", (function () {
                                i.removeClass(e.INIT_CLASS)
                            })), i.attr("src") && -1 !== i.attr("src").indexOf("m4a")) {
                            var o = le()(n),
                                a = le()("._1k5khk").css("background-image") && le()("._1k5khk").css("background-image").slice(4, -1).replace(/['"]/g, "") || le()(".ui-album-art").css("background-image") && le()(".ui-album-art").css("background-image").slice(4, -1).replace(/['"]/g, "") || "";
                            e.addTrack({
                                audio_id: e.hashCode(),
                                url: o.attr("src"),
                                status: T.b.ready,
                                poster: a,
                                album: "",
                                name: le()("._zlqgep").text() || le()("._1lq785d").text(),
                                artist: le()("._rn6qg6").text(),
                                type: "audio/m4a",
                                ext: "m4a"
                            })
                        } else if (-1 !== i.attr("src").indexOf("mp4")) {
                            var r = i.closest(".album-art.cover").css("background-image") && i.closest(".album-art.cover").css("background-image").slice(4, -1).replace(/['"]/g, "") || le()(".ui-album-art").css("background-image") && le()(".ui-album-art").css("background-image").slice(4, -1).replace(/['"]/g, "") || "",
                                s = le()("._9xg3bg a").text() || le()("._zlqgep").text() || le()("._1lq785d").text() || i.closest(".player-view-container").find("h1").text() || le()("._1lq785d").text() || le()("title").text() || "";
                            e.customAddVideo({
                                video_id: e.hashCode(),
                                video_group_id: e.hashCode(),
                                name: s,
                                ext: "mp4",
                                url: i.attr("src"),
                                provider: e.provider,
                                quality: "360p",
                                type: "video/mp4",
                                poster: r
                            })
                        } else e.addVideo(n);
                        i.addClass(e.INIT_CLASS)
                    }))
                }
            }, {
                key: "grabAudioFiles",
                value: function () {
                    var e = this;
                    this.oldHref !== document.location.href && (this.oldHref = document.location.href, le()("audio").removeClass(this.INIT_CLASS), le()("a").removeClass(this.INIT_CLASS));
                    le()("audio").not("." + this.INIT_CLASS).each((function (t, n) {
                        if (!le()(n).attr("src")) return !1;
                        if (-1 !== le()(n).attr("src").indexOf("m4a")) {
                            var i = le()(n),
                                o = le()("._1k5khk").css("background-image") && le()("._1k5khk").css("background-image").slice(4, -1).replace(/['"]/g, "") || le()(".album-art").css("background-image") && le()(".album-art").css("background-image").slice(4, -1).replace(/['"]/g, "") || "";
                            e.addTrack({
                                audio_id: e.hashCode(),
                                url: i.attr("src"),
                                status: T.b.ready,
                                poster: o,
                                album: "",
                                artist: le()(".track-performer").text(),
                                name: i.closest(".player-view-container").find("h1").text(),
                                type: "audio/m4a",
                                ext: "m4a"
                            })
                        }
                        le()(n).on("loadedmetadata", (function () {
                            le()(n).removeClass(e.INIT_CLASS)
                        })), le()(n).addClass(e.INIT_CLASS)
                    }))
                }
            }, {
                key: "getVideoData",
                value: function (e) {
                    var t = this,
                        n = "video" === e.nodeName.toLowerCase() ? e : e.parentElement;
                    return new Promise(function () {
                        var e = E()(C.a.mark((function e(i) {
                            var o, a, r, s, l, c, u;
                            return C.a.wrap((function (e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return o = window.location.href.split("?")[0] + "/frame/box", e.next = 3, t.getFrameData(o);
                                    case 3:
                                        return a = e.sent, r = a.url, s = a.poster, e.next = 8, t.getFileSize(r);
                                    case 8:
                                        return l = e.sent, c = t.getFormatSize(l), e.next = 12, t.getVideoTagParams(n);
                                    case 12:
                                        u = e.sent, i(Ee({
                                            video_id: t.hashCode(),
                                            video_group_id: t.hashCode(),
                                            name: le()("._9xg3bg a").text() || le()("._zlqgep").text() || le()("._1lq785d").text() || $video.closest(".player-view-container").find("h1").text() || le()("._1lq785d").text() || "",
                                            ext: "mp4",
                                            url: r,
                                            provider: t.provider,
                                            quality: "360p",
                                            type: "video/mp4",
                                            poster: s,
                                            size: l,
                                            formatted_size: c
                                        }, u));
                                    case 14:
                                    case "end":
                                        return e.stop()
                                }
                            }), e)
                        })));
                        return function (t) {
                            return e.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "getFrameData",
                value: function (e) {
                    return new Promise((function (t) {
                        var n = le()("<iframe/>", {
                            id: "download-iframe",
                            src: e
                        }).css({
                            display: "none"
                        });
                        le()("body").prepend(n);
                        var i = setInterval((function () {
                            var e = le()(n[0].contentWindow.document.body);
                            if (e.find("video").length > 0 && e.find("video").attr("src")) {
                                var o = e.find("video").attr("src"),
                                    a = e.find(".album-art").css("background-image").slice(4, -1).replace(/['"]/g, "");
                                t({
                                    url: o,
                                    poster: a
                                }), n.remove(), clearInterval(i)
                            }
                        }), 500)
                    }))
                }
            }]), n
        }(X.a);

        function xe(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Te(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? xe(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : xe(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Me(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var Ie = function (e) {
            ne()(i, e);
            var t, n = Me(i);

            function i() {
                var e;
                return Q()(this, i), (e = n.call(this)).ids = [], e.posters = {}, e.async_get_token = le()('script:contains("async_get_token")').text().split('async_get_token":"').pop().split('"')[0], e.user_id = le()('script:contains("async_get_token")').text().split('USER_ID":"').pop().split('"')[0], e
            }
            return $()(i, [{
                key: "grabVideoFiles",
                value: (t = E()(C.a.mark((function e() {
                    var t = this;
                    return C.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (this.oldHref === document.location.href) {
                                    e.next = 4;
                                    break
                                }
                                return this.oldHref = document.location.href, e.next = 4, this.clearFBVideo();
                            case 4:
                                le()('a[href*="/videos/"]').not("." + this.INIT_CLASS).each((function (e, n) {
                                    var i = le()(n);
                                    i.addClass(t.INIT_CLASS);
                                    var o = i.attr("href"),
                                        a = t.GetVideoIdFromURL(o);
                                    "number" == typeof a && "string" == typeof o ? t.GetVideosFromURL(o, !1, "").catch((function (e) {
                                        console.log(e), t.getVideoFromPost(a)
                                    })) : console.log("Wrong id - " + a + " or url - " + o)
                                }));
                            case 5:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function () {
                    return t.apply(this, arguments)
                })
            }, {
                key: "clearFBVideo",
                value: function () {
                    var e = this;
                    return new Promise((function (t) {
                        ce.e.update({
                            where: e.tabId,
                            data: {
                                audio_ids: [],
                                selected_audio_ids: []
                            }
                        }).then((function () {
                            e.videos = [], e.ids = [], e.posters = {}, t("cleared")
                        }))
                    }))
                }
            }, {
                key: "GetVideoIdFromURL",
                value: function (e) {
                    var t = null;
                    try {
                        var n = this.parseURL(e),
                            i = n.query,
                            o = n.path,
                            a = this.ParseQuery(i);
                        if (o.indexOf("ajax/sharer") >= 0) t = a.id;
                        else if (o.indexOf("/videos/") >= 0) {
                            var r = o.split("/").filter((function (e) {
                                return e.length > 0
                            }));
                            t = r[r.length - 1]
                        } else o.indexOf("/watch/") >= 0 ? t = a.v : o.indexOf("permalink.php") >= 0 && (t = a.story_fbid);
                        if (!t) throw new Error("Id not found");
                        t = parseInt(t)
                    } catch (e) {
                        return null
                    }
                    return t
                }
            }, {
                key: "getVideoFromPost",
                value: function (e) {
                    var t = this;
                    this.Fetch("https://m.facebook.com/story.php?story_fbid=".concat(e, "&id=").concat(this.user_id), !1).then((function (e) {
                        var n = t.findOnceMatch(e, /video&quot;,&quot;src&quot;:\s*&quot;([^\"]+)&quot;/);
                        if (n) {
                            var i = n[0].replaceAll("\\", "").replaceAll("&amp;", "&").split("&quot;")[0],
                                o = t.findOnceMatch(e, /img _lt3 _4s0y\" style="background: url\(&#039;\s*([^\"]+)&#039;/);
                            o = o[0] ? o[0].replaceAll("\\", "").replaceAll("3a ", ":").replaceAll("3d ", "=").replaceAll("26 ", "&") : "";
                            var a = le()("<div />", {
                                html: e.split("<strong>")[1].split("</strong>")[0] + " - " + e.split("<abbr>")[1].split("</abbr>")[0]
                            }).text();
                            t.customAddVideo({
                                name: a,
                                poster: o,
                                video_group_id: Object(B.w)(),
                                provider: t.provider,
                                ext: "mp4",
                                type: "video/mp4",
                                video_id: Object(B.w)(),
                                url: i,
                                quality: "240p"
                            })
                        }
                    }))
                }
            }, {
                key: "GetVideosFromURL",
                value: function (e) {
                    var t = this,
                        n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        i = void 0;
                    return null === (i = this.GetVideoIdFromURL(e)) ? console.log(new Error("Wrong video id")) : (e = "https://www.facebook.com/video.php?v=" + i, e = "https://www.facebook.com/plugins/video.php?" + le.a.param({
                        href: e
                    }), this.posters[i] = n, this.Fetch(e, !1).then((function (o) {
                        var a = le()("<output>").append(o),
                            r = (le()("title", a).text(), le()("description", a).attr("content"), t.findMatch(o, /\"ownerName\":\s*\"([^\"]+)\"/gi, "ownerName")),
                            s = t.findMatch(o, /\"video_id\":\s*\"([^\"]+)\"/gi, "video_id"),
                            l = t.findMatch(o, /\"sd_src_no_ratelimit\":\s*\"([^\"]+)\"/gi, "sd_src_no_ratelimit"),
                            c = t.findMatch(o, /\"hd_src_no_ratelimit\":\s*\"([^\"]+)\"/gi, "hd_src_no_ratelimit");
                        if (r.length || (r = t.findOnceMatch(o, /ownerName:\s*\"([^\"]+)\"/)), s.length || (s = t.findOnceMatch(o, /video_id:\s*\"([^\"]+)\"/)).length || (s = [i]), l.length || ((l = t.findOnceMatch(o, /sd_src_no_ratelimit:\s*\"([^\"]+)\"/)).length || (l = t.findMatch(o, /\"sd_src\":\s*\"([^\"]+)\"/gi, "sd_src")), l.length || (l = le()('meta[property="og:video:url"]', a).attr("content")) && (l = [l])), c.length || (c = t.findOnceMatch(o, /hd_src_no_ratelimit:\s*\"([^\"]+)\"/)).length || (c = t.findMatch(o, /\"hd_src\":\s*\"([^\"]+)\"/gi, "hd_src")), r.length || (r = ["Facebook video"]), !s || !l || s.length < l.length) throw new Error("Not found all ids");
                        if (!l.length && !c.length) throw new Error("Not found videos - " + e);
                        n || (n = t.posters[s] || "https://graph.facebook.com/" + s[0] + "/picture");
                        var u = {
                            name: a.find("#u_0_c").text() || r[0],
                            poster: a.find("img.img").attr("src"),
                            video_group_id: Object(B.w)(),
                            provider: t.provider,
                            ext: "mp4",
                            type: "video/mp4"
                        };
                        l[0] && t.customAddVideo(Te(Te({}, u), {}, {
                            video_id: Object(B.w)(),
                            url: l[0],
                            quality: "240p"
                        })), c[0] && t.customAddVideo(Te(Te({}, u), {}, {
                            video_id: Object(B.w)(),
                            url: c[0],
                            quality: "720p"
                        }))
                    })))
                }
            }, {
                key: "findOnceMatch",
                value: function (e, t) {
                    var n = e.match(t);
                    return n ? [n[1]] : []
                }
            }, {
                key: "findMatch",
                value: function (e, t, n) {
                    var i = e.match(t);
                    return i ? i.filter((function (e, t, n) {
                        return n.indexOf(e) === t && e
                    })).map((function (e) {
                        return JSON.parse("{" + e + "}")[n]
                    })) : []
                }
            }]), i
        }(X.a);

        function Le(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function je(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Le(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Le(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Re(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var ze = function (e) {
                ne()(i, e);
                var t, n = Re(i);

                function i() {
                    var e;
                    return Q()(this, i), (e = n.call(this)).videos = [], e
                }
                return $()(i, [{
                    key: "grabVideoFiles",
                    value: function () {
                        var e = this;
                        le()("video").not("." + this.INIT_CLASS).each((function (t, n) {
                            var i = le()(n).find("source:not(" + e.INIT_CLASS + ")");
                            i.length > 0 ? i.each((function (t, n) {
                                e.processVideo(n)
                            })) : e.processVideo(n)
                        }))
                    }
                }, {
                    key: "processVideo",
                    value: function (e) {
                        var t = le()(e),
                            n = e.src;
                        n && (-1 !== n.indexOf("blob:") ? t.addClass(this.INIT_CLASS) : (this.addVideo(e), t.add(this.INIT_CLASS)))
                    }
                }, {
                    key: "addVideo",
                    value: (t = E()(C.a.mark((function e(t) {
                        var n, i, o, a, r = this;
                        return C.a.wrap((function (e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, this._store.getters["app/isUrlProcessed"](t.src);
                                case 2:
                                    if (n = e.sent) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.next = 6, this.getVideoData(t);
                                case 6:
                                    i = e.sent, o = this.tabId, ce.f.insert({
                                        data: je({}, i)
                                    }).then((function (e) {
                                        var t = e.videos[0]; - 1 === r.videos.indexOf(n) && (r.videos.push(t.video_id), r.videos = r.videos.filter((function (e, t, n) {
                                            return n.indexOf(e) === t
                                        })), ce.e.update({
                                            where: o,
                                            data: {
                                                video_ids: c()(r.videos)
                                            }
                                        }))
                                    })), e.next = 12;
                                    break;
                                case 11:
                                    n && (a = this.tabId, -1 === this.videos.indexOf(n) && (this.videos.push(n), this.videos = this.videos.filter((function (e, t, n) {
                                        return n.indexOf(e) === t
                                    })), ce.e.update({
                                        where: a,
                                        data: {
                                            video_ids: c()(this.videos)
                                        }
                                    })));
                                case 12:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    }))), function (e) {
                        return t.apply(this, arguments)
                    })
                }, {
                    key: "getVideoData",
                    value: function (e) {
                        var t = this,
                            n = "video" === e.nodeName.toLowerCase() ? e : e.parentElement;
                        return new Promise(function () {
                            var i = E()(C.a.mark((function i(o) {
                                var a, r, s, l;
                                return C.a.wrap((function (i) {
                                    for (;;) switch (i.prev = i.next) {
                                        case 0:
                                            return i.next = 2, t.getFileSize(e.src);
                                        case 2:
                                            return a = i.sent, r = t.getFormatSize(a), i.next = 6, t.getVideoTagParams(n);
                                        case 6:
                                            s = i.sent, l = le()(n).parent().find(".vjs-poster").css("background-image").slice(4, -1).replace(/['"]/g, "") || "", o(je({
                                                video_id: t.hashCode(),
                                                video_group_id: t.hashCode(),
                                                name: "Video",
                                                ext: "mp4",
                                                url: e.src,
                                                provider: t.provider,
                                                quality: "",
                                                type: e.type || "video/mp4",
                                                poster: l,
                                                size: a,
                                                formatted_size: r
                                            }, s));
                                        case 9:
                                        case "end":
                                            return i.stop()
                                    }
                                }), i)
                            })));
                            return function (e) {
                                return i.apply(this, arguments)
                            }
                        }())
                    }
                }, {
                    key: "getVideoTagParams",
                    value: function (e) {
                        var t = this;
                        return new Promise((function (n) {
                            var i = setInterval((function () {
                                e.readyState >= 3 && (n({
                                    width: e.videoWidth,
                                    height: e.videoHeight,
                                    duration: e.duration,
                                    formatted_duration: t.minsToHrsMins(Math.round(e.duration))
                                }), clearInterval(i))
                            }), 500)
                        }))
                    }
                }, {
                    key: "updateVideoUrl",
                    value: function (e, t, n) {
                        this.getVideoData(e, (function (e) {
                            var i = e.find((function (e) {
                                return e.quality = t
                            }));
                            n(i.url)
                        }))
                    }
                }]), i
            }(X.a),
            Be = n(40),
            Fe = n.n(Be);

        function Ne(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Ue(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ne(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ne(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Ve(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var He = function (e) {
            ne()(i, e);
            var t, n = Ve(i);

            function i() {
                var e;
                return Q()(this, i), e = n.call(this), s()(ee()(e), "selector", (function (e) {
                    return this.getSelectors().map((function (t) {
                        return "." + t + e
                    })).join(",")
                })), e.audios = [], e.processed_track_ids = {}, e.tab_audio_ids = [], e.client_id = "02gUJC0hH2ct1EGOcYXQIzRFU91c72Ea", e.protocol = "https:", e.host = "soundcloud.com", e.selectors = {
                    sound_badge: "soundBadgeList__item",
                    badge: "badgeList__item",
                    sound_list: "soundList__item",
                    track_list: "trackList__item",
                    track_list_system: "systemPlaylistTrackList__item",
                    chart_tracks: "chartTracks__item",
                    engagement: "listenEngagement__actions",
                    listen: "listenContent__sound",
                    search: "searchItem__trackItem",
                    panel: "playbackSoundBadge__avatar",
                    single: "singleSound",
                    discover: "tileGallery__sliderPanelSlide",
                    discover_wave: "seedSound__waveform",
                    history: "historicalPlays__item",
                    cover_flow: "coverFlow__item"
                }, e.FetchClientId(), e
            }
            return $()(i, [{
                key: "grabAudioFiles",
                value: function () {
                    var e = le()(this.selector(":not(." + this.INIT_CLASS + ")"));
                    this.runParsing(e)
                }
            }, {
                key: "runParsing",
                value: function (e) {
                    var t = this;
                    e.each((function (e, n) {
                        var i = le()(n);
                        i.addClass(t.INIT_CLASS);
                        var o, a = t.getSelectorNameByElem(i);
                        if ("string" == typeof a) switch (a) {
                            case "sound_badge":
                            case "sound_list":
                            case "search":
                            case "discover_wave":
                            case "history":
                                o = i.find("a.soundTitle__title[href]").attr("href"), "sound_list" === a && !0;
                                break;
                            case "track_list":
                            case "track_list_system":
                                !0, o = i.find("a.trackItem__trackTitle[href]").attr("href");
                                break;
                            case "badge":
                            case "discover":
                                o = i.find("a.audibleTile__artworkLink[href]").attr("href");
                                break;
                            case "chart_tracks":
                                o = i.find(".chartTrack__title > a[href]").attr("href");
                                break;
                            case "panel":
                                o = i.attr("href");
                                break;
                            case "engagement":
                            case "listen":
                                o = location.href;
                                break;
                            case "single":
                                o = i.find(".soundHeader__title a[href]:last-child").attr("href");
                                break;
                            case "cover_flow":
                                !0, o = i.find("a.audibleTile__artworkLink[href]").attr("href");
                                break;
                            default:
                                return
                        }
                        o && (o = t.getNormalURL(o), t.GetConfigByUrl(o).then((function (e) {
                            var n = e.media.transcodings.find((function (e) {
                                var t = e.format;
                                return "progressive" === t.protocol && "audio/mpeg" === t.mime_type
                            }));
                            if ("object" === Fe()(n)) return n = n.url + "?client_id=" + t.client_id, t.Fetch(n).then((function (n) {
                                var i = Math.round(parseInt(e.duration) / 1e3),
                                    o = {
                                        url: n.url,
                                        status: T.b.ready,
                                        poster: e.artwork_url || e.user.avatar_url,
                                        artist: e.user.username,
                                        album: "",
                                        name: e.title,
                                        title: e.title,
                                        duration: i,
                                        formatted_duration: t.minsToHrsMins(i),
                                        type: "audio/mp3",
                                        ext: "mp3"
                                    };
                                return t.addTrack(o)
                            }));
                            console.log("Play not found")
                        })))
                    }))
                }
            }, {
                key: "addTrack",
                value: (t = E()(C.a.mark((function e(t) {
                    var n, i = this;
                    return C.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this._store.getters["app/isUrlProcessed"](t.url);
                            case 2:
                                (n = e.sent) ? n && -1 === this.tab_audio_ids.indexOf(n) && (this.tab_audio_ids.push(n), ce.e.update({
                                    where: this.tabId,
                                    data: {
                                        audio_ids: c()(this.tab_audio_ids)
                                    }
                                })): ce.a.insert({
                                    data: Ue(Ue({}, t), {}, {
                                        audio_id: Object(B.w)(),
                                        provider: this.provider
                                    })
                                }).then(function () {
                                    var e = E()(C.a.mark((function e(t) {
                                        var o, a;
                                        return C.a.wrap((function (e) {
                                            for (;;) switch (e.prev = e.next) {
                                                case 0:
                                                    o = t.audios, a = o[0], -1 === i.tab_audio_ids.indexOf(n) && (i.tab_audio_ids.push(a.audio_id), ce.e.update({
                                                        where: i.tabId,
                                                        data: {
                                                            audio_ids: c()(i.tab_audio_ids)
                                                        }
                                                    }));
                                                case 3:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    })));
                                    return function (t) {
                                        return e.apply(this, arguments)
                                    }
                                }());
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function (e) {
                    return t.apply(this, arguments)
                })
            }, {
                key: "getSelectorNameByElem",
                value: function (e) {
                    var t, n = this.selectors;
                    for (var i in n)
                        if (e.hasClass(n[i])) {
                            t = i;
                            break
                        } return t
                }
            }, {
                key: "getSelectors",
                value: function () {
                    var e = [];
                    for (var t in this.selectors) e.push(this.selectors[t]);
                    return e
                }
            }, {
                key: "FetchClientId",
                value: function () {
                    var e = this,
                        t = this.protocol + "//" + this.host;
                    return this.Fetch(t, !1).then((function (t) {
                        var n = t.match(/<script[\s\S]*?>[\s\S]*?<\/script>/gi);
                        if (!n || !n.length) throw new Error("Tags must be array");
                        var i = function (e) {
                                var t = e.match(/client_id:\s*\"([^\"]+)\"/),
                                    n = null;
                                return t && (n = t[1]), Promise.resolve(n)
                            },
                            o = n.map((function (t) {
                                var n = le()(t),
                                    o = n.attr("src");
                                return "string" == typeof o && o.length ? function (t) {
                                    return e.Fetch(t, !1).then(i)
                                }(o) : i(n.text())
                            }));
                        return Promise.all(o)
                    })).then((function (t) {
                        var n = t.filter((function (e, t, n) {
                            return e && n.indexOf(e) === t
                        }))[0];
                        if ("string" != typeof n || !n.length) throw new Error("Client id must be string");
                        return e.client_id = n, n
                    }))
                }
            }, {
                key: "GetConfigByUrl",
                value: function (e) {
                    return this.Fetch(e, !1).then((function (e) {
                        var t = e.match(/<script>[\s\S]*?<\/script>/gi);
                        if (!t || !t.length) throw new Error("Tags not found");
                        var n = null;
                        for (var i in t) try {
                            var o = (n = t[i]).indexOf("},[{");
                            if (o < 0) continue;
                            n = (n = n.substr(o + 2)).substr(0, n.length - 11), n = JSON.parse(n);
                            break
                        } catch (e) {}
                        if (!Array.isArray(n)) throw new Error("JSON must be array");
                        return (n = n.reduce((function (e, t) {
                            var n = t.data.filter((function (e) {
                                return e.hasOwnProperty("id") && e.hasOwnProperty("media") && e.hasOwnProperty("kind") && "track" === e.kind
                            }));
                            return n.length ? e.concat(n) : e
                        }), [])).length ? (n = n[0], "object" !== Fe()(n) ? (console.log("JSON must be object to return"), !1) : n) : (console.log("Data not found"), !1)
                    }))
                }
            }, {
                key: "getNormalURL",
                value: function (e) {
                    return (e = e.replace(/#.*$/i, "")).search(/^\/\/(?:[\w-]+\.)?soundcloud\.com(?:\d+)?\//i) > -1 ? e = this.protocol + e : -1 === e.search(/https?:\/\//i) && ("/" !== e.charAt(0) && (e = "/" + e), e = this.protocol + "//" + this.host + e), e = (e = this.parseURL(e)).scheme + "://" + e.host + e.path.replace(/\/sets\//gi, "/")
                }
            }]), i
        }(X.a);

        function qe(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Ke(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? qe(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : qe(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function We(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var Ge = function (e) {
            ne()(n, e);
            var t = We(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    le()('script[type="text/json"]').not("." + this.INIT_CLASS).each((function (t, n) {
                        var i = le()(n),
                            o = JSON.parse(i.text());
                        e.getVideoFromPlayerScript(o), e.getAudioFromPlayerScript(o), i.addClass(e.INIT_CLASS)
                    }))
                }
            }, {
                key: "getVideoFromPlayerScript",
                value: function (e) {
                    var t = this,
                        n = {
                            video_group_id: this.hashCode(),
                            name: e.title,
                            poster: e.small_picture,
                            ext: "mp4",
                            type: "video/mp4"
                        };
                    this.customAddVideo(Ke(Ke({}, n), {}, {
                        video_group_id: this.hashCode(),
                        video_id: this.hashCode(),
                        quality: "720p",
                        url: e.file_versions.share.default,
                        size: e.file_versions.html5.video.high.size,
                        formatted_size: this.getFormatSize(e.file_versions.html5.video.high.size)
                    }));
                    var i = Ke({}, e.file_versions.html5.video);
                    Object.keys(i).forEach((function (e, o) {
                        "med" === e ? t.customAddVideo(Ke(Ke({}, n), {}, {
                            name: "MUTED - ".concat(n.name),
                            video_id: t.hashCode(),
                            quality: "360p",
                            url: i[e].url,
                            size: i[e].size,
                            formatted_size: t.getFormatSize(i[e].size)
                        })) : "high" === e && t.customAddVideo(Ke(Ke({}, n), {}, {
                            video_id: t.hashCode(),
                            quality: "720p",
                            url: i[e].url,
                            size: i[e].size,
                            formatted_size: t.getFormatSize(i[e].size)
                        }))
                    }))
                }
            }, {
                key: "getAudioFromPlayerScript",
                value: function (e) {
                    var t = Ke({}, e.file_versions.html5.audio.high);
                    this.addTrack({
                        url: t.url,
                        name: e.title,
                        poster: e.small_picture,
                        ext: "mp3",
                        type: "audio/mp3",
                        size: t.size,
                        formatted_size: this.getFormatSize(t.size)
                    })
                }
            }]), n
        }(X.a);

        function Ye(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Qe(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ye(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ye(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Je(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var $e = function (e) {
            ne()(n, e);
            var t = Je(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    le()("script.w-json-ld").not("." + this.INIT_CLASS).each((function (t, n) {
                        var i = le()(n),
                            o = JSON.parse(i.text()).embedUrl.split("/"),
                            a = o[o.length - 1];
                        e.Fetch("https://fast.wistia.net/embed/medias/".concat(a, ".json")).then((function (t) {
                            var n = t.media,
                                i = {
                                    name: n.name,
                                    poster: n.embed_options.stillUrl,
                                    video_group_id: e.hashCode(),
                                    ext: "mp4",
                                    type: "video/mp4"
                                };
                            n.assets.forEach((function (t, n) {
                                "mp4" === t.ext && e.customAddVideo(Qe(Qe({}, i), {}, {
                                    video_id: e.hashCode(),
                                    url: t.url.replace(".bin", ".mp4"),
                                    size: t.size,
                                    quality: t.display_name,
                                    formatted_size: e.getFormatSize(t.size)
                                }))
                            }))
                        })), i.addClass(e.INIT_CLASS)
                    }))
                }
            }]), n
        }(X.a);

        function Xe(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Ze(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Xe(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Xe(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function et(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var tt = function (e) {
            ne()(o, e);
            var t, n, i = et(o);

            function o() {
                var e;
                return Q()(this, o), (e = i.call(this)).processVideos(), e
            }
            return $()(o, [{
                key: "grabVideoFiles",
                value: function () {
                    this.oldHref !== window.location.href && (this.videos = [], this.processed_video_urls = {}, this.oldHref = window.location.href, this.processVideos())
                }
            }, {
                key: "processVideos",
                value: function () {
                    this.isSingleVideoPage() && this.grabSinglePageVideo(), this.isPlaylistPage() && this.grabPlaylistVideos()
                }
            }, {
                key: "isSingleVideoPage",
                value: function () {
                    return /\/video/i.test(window.location.pathname)
                }
            }, {
                key: "isPlaylistPage",
                value: function () {
                    return /\/bangumi\/play\/\S+/i.test(window.location.pathname)
                }
            }, {
                key: "grabSinglePageVideo",
                value: (n = E()(C.a.mark((function e() {
                    var t, n, i, o, a = this;
                    return C.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this.getSettings();
                            case 2:
                                (t = e.sent) && t.aid && (n = {
                                    name: t.videoData.title,
                                    poster: t.videoData.pic
                                }, i = t.videoData.aid, o = t.videoData.cid, this.fetchSingleVideo(o, i, 16).then((function (e) {
                                    if (0 === e.code) {
                                        var t = new URL(e.data.durl[0].url),
                                            i = a.getExtension(t.href);
                                        if (!i) return !1;
                                        a.customAddVideo(Ze(Ze({}, n), {}, {
                                            video_group_id: a.hashCode(),
                                            video_id: a.hashCode(),
                                            url: t.href,
                                            quality: "360p",
                                            size: e.data.durl[0].size,
                                            formatted_size: a.getFormatSize(e.data.durl[0].size),
                                            download_only: !0,
                                            can_play: "flv" !== i,
                                            ext: i,
                                            type: "video/".concat(i)
                                        }))
                                    }
                                })), this.fetchSingleVideo(o, i, 32).then((function (e) {
                                    if (0 === e.code) {
                                        var t = new URL(e.data.durl[0].url),
                                            i = a.getExtension(t.href);
                                        if (!i) return !1;
                                        a.customAddVideo(Ze(Ze({}, n), {}, {
                                            video_id: a.hashCode(),
                                            video_group_id: a.hashCode(),
                                            url: t.href,
                                            quality: "480p",
                                            size: e.data.durl[0].size,
                                            formatted_size: a.getFormatSize(e.data.durl[0].size),
                                            can_play: "flv" !== i,
                                            download_only: !0,
                                            ext: i,
                                            type: "video/".concat(i)
                                        }))
                                    }
                                })));
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function () {
                    return n.apply(this, arguments)
                })
            }, {
                key: "grabPlaylistVideos",
                value: (t = E()(C.a.mark((function e() {
                    var t, n, i, o = this;
                    return C.a.wrap((function (e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this.getSettings();
                            case 2:
                                t = e.sent, (n = t.epList.filter((function (e) {
                                    return e.loaded
                                }))[0]) && n.aid && (i = {
                                    name: "".concat(n.longTitle, "(").concat(n.title, ")"),
                                    poster: "https:".concat(n.cover)
                                }, this.fetchPlaylistVideo(n.id, 16).then((function (e) {
                                    if (0 === e.code) {
                                        var t = new URL(e.result.durl[0].url).href,
                                            n = o.getExtension(t).replace("&gen=playurl", "");
                                        if (!n) return !1;
                                        o.customAddVideo(Ze(Ze({}, i), {}, {
                                            video_group_id: o.hashCode(),
                                            video_id: o.hashCode(),
                                            url: t,
                                            quality: "360p",
                                            size: e.result.durl[0].size,
                                            formatted_size: o.getFormatSize(e.result.durl[0].size),
                                            download_only: !0,
                                            ext: n,
                                            type: "video/".concat(n)
                                        }))
                                    }
                                })), this.fetchPlaylistVideo(n.id, 32).then((function (e) {
                                    if (0 === e.code) {
                                        var t = new URL(e.result.durl[0].url).href,
                                            n = o.getExtension(t).replace("&gen=playurl", "");
                                        if (!n) return !1;
                                        o.customAddVideo(Ze(Ze({}, i), {}, {
                                            video_group_id: o.hashCode(),
                                            video_id: o.hashCode(),
                                            url: t,
                                            quality: "480p",
                                            size: e.result.durl[0].size,
                                            formatted_size: o.getFormatSize(e.result.durl[0].size),
                                            download_only: !0,
                                            ext: n,
                                            type: "video/".concat(n)
                                        }))
                                    }
                                })));
                            case 5:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function () {
                    return t.apply(this, arguments)
                })
            }, {
                key: "fetchSingleVideo",
                value: function (e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 112;
                    return new Promise((function (i, o) {
                        var a = "https://api.bilibili.com/x/player/playurl?cid=".concat(e, "&avid=").concat(t, "&otype=json&qn=").concat(n);
                        chrome.runtime.sendMessage({
                            msg: "makeXHRrequest",
                            url: a,
                            config: {
                                credentials: "include"
                            },
                            responseType: "json"
                        }, (function (e) {
                            i(e)
                        }))
                    }))
                }
            }, {
                key: "fetchPlaylistVideo",
                value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 112;
                    return new Promise((function (n, i) {
                        var o = "https://api.bilibili.com/pgc/player/web/playurl/?ep_id=".concat(e, "&qn=").concat(t, "&bsource=");
                        chrome.runtime.sendMessage({
                            msg: "makeXHRrequest",
                            url: o,
                            config: {
                                credentials: "include"
                            },
                            responseType: "json"
                        }, (function (e) {
                            n(e)
                        }))
                    }))
                }
            }, {
                key: "getSettings",
                value: function () {
                    return new Promise((function (e) {
                        console.log("in settings"), fetch(window.location.href, {
                            credentials: "include"
                        }).then((function (e) {
                            return e.text()
                        })).then((function (t) {
                            console.log(t);
                            var n = t.match(/<script>window.__INITIAL_STATE__=(.+?)<\/script>/);
                            e(!(!n || !n[1]) && JSON.parse(n[1].replace(";(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());", "")))
                        }))
                    }))
                }
            }, {
                key: "getExtension",
                value: function (e) {
                    return -1 !== e.indexOf(".mp4") ? "mp4" : "flv"
                }
            }]), o
        }(X.a);

        function nt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function it(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? nt(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : nt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function ot(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var at = function (e) {
            ne()(n, e);
            var t = ot(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    this.oldHref !== window.location.href && (this.oldHref = window.location.href, this.videos = [], this.processed_video_urls = {}, le()(".b-translator__item.active").removeClass(this.INIT_CLASS));
                    var e = le()(".b-simple_episodes__list").length > 0,
                        t = le()(".b-translator__item.active").not("." + this.INIT_CLASS),
                        n = {
                            name: le()(".b-post__title").text(),
                            poster: le()(".b-sidecover img").attr("src"),
                            type: "video/mp4",
                            ext: "mp4"
                        };
                    if (t.length > 0 && t.attr("data-cdn_url")) e ? this.processSerial({
                        id: t.attr("data-translator_id"),
                        title: t.attr("title")
                    }, n) : this.processVideo({
                        id: t.attr("data-translator_id"),
                        title: t.attr("title"),
                        urls: t.attr("data-cdn_url")
                    }, n), t.addClass(this.INIT_CLASS);
                    else {
                        var i = le()("#player").not("." + this.INIT_CLASS);
                        if (i.length > 0) {
                            i.addClass(this.INIT_CLASS);
                            var o = window.location.pathname.split("/"),
                                a = o[o.length - 1].split("-")[0],
                                r = le()("script:contains($(function () { sof.tv)").text(),
                                s = r.substring(r.indexOf(a)).substring(0, r.indexOf("{")).split(",")[1];
                            if (e) this.processSerial({
                                id: s
                            }, n);
                            else {
                                var l = r.substring(r.indexOf('"streams":"') + '"streams":"'.length).split('",')[0];
                                this.processVideo({
                                    urls: l
                                }, n)
                            }
                        }
                    }
                }
            }, {
                key: "processSerial",
                value: function (e, t) {
                    var n = this,
                        i = le()(".b-simple_season__item.active").attr("data-tab_id");
                    le()(".b-simple_episode__item[data-season_id=".concat(i, "]")).each((function (o, a) {
                        var r = le()(a),
                            s = new FormData;
                        s.append("id", r.attr("data-id")), s.append("translator_id", e.id), s.append("season", i), s.append("episode", r.attr("data-episode_id")), s.append("action", "get_stream"), fetch("https://rezka.ag/ajax/get_cdn_series/?t=".concat(Date.now() + 99999999), {
                            credentials: "include",
                            method: "POST",
                            body: s
                        }).then((function (e) {
                            return e.json()
                        })).then((function (i) {
                            if (i.success)
                                for (var o = n.parseURLs(i.url), a = n.hashCode(), s = 0; s < o.length; s++) {
                                    o[s].split("/");
                                    var l = o[s].split("]")[0].replace("[").split(" ")[0],
                                        c = e.title ? "(".concat(e.title, ")") : "";
                                    n.customAddVideo(it(it({}, t), {}, {
                                        name: "".concat(t.name, " season ").concat(r.attr("data-season_id"), " serie ").concat(r.attr("data-episode_id"), " ").concat(c),
                                        video_group_id: a,
                                        video_id: n.hashCode(),
                                        url: o[s].split("]")[1],
                                        quality: l
                                    }))
                                }
                        }))
                    }))
                }
            }, {
                key: "processVideo",
                value: function (e, t) {
                    for (var n = this.parseURLs(e.urls), i = this.hashCode(), o = 0; o < n.length; o++) {
                        var a = n[o].split("]")[0].replace("[").split(" ")[0],
                            r = e.title ? "(".concat(e.title, ")") : "";
                        this.customAddVideo(it(it({}, t), {}, {
                            name: "".concat(t.name).concat(r),
                            video_group_id: i,
                            video_id: this.hashCode(),
                            url: n[o].split("]")[1],
                            quality: a
                        }))
                    }
                }
            }, {
                key: "parseURLs",
                value: function (e) {
                    for (var t = e.split(","), n = 0; n < t.length; n++) t[n] = t[n].split(" or ")[0].replace(/\\/g, "").replace(":hls:manifest.m3u8", "");
                    return t
                }
            }]), n
        }(X.a);

        function rt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function st(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? rt(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : rt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function lt(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var ct = function (e) {
                ne()(n, e);
                var t = lt(n);

                function n() {
                    return Q()(this, n), t.apply(this, arguments)
                }
                return $()(n, [{
                    key: "grabVideoFiles",
                    value: function () {
                        var e = this;
                        le()("figure[data-videoconfig]").not("." + this.INIT_CLASS).each((function (t, n) {
                            var i = le()(n),
                                o = i.attr("data-videoconfig").replace(/\'/g, '"');
                            e.processVideo(JSON.parse(o).playlist), i.addClass(e.INIT_CLASS)
                        }))
                    }
                }, {
                    key: "processVideo",
                    value: function (e) {
                        for (var t = {
                                video_group_id: this.hashCode(),
                                type: "video/mp4",
                                ext: "mp4"
                            }, n = 0; n < e.length; n++)
                            for (var i = e[n], o = 0; o < i.sources.length; o++) this.customAddVideo(st(st({}, t), {}, {
                                name: le()(".standalone__title_videostandalone").text(),
                                video_id: this.hashCode(),
                                poster: i.image,
                                quality: parseInt(i.sources[o].label) + "p",
                                url: i.sources[o].file
                            }))
                    }
                }]), n
            }(X.a),
            ut = n(435);

        function dt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function ft(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? dt(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : dt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function _t(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var pt = function (e) {
                ne()(n, e);
                var t = _t(n);

                function n() {
                    var e;
                    return Q()(this, n), e = t.call(this), setTimeout((function () {
                        e.parseVideos()
                    }), 1e3), e
                }
                return $()(n, [{
                    key: "grabVideoFiles",
                    value: function () {
                        var e = this;
                        this.oldHref !== window.location.href && (this.oldHref = window.location.href, ce.e.update({
                            where: this.tabId,
                            data: {
                                audio_ids: [],
                                selected_audio_ids: []
                            }
                        }).then((function () {
                            e.videos = [], e.processed_video_urls = {}, e.parseVideos()
                        })))
                    }
                }, {
                    key: "parseVideos",
                    value: function () {
                        var e = this,
                            t = this.getVideoId();
                        return this.Fetch("https://ups.youku.com/ups/get.json?vid=".concat(t, "&ccode=0501&client_ip=&client_ts=&utid=")).then((function (t) {
                            var n = t.data;
                            if (n && Object.keys(n).length > 0) {
                                var i = n.video;
                                console.log(n);
                                for (var o = n.stream, a = {
                                        name: i.title,
                                        poster: i.logo
                                    }, r = [], s = 0; s < o.length; s++) {
                                    var l = i.stream_ext[o[s].audio_lang][o[s].stream_type].resolu;
                                    r.push.apply(r, c()(e.getSegmentsFromStream(ft(ft({}, a), {}, {
                                        quality: l
                                    }), o[s])))
                                }
                                r.sort((function (e, t) {
                                    return e.quality < t.quality ? -1 : e.q > t.quality ? 1 : 0
                                }));
                                for (var u = 0; u < r.length; u++) e.customAddVideo(ft(ft({}, r[u]), {}, {
                                    video_group_id: e.hashCode()
                                }))
                            }
                        })), !1
                    }
                }, {
                    key: "getSegmentsFromStream",
                    value: function (e, t) {
                        var n = [],
                            i = t.stream_type,
                            o = t.segs,
                            a = "";
                        if (-1 !== i.indexOf("mp4") || -1 !== i.indexOf("3gp")) a = "mp4";
                        else {
                            if (-1 === i.indexOf("flv")) return !1;
                            a = "flv"
                        }
                        for (var r = 0; r < o.length; r++) {
                            var s = t.segs.length > 1 ? "".concat(e.name, "_seg_").concat(r + 1) : e.name;
                            n.push(ft(ft({}, e), {}, {
                                video_id: this.hashCode(),
                                name: s,
                                groupId: "".concat(s, "_").concat(a),
                                url: o[r].cdn_url,
                                ext: a,
                                type: "video/".concat(a),
                                stream_type: i,
                                size: o[r].size,
                                formatted_size: this.getFormatSize(o[r].size),
                                download_only: "flv" === a
                            }))
                        }
                        return n
                    }
                }, {
                    key: "getVideoId",
                    value: function () {
                        return -1 !== this.oldHref.indexOf("v_show") && window.location.pathname.split("/")[2].replace("id_", "").split(".html")[0]
                    }
                }, {
                    key: "sortSemgents",
                    value: function (e, t) {
                        var n = (e = e.split(".")).length;
                        return t.sort((function (t, i) {
                            for (var o = 0; o < n;) t = t[e[o]], i = i[e[o]], o++;
                            return t < i ? -1 : t > i ? 1 : 0
                        })), t
                    }
                }]), n
            }(X.a),
            ht = n(436);

        function gt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function mt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? gt(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : gt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function vt(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var bt = function (e) {
                ne()(n, e);
                var t = vt(n);

                function n() {
                    var e;
                    return Q()(this, n), (e = t.call(this)).processVideos(), e
                }
                return $()(n, [{
                    key: "grabVideoFiles",
                    value: function () {
                        this.oldHref !== window.location.href && (this.videos = [], this.processed_video_urls = {}, this.oldHref = window.location.href, this.processVideos())
                    }
                }, {
                    key: "processVideos",
                    value: function () {
                        var e = this.getIdFromLocation();
                        e && this.getVideoData(e)
                    }
                }, {
                    key: "getIdFromLocation",
                    value: function () {
                        return /^\/\w{0,2}$/.test(location.pathname) ? null : location.pathname.replace("/video/", "")
                    }
                }, {
                    key: "validationId",
                    value: function (e) {
                        return /[\w\d]{1,9}/i.test(e)
                    }
                }, {
                    key: "parseMpegString",
                    value: function (e) {
                        return e.split("\n").slice(1, -1).reduce((function (e, t, n, i) {
                            return n % 2 != 0 ? e : [].concat(c()(e), [{
                                props: t,
                                stream: i[n + 1]
                            }])
                        }), [])
                    }
                }, {
                    key: "mapKeys",
                    value: function (e, t) {
                        return {
                            formatId: t,
                            formatName: "mp4",
                            formatNote: "".concat(e.NAME, "p"),
                            formatWidth: Number(e.NAME),
                            formatType: "video",
                            formatCodec: e.CODECS,
                            url: e["PROGRESSIVE-URI"]
                        }
                    }
                }, {
                    key: "parseMPEGData",
                    value: function (e, t) {
                        var n = this,
                            i = e.props,
                            o = i.match(/[A-Z\-_]+=/g);
                        if (o) {
                            var a = o.map((function (e) {
                                return e.replace("=", "")
                            })).reduce((function (e, t, o, a) {
                                var r = a[o + 1],
                                    l = n.betweenStr(i, "".concat(t, "="), r ? ",".concat(r) : void 0).replace(/\"/g, "");
                                return l ? mt(mt({}, e), {}, s()({}, t, l)) : e
                            }), {});
                            return this.mapKeys(a, t)
                        }
                    }
                }, {
                    key: "getFormats",
                    value: function () {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new Promise((function (n, i) {
                            var o = t.qualities,
                                a = (void 0 === o ? {} : o).auto;
                            a && 0 !== a.length || n([]);
                            var r = a[0];
                            e.Fetch(r.url, !1).then((function (t) {
                                t || n([]);
                                var i = e.parseMpegString(t).map((function (t, n) {
                                    return e.parseMPEGData(t, n)
                                }));
                                n(e.sortFormatsByWidth(e.filterUnique(i)))
                            }))
                        }))
                    }
                }, {
                    key: "getVideoData",
                    value: function (e) {
                        var t = this;
                        if (!this.validationId(e)) throw Error("No valid id");
                        var n = new URL("https://www.dailymotion.com/player/metadata/video/");
                        n.pathname = n.pathname + e, n.searchParams.append("app", "com.dailymotion.neon"), n.searchParams.append("locale", "en"), n.searchParams.append("client_type", "website");
                        this.Fetch(n.href, !0).then((function (e) {
                            return Promise.all([{
                                id: e.view_id,
                                title: e.title,
                                poster: e.posters[180]
                            }, t.getFormats(e)])
                        })).then((function (e) {
                            for (var n = c()(e[1]), i = {
                                    video_group_id: t.hashCode(),
                                    name: e[0].title,
                                    provider: t.provider,
                                    poster: e[0].poster,
                                    ext: "mp4",
                                    type: "video/mp4"
                                }, o = 0; o < n.length; o++) t.customAddVideo(mt(mt({}, i), {}, {
                                video_id: t.hashCode(),
                                url: n[o].url,
                                quality: n[o].formatNote.split("@")[0].match(/\d+/)[0]
                            }))
                        })).catch((function (e) {
                            return console.error(e)
                        }))
                    }
                }, {
                    key: "filterUnique",
                    value: function (e) {
                        return e.reduce((function (e, t) {
                            return -1 !== e.findIndex((function (e) {
                                return e.formatNote === t.formatNote
                            })) ? e : [].concat(c()(e), [t])
                        }), [])
                    }
                }, {
                    key: "sortFormatsByWidth",
                    value: function (e) {
                        return e.sort((function (e, t) {
                            return t.formatWidth >= e.formatWidth ? 1 : -1
                        }))
                    }
                }, {
                    key: "betweenStr",
                    value: function (e, t, n) {
                        if (!t && !n) return e;
                        var i = "",
                            o = e.indexOf(t);
                        if (-1 === o && (i = ""), o >= 0 && (i = e.substr(o + t.length, e.length)), !n) return i;
                        var a = i.indexOf(n);
                        return -1 === a && -1 !== o || -1 === a ? "" : i = i.substr(0, a)
                    }
                }]), n
            }(X.a),
            yt = n(437);

        function wt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function St(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? wt(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : wt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Ot(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var kt = function (e) {
            ne()(n, e);
            var t = Ot(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = le()("#video-player-bg > script:contains('new HTML5Player')").not("." + this.INIT_CLASS)[0];
                    e && (le()(e).addClass(this.INIT_CLASS), this.getVideoFromPlayerScript(e))
                }
            }, {
                key: "getVideoFromPlayerScript",
                value: function (e) {
                    var t = e.innerHTML;
                    t = t.substring(t.indexOf("if (html5player) {") + 1, t.indexOf("html5player.setThumbSlideMinute("));
                    var n = {
                        video_group_id: this.hashCode(),
                        name: t.substring(t.indexOf("setVideoTitle('"), t.length).split("'")[1],
                        poster: t.substring(t.indexOf("setThumbUrl('"), t.length).split("'")[1],
                        ext: "mp4",
                        type: "video/mp4"
                    };
                    this.customAddVideo(St(St({}, n), {}, {
                        video_id: this.hashCode(),
                        quality: "240p",
                        url: t.substring(t.indexOf("setVideoUrlLow('"), t.length).split("'")[1]
                    })), this.customAddVideo(St(St({}, n), {}, {
                        video_id: this.hashCode(),
                        quality: "720p",
                        url: t.substring(t.indexOf("setVideoUrlHigh('"), t.length).split("'")[1]
                    }))
                }
            }]), n
        }(X.a);

        function Ct(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Dt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ct(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ct(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Et(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var Pt = function (e) {
                ne()(n, e);
                var t = Et(n);

                function n() {
                    return Q()(this, n), t.apply(this, arguments)
                }
                return $()(n, [{
                    key: "grabVideoFiles",
                    value: function () {
                        var e = le()("#initials-script").not("." + this.INIT_CLASS)[0];
                        e && (le()(e).addClass(this.INIT_CLASS), this.getVideoFromPlayerScript(e))
                    }
                }, {
                    key: "getVideoFromPlayerScript",
                    value: function (e) {
                        var t = this,
                            n = e.innerHTML,
                            i = window.eval(n).videoModel;
                        if (i) {
                            var o = {
                                video_group_id: this.hashCode(),
                                name: i.titleLocalized,
                                poster: i.thumbURL,
                                duration: i.duration,
                                ext: "mp4",
                                type: "video/mp4"
                            };
                            Object.keys(i.sources.download).forEach((function (e) {
                                t.customAddVideo(Dt(Dt({}, o), {}, {
                                    video_id: t.hashCode(),
                                    quality: e,
                                    url: i.sources.mp4[e]
                                }))
                            }))
                        }
                    }
                }]), n
            }(X.a),
            At = n(438);

        function xt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Tt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? xt(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : xt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Mt(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var It = function (e) {
            ne()(n, e);
            var t = Mt(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = le()("script:contains(var flashvars =)").not("." + this.INIT_CLASS) && le()("script:contains(var flashvars =)").not("." + this.INIT_CLASS)[0];
                    e && (le()(e).addClass(this.INIT_CLASS), this.getVideoFromPlayerScript(e))
                }
            }, {
                key: "getVideoFromPlayerScript",
                value: function (e) {
                    var t = this,
                        n = e.innerHTML.substring(e.innerHTML.indexOf("flashvars"), e.innerHTML.indexOf("}};") + 3),
                        i = window.eval(n),
                        o = {
                            video_group_id: this.hashCode(),
                            name: i.video_title,
                            poster: i.image_url
                        };
                    i.mediaDefinition.forEach((function (e) {
                        -1 !== e.videoUrl.indexOf("mp4") && t.customAddVideo(Tt(Tt({}, o), {}, {
                            video_id: t.hashCode(),
                            ext: "mp4",
                            type: "video/mp4",
                            quality: e.quality,
                            url: e.videoUrl
                        }))
                    }))
                }
            }]), n
        }(X.a);

        function Lt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function jt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Lt(Object(n), !0).forEach((function (t) {
                    s()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Lt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function Rt(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var zt = function (e) {
            ne()(n, e);
            var t = Rt(n);

            function n() {
                return Q()(this, n), t.apply(this, arguments)
            }
            return $()(n, [{
                key: "grabVideoFiles",
                value: function () {
                    var e = this;
                    this.oldHref !== window.location.href && (this.oldHref = window.location.href, ce.e.update({
                        where: this.tabId,
                        data: {
                            audio_ids: [],
                            selected_audio_ids: []
                        }
                    }).then((function () {
                        e.videos = [], e.processed_video_urls = {}, le()("video").removeClass(e.INIT_CLASS)
                    }))), le()("video").not("." + this.INIT_CLASS).each((function (t, n) {
                        le()(n).addClass(e.INIT_CLASS);
                        var i = le()(n).find("source:not(" + e.INIT_CLASS + ")");
                        i.length > 0 ? i.each((function (t, n) {
                            le()(n).addClass(e.INIT_CLASS), e.processVideo(n)
                        })) : e.processVideo(n)
                    }))
                }
            }, {
                key: "getVideoData",
                value: function (e) {
                    var t = this,
                        n = "video" === e.nodeName.toLowerCase() ? e : e.parentElement;
                    return new Promise(function () {
                        var i = E()(C.a.mark((function i(o) {
                            var a, r, s, l;
                            return C.a.wrap((function (i) {
                                for (;;) switch (i.prev = i.next) {
                                    case 0:
                                        return i.next = 2, t.getFileSize(e.src);
                                    case 2:
                                        return a = i.sent, r = t.getFormatSize(a), i.next = 6, t.getVideoTagParams(n);
                                    case 6:
                                        s = i.sent, l = t.getFileNameFromUrl(e.src, "video"), o(jt({
                                            video_id: t.hashCode(),
                                            video_group_id: t.hashCode(),
                                            name: le()("head title").text() && le()("head title").text().split("#")[0],
                                            ext: l.ext,
                                            url: e.src,
                                            provider: t.provider,
                                            quality: "",
                                            type: e.type || "video/".concat(l.ext),
                                            poster: n.poster || "",
                                            size: a,
                                            formatted_size: r
                                        }, s));
                                    case 9:
                                    case "end":
                                        return i.stop()
                                }
                            }), i)
                        })));
                        return function (e) {
                            return i.apply(this, arguments)
                        }
                    }())
                }
            }]), n
        }(X.a);

        function Bt(e) {
            var t = function () {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function () {
                var n, i = re()(e);
                if (t) {
                    var o = re()(this).constructor;
                    n = Reflect.construct(i, arguments, o)
                } else n = i.apply(this, arguments);
                return oe()(this, n)
            }
        }
        var Ft = function (e) {
                ne()(i, e);
                var t, n = Bt(i);

                function i() {
                    var e;
                    return Q()(this, i), (e = n.call(this)).videos = [], e.audios = [], e.processed_video_urls = {}, e.isStarted = !1, e
                }
                return $()(i, [{
                    key: "run",
                    value: (t = E()(C.a.mark((function e(t) {
                        var n, i, o, a = this;
                        return C.a.wrap((function (e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (n = t.tabId, i = t.provider, o = t.store, n) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 3:
                                    return this.tabId = n, this.provider = i, this._store = o, this.setAppCookie(), e.next = 9, this._store.getters["app/isImageSnifferEnableOnTab"](this.tabId);
                                case 9:
                                    this.isImageSnifferEnabled = e.sent, this.setWatchers(n), ce.e.update({
                                        where: n,
                                        data: {
                                            image_ids: [],
                                            video_ids: [],
                                            audio_ids: []
                                        }
                                    }).then((function () {
                                        a.runObserver()
                                    })), this.pushDemoVideos(), this.pushDemoAudios();
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    }))), function (e) {
                        return t.apply(this, arguments)
                    })
                }, {
                    key: "setAppCookie",
                    value: function () {
                        var e = this._store.getters["user/getAppId"];
                        Object(B.z)("app_uuid") && Object(B.z)("app_uuid") === e || Object(B.O)("app_uuid", e, {
                            expires: 99999999
                        })
                    }
                }, {
                    key: "search",
                    value: function () {
                        var e = window.location.hostname.replace("www.", ""),
                            t = this._store.getters["options/isSnifferEnableForDomain"]("image", e);
                        this.isImageSnifferEnabled && t && this.grabImageFiles()
                    }
                }, {
                    key: "pushDemoVideos",
                    value: function () {
                        this.customAddVideo({
                            video_group_id: this.hashCode(),
                            video_id: this.hashCode(),
                            name: "ODM Images",
                            provider: this.provider,
                            url: "https://download-manager.online/video/ODM-images.mp4",
                            quality: "720p",
                            ext: "mp4",
                            type: "video/mp4"
                        }), this.customAddVideo({
                            video_group_id: this.hashCode(),
                            video_id: this.hashCode(),
                            name: "ODM Music",
                            provider: this.provider,
                            url: "https://download-manager.online/video/ODM-music.mp4",
                            quality: "720p",
                            ext: "mp4",
                            type: "video/mp4"
                        }), this.customAddVideo({
                            video_group_id: this.hashCode(),
                            video_id: this.hashCode(),
                            name: "ODM Video",
                            provider: this.provider,
                            url: "https://download-manager.online/video/ODM-video.mp4",
                            quality: "720p",
                            ext: "mp4",
                            type: "video/mp4"
                        })
                    }
                }, {
                    key: "pushDemoAudios",
                    value: function () {
                        this.addTrack({
                            name: "Nothing else metters",
                            artist: "Metallica",
                            poster: "https://i1.sndcdn.com/artworks-000012944830-3sx8y4-t200x200.jpg",
                            url: "https://rorg.z1.fm/4/87/metallica_-_nothing_else_metters_(zf.fm).mp3",
                            status: "READY",
                            ext: "mp3",
                            type: "audio/mp3"
                        }), this.addTrack({
                            name: "Highway to Hell",
                            artist: "AC/DC",
                            poster: "https://i1.sndcdn.com/artworks-000093401997-n3poaj-t200x200.jpg",
                            url: "https://st1.z1.fm/music/6/d9/acdc_-_highway_to_hell_(zvukoff.ru).mp3",
                            status: "READY",
                            ext: "mp3",
                            type: "audio/mp3"
                        })
                    }
                }]), i
            }(X.a),
            Nt = function () {
                function e() {
                    Q()(this, e), this._store = H.a, this.pr = null, this.run()
                }
                var t;
                return $()(e, [{
                    key: "run",
                    value: (t = E()(C.a.mark((function e() {
                        var t;
                        return C.a.wrap((function (e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, this.getTabData();
                                case 2:
                                    t = e.sent, this.initProvider(t);
                                case 4:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    }))), function () {
                        return t.apply(this, arguments)
                    })
                }, {
                    key: "getTabData",
                    value: function () {
                        var e = this;
                        return new Promise((function (t) {
                            chrome.runtime.sendMessage({
                                msg: "getTabId"
                            }, (function (n) {
                                var i = ce.e.find(n);
                                if (i) t(i);
                                else var o = e._store.watch((function (e) {
                                    return e.ormDB.tabs.data
                                }), (function (e) {
                                    e[n] && (t(e[n]), o())
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "initProvider",
                    value: function (e) {
                        var t = e.tab_id,
                            n = e.provider;
                        console.log(n, "<<<<<"), n === T.g.vk ? this.pr = new _e : n === T.g.ig ? this.pr = new me : n === T.g.tw ? this.pr = new Oe : n === T.g.tt ? this.pr = new Ce : n === T.g.fb ? this.pr = new Ie : n === T.g.cb ? this.pr = new Ge : n === T.g.odm ? this.pr = new Ft : n === T.n.vm ? this.pr = new he : n === T.n.sm ? this.pr = new Ae : n === T.n.in ? this.pr = new ze : n === T.n.sc ? this.pr = new He : n === T.n.wi ? this.pr = new $e : n === T.n.hr ? this.pr = new at : n === T.n.wd ? this.pr = new ct : n === T.n.nt ? this.pr = new ut.a : n === T.n.yk ? this.pr = new pt : n === T.n.bi ? this.pr = new tt : n === T.n.rj ? this.pr = new ht.a : n === T.n.dm ? this.pr = new bt : n === T.n.ph ? this.pr = new yt.a : n === T.n.xn || n === T.n.xv ? this.pr = new kt : n === T.n.xh ? this.pr = new Pt : n === T.n.yp ? this.pr = new At.a : n === T.n.t8 ? this.pr = new It : n === T.n.sx ? this.pr = new zt : this.pr = new X.a, this.pr && this.pr.run({
                            tabId: t,
                            provider: n,
                            store: this._store
                        })
                    }
                }]), e
            }();
        chrome.runtime.sendMessage({
            msg: "getTabUrl"
        }, (function (e) {
            window.location.href === e && (window.onload = function () {
                window.ContentScript = new Nt
            })
        })), chrome.runtime.sendMessage({
            msg: "getTabUrl"
        }, (function (e) {
            if (window.location.href === e) {
                i.a.use(o.a), i.a.config.productionTip = !1;
                var t = new o.a({
                        locale: "en",
                        fallbackLocale: "en",
                        messages: a.a
                    }),
                    n = document.createElement("div");
                n.id = "dm-extension-sniffer", document.body.prepend(n);
                new i.a({
                    el: "#dm-extension-sniffer",
                    store: H.a,
                    i18n: t,
                    render: function (e) {
                        return e(G)
                    }
                })
            }
        }))
    },
    8: function (e, t, n) {
        "use strict";
        var i = {};
        n.r(i), n.d(i, "connectionStatus", (function () {
            return R
        })), n.d(i, "isAppReady", (function () {
            return j
        })), n.d(i, "isMinimize", (function () {
            return z
        })), n.d(i, "popupRoute", (function () {
            return F
        })), n.d(i, "isUrlProcessed", (function () {
            return B
        })), n.d(i, "imageSnifferEnabledTabsCount", (function () {
            return Y
        })), n.d(i, "isImageSnifferEnableOnTab", (function () {
            return Q
        })), n.d(i, "getPopupPlayerActiveMediaId", (function () {
            return U
        })), n.d(i, "getPopupPlayerActiveMediaUrl", (function () {
            return V
        })), n.d(i, "getPopupPlayerState", (function () {
            return H
        })), n.d(i, "getPopupPlayerProgressTime", (function () {
            return q
        })), n.d(i, "getPopupPlayerProgressPercentage", (function () {
            return K
        })), n.d(i, "getPopupActiveMediaConfig", (function () {
            return N
        })), n.d(i, "getPopupPlayerActiveMediaDuration", (function () {
            return W
        })), n.d(i, "isPopupPlayerVideoMuted", (function () {
            return G
        })), n.d(i, "getPopupQRCodeURL", (function () {
            return J
        }));
        var o = {};
        n.r(o), n.d(o, "setPopupRoute", (function () {
            return X
        })), n.d(o, "setAppStatus", (function () {
            return Z
        })), n.d(o, "setConnectionStatus", (function () {
            return ee
        })), n.d(o, "togglePopupView", (function () {
            return te
        })), n.d(o, "addProcessedUrl", (function () {
            return ne
        })), n.d(o, "removeProcessedUrl", (function () {
            return ie
        })), n.d(o, "enableTabImgSniffer", (function () {
            return oe
        })), n.d(o, "disableTabImgSniffer", (function () {
            return ae
        })), n.d(o, "disableAllImgSniffers", (function () {
            return re
        })), n.d(o, "setPopupPlayerMedia", (function () {
            return se
        })), n.d(o, "resetPopupPlayerMedia", (function () {
            return le
        })), n.d(o, "setPopupPlayerTime", (function () {
            return ce
        })), n.d(o, "setPopupPlayerActiveMediaDuration", (function () {
            return ue
        })), n.d(o, "setPopupPlayerState", (function () {
            return de
        })), n.d(o, "togglePopupPlayerPlayPause", (function () {
            return fe
        })), n.d(o, "togglePopupPlayerVideoMute", (function () {
            return _e
        })), n.d(o, "setPopupQRCodeURL", (function () {
            return pe
        }));
        var a = {};
        n.r(a), n.d(a, "getOption", (function () {
            return ve
        })), n.d(a, "getLocale", (function () {
            return be
        })), n.d(a, "isDefaultDownloadBar", (function () {
            return ye
        })), n.d(a, "isIconIndicator", (function () {
            return we
        })), n.d(a, "isDarkIcon", (function () {
            return Se
        })), n.d(a, "isContextMenu", (function () {
            return Oe
        })), n.d(a, "notificationParameter", (function () {
            return ke
        })), n.d(a, "downloadsCategory", (function () {
            return Ce
        })), n.d(a, "getDefaultFileTypes", (function () {
            return De
        })), n.d(a, "getSnifferOptions", (function () {
            return Ee
        })), n.d(a, "getSnifferDomainsList", (function () {
            return Pe
        })), n.d(a, "isSnifferEnableForDomain", (function () {
            return Ae
        })), n.d(a, "getTutorialLanguage", (function () {
            return xe
        })), n.d(a, "isTutorialViewed", (function () {
            return Te
        })), n.d(a, "getDownloadsAutoCleanValue", (function () {
            return Me
        })), n.d(a, "getLinkCategoriesToSniff", (function () {
            return Ie
        })), n.d(a, "getLinkExtsToSniff", (function () {
            return Le
        }));
        var r = {};
        n.r(r), n.d(r, "toggleSettings", (function () {
            return Ne
        })), n.d(r, "toggleNotificationType", (function () {
            return Ue
        })), n.d(r, "addFileExtension", (function () {
            return We
        })), n.d(r, "removeFileExtension", (function () {
            return Ge
        })), n.d(r, "updateFileRouteType", (function () {
            return Ke
        })), n.d(r, "toggleFileRouteRule", (function () {
            return Ve
        })), n.d(r, "addFileRoutesRule", (function () {
            return He
        })), n.d(r, "removeFileRoutesRule", (function () {
            return qe
        })), n.d(r, "setSnifferFiltration", (function () {
            return Ye
        })), n.d(r, "addDomainToSniffer", (function () {
            return Qe
        })), n.d(r, "updateDomainUrlInSniffer", (function () {
            return Je
        })), n.d(r, "toggleDomainInSniffer", (function () {
            return $e
        })), n.d(r, "removeDomainFromSniffer", (function () {
            return Xe
        })), n.d(r, "setTutorialLanguage", (function () {
            return Ze
        })), n.d(r, "setTutorialViewed", (function () {
            return et
        })), n.d(r, "setDownloadsAutoClean", (function () {
            return tt
        })), n.d(r, "setLinkCategoriesToSniff", (function () {
            return nt
        })), n.d(r, "setLinkExtsToSniff", (function () {
            return it
        }));
        var s = {};
        n.r(s), n.d(s, "getAppId", (function () {
            return rt
        })), n.d(s, "isUserLoggedIn", (function () {
            return st
        })), n.d(s, "getUserStatus", (function () {
            return lt
        })), n.d(s, "getUserApiToken", (function () {
            return ct
        })), n.d(s, "getUserData", (function () {
            return ut
        })), n.d(s, "getLastUpdateTimestamp", (function () {
            return dt
        })), n.d(s, "isUserHaveAccess", (function () {
            return ft
        })), n.d(s, "getCloudServiceData", (function () {
            return _t
        })), n.d(s, "getUserRating", (function () {
            return pt
        })), n.d(s, "getPopupBannerType", (function () {
            return ht
        })), n.d(s, "isCustomSnifferViewed", (function () {
            return gt
        }));
        var l = {};
        n.r(l), n.d(l, "setAppId", (function () {
            return Ct
        })), n.d(l, "setUserApiToken", (function () {
            return Dt
        })), n.d(l, "updateUserData", (function () {
            return Et
        })), n.d(l, "userLogOut", (function () {
            return Pt
        })), n.d(l, "dropBoxLogIn", (function () {
            return At
        })), n.d(l, "googleDriveRefreshToken", (function () {
            return Mt
        })), n.d(l, "dropboxLogOut", (function () {
            return xt
        })), n.d(l, "googleDriveLogIn", (function () {
            return Tt
        })), n.d(l, "googleDriveLogOut", (function () {
            return It
        })), n.d(l, "setUserRating", (function () {
            return Lt
        })), n.d(l, "increaseTabSConversions", (function () {
            return jt
        })), n.d(l, "closeBanner", (function () {
            return Rt
        })), n.d(l, "setCustomSnifferViewed", (function () {
            return zt
        }));
        n(5);
        var c = n(1),
            u = n.n(c),
            d = (n(14), n(32)),
            f = n(18),
            _ = n(11),
            p = n.n(_),
            h = n(12),
            g = n.n(h),
            m = new(function () {
                function e() {
                    return p()(this, e), e.instance || (this.loggerLevel = "warning", this.levels = ["verbose", "debug", "info", "warning", "error", "none"], e.instance = this), e.instance
                }
                return g()(e, [{
                    key: "setLoggerLevel",
                    value: function (e) {
                        this.loggerLevel = e
                    }
                }, {
                    key: "shouldLog",
                    value: function (e) {
                        return this.levels.indexOf(e) >= this.levels.indexOf(this.loggerLevel)
                    }
                }, {
                    key: "verbose",
                    value: function (e) {
                        this.printMessage("verbose", e)
                    }
                }, {
                    key: "debug",
                    value: function (e) {
                        this.printMessage("debug", e)
                    }
                }, {
                    key: "info",
                    value: function (e) {
                        this.printMessage("info", e)
                    }
                }, {
                    key: "warning",
                    value: function (e) {
                        this.printMessage("warning", e)
                    }
                }, {
                    key: "error",
                    value: function (e) {
                        this.printMessage("error", e)
                    }
                }, {
                    key: "printMessage",
                    value: function (e, t) {
                        if (this.shouldLog(e)) {
                            var n = e.charAt(0).toUpperCase() + e.slice(1),
                                i = "[".concat(n, "] Vuex WebExtensions: ").concat(t);
                            "error" == e ? console.error(i) : "warning" == e ? console.warn(i) : "info" == e ? console.info(i) : console.log(i)
                        }
                    }
                }]), e
            }());

        function v(e, t) {
            var n = {};
            return t.forEach((function (t) {
                n[t] = e[t]
            })), n
        }

        function b(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function y(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? b(Object(n), !0).forEach((function (t) {
                    u()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : b(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var w = function () {
                function e(t, n, i) {
                    var o = this;
                    if (p()(this, e), this.store = t, this.browser = n, this.settings = i, this.connections = [], this.settings.persistentStates.length && (m.info("Persistent states detected on config, reading from localstorage..."), this.browser.getPersistentStates().then((function (e) {
                            if (null !== e) {
                                if (m.verbose("Saved persistent states found on localstorage"), o.store.commit("vweReplaceState", y(y({}, o.store.state), v(e, o.settings.persistentStates))), o.connections.length > 0) {
                                    m.info("Sending initial state to other contexts...");
                                    for (var t = o.connections.length - 1; t >= 0; t--) o.syncCurrentState(o.connections[t])
                                }
                            } else m.debug("No data found on localstorage for persistent states")
                        }))), this.store.subscribe((function (e) {
                            if (m.debug("Hooked mutation (".concat(e.type, ")")), o.settings.ignoredMutations.length > 0 && o.settings.ignoredMutations.includes(e.type)) m.info("Mutation (".concat(e.type, ") are on ignored mutations list, skiping..."));
                            else {
                                for (var t = o.connections.length - 1; t >= 0; t--) {
                                    o.connections[t].receivedMutations.length || o.sendMutation(o.connections[t], e);
                                    for (var i = o.connections[t].receivedMutations.length - 1; i >= 0; i--) o.connections[t].receivedMutations[i].type == e.type && o.connections[t].receivedMutations[i].payload == e.payload ? o.connections[t].receivedMutations.splice(i, 1) : 0 == t && o.sendMutation(o.connections[t], e)
                                }
                                n.savePersistentStates(v(o.store.state, o.settings.persistentStates))
                            }
                        })), 1 == this.settings.syncActions) try {
                        m.verbose("Listening for actions"), this.store.subscribeAction((function (e) {
                            if (m.debug("Hooked action (".concat(e.type, ")")), console.log(e), o.settings.ignoredActions.length > 0 && o.settings.ignoredActions.includes(e.type)) m.info("Action (".concat(e.type, ") are on ignored actions list, skiping..."));
                            else
                                for (var t = o.connections.length - 1; t >= 0; t--) {
                                    o.connections[t].receivedActions.length || o.sendAction(o.connections[t], e);
                                    for (var n = o.connections[t].receivedActions.length - 1; n >= 0; n--) o.connections[t].receivedActions[n].type == e.type ? o.connections[t].receivedActions.splice(n, 1) : 0 == t && o.sendAction(o.connections[t], e)
                                }
                        }))
                    } catch (e) {
                        m.info("Can't sync actions because isn't available in your Vuex version, use Vuex v2.5.0 or later for this feature")
                    }
                    n.handleConnection((function (e) {
                        o.onConnection(e)
                    }))
                }
                return g()(e, [{
                    key: "onConnection",
                    value: function (e) {
                        var t = this;
                        e.onDisconnect.addListener((function (e) {
                            t.onDisconnect(e)
                        })), e.receivedMutations = [], e.receivedActions = [], e.onMessage.addListener((function (n) {
                            t.onMessage(e, n)
                        })), this.connections.push(e), this.syncCurrentState(e)
                    }
                }, {
                    key: "onDisconnect",
                    value: function (e) {
                        for (var t = this.connections.length - 1; t >= 0; t--) this.connections[t].name === e.name && this.connections.splice(t, 1)
                    }
                }, {
                    key: "onMessage",
                    value: function (e, t) {
                        if (t.type) switch (t.type) {
                            case "@@STORE_SYNC_MUTATION":
                                e.receivedMutations.push(t.data), this.store.commit(t.data.type, t.data.payload);
                                break;
                            case "@@STORE_SYNC_ACTION":
                                e.receivedActions.push(t.data), this.store.dispatch(t.data.type, t.data.payload)
                        }
                    }
                }, {
                    key: "syncCurrentState",
                    value: function (e) {
                        try {
                            e.postMessage({
                                type: "@@STORE_SYNC_STATE",
                                data: this.store.state
                            })
                        } catch (e) {
                            m.error("Initial state not sent: ".concat(e))
                        }
                    }
                }, {
                    key: "sendMutation",
                    value: function (e, t) {
                        m.verbose("Sending mutation (".concat(t.type, ") to connection: ").concat(e.name));
                        try {
                            e.postMessage({
                                type: "@@STORE_SYNC_MUTATION",
                                data: t
                            })
                        } catch (e) {
                            m.error("Mutation not sent: ".concat(e))
                        }
                    }
                }, {
                    key: "sendAction",
                    value: function (e, t) {
                        m.verbose("Sending action (".concat(t.type, ") to connection: ").concat(e.name));
                        try {
                            e.postMessage({
                                type: "@@STORE_SYNC_ACTION",
                                data: t
                            })
                        } catch (e) {
                            m.error("Action not sent: ".concat(e))
                        }
                    }
                }]), e
            }(),
            S = Object.freeze({
                firefox: {
                    name: "Mozilla Firefox",
                    namespace: "browser",
                    type: "promise"
                },
                chrome: {
                    name: "Google Chrome",
                    namespace: "chrome",
                    type: "callback"
                },
                edge: {
                    name: "Microsoft Edge",
                    namespace: "browser",
                    type: "callback"
                }
            }),
            O = function () {
                function e() {
                    p()(this, e), this.browser = null, this.detectBrowser()
                }
                return g()(e, [{
                    key: "detectBrowser",
                    value: function () {
                        if ("undefined" != typeof chrome) return "undefined" != typeof browser ? void(this.browser = S.firefox) : void(this.browser = S.chrome);
                        this.browser = S.edge
                    }
                }, {
                    key: "isBackgroundScript",
                    value: function (e) {
                        var t = this;
                        return new Promise((function (n) {
                            try {
                                t.browser == S.chrome ? chrome.runtime.getBackgroundPage((function (t) {
                                    return n(e === t)
                                })) : t.browser == S.firefox ? browser.runtime.getBackgroundPage().then((function (t) {
                                    return n(e === t)
                                })) : t.browser == S.edge && browser.runtime.getBackgroundPage((function (t) {
                                    return n(e === t)
                                }))
                            } catch (e) {
                                return n(!1)
                            }
                            return !1
                        }))
                    }
                }, {
                    key: "getPersistentStates",
                    value: function () {
                        var e = this;
                        return new Promise((function (t, n) {
                            try {
                                e.browser == S.chrome ? chrome.storage.local.get("@@vwe-persistence", (function (e) {
                                    return e["@@vwe-persistence"] ? t(e["@@vwe-persistence"]) : t(null)
                                })) : e.browser == S.firefox ? browser.storage.local.get("@@vwe-persistence").then((function (e) {
                                    return e["@@vwe-persistence"] ? t(e["@@vwe-persistence"]) : t(null)
                                })) : e.browser == S.edge && browser.storage.local.get("@@vwe-persistence", (function (e) {
                                    return e["@@vwe-persistence"] ? t(e["@@vwe-persistence"]) : t(null)
                                }))
                            } catch (e) {
                                return n(e)
                            }
                            return !1
                        }))
                    }
                }, {
                    key: "savePersistentStates",
                    value: function (e) {
                        if (this.browser == S.chrome) try {
                            chrome.storage.local.set({
                                "@@vwe-persistence": e
                            })
                        } catch (e) {
                            m.error("Can't write persistent states to local storage. Did you grant storage permission to your WebExtension?")
                        } else if (this.browser == S.firefox) try {
                            browser.storage.local.set({
                                "@@vwe-persistence": e
                            })
                        } catch (e) {
                            m.error("Can't write persistent states to local storage. Did you grant storage permission to your WebExtension?")
                        } else if (this.browser == S.edge) try {
                            browser.storage.local.set({
                                "@@vwe-persistence": e
                            })
                        } catch (e) {
                            m.error("Can't write persistent states to local storage. Did you grant storage permission to your WebExtension?")
                        }
                    }
                }, {
                    key: "handleConnection",
                    value: function (e) {
                        return this.browser == S.chrome ? chrome.runtime.onConnect.addListener(e) : browser.runtime.onConnect.addListener(e)
                    }
                }, {
                    key: "connectToBackground",
                    value: function (e) {
                        return this.browser == S.chrome ? chrome.runtime.connect({
                            name: e
                        }) : browser.runtime.connect({
                            name: e
                        })
                    }
                }]), e
            }(),
            k = function () {
                function e(t, n, i) {
                    var o = this;
                    if (p()(this, e), this.store = t, this.browser = n, this.settings = i, this.scriptId = Math.random().toString(36).substr(2, 9), this.connection = null, this.receivedMutations = [], this.receivedActions = [], this.initialized = !1, this.pendingMutations = [], this.pendingActions = [], this.connection = n.connectToBackground("".concat(this.settings.connectionName, "_").concat(this.scriptId)), window.__ODM_STORE_CONNECTED = !0, this.connection.onMessage.addListener((function (e) {
                            o.onMessage(e)
                        })), m.verbose("Listening for mutations"), this.store.subscribe((function (e) {
                            o.hookMutation(e)
                        })), 1 == this.settings.syncActions) try {
                        m.verbose("Listening for actions"), this.store.subscribeAction((function (e) {
                            e.payload instanceof Event && (e.payload = null), o.hookAction(e)
                        }))
                    } catch (e) {
                        m.info("Can't sync actions because isn't available in your Vuex version, use Vuex v2.5.0 or later for this feature")
                    }
                }
                return g()(e, [{
                    key: "onMessage",
                    value: function (e) {
                        if (m.verbose("Received message from background"), e.type) switch (e.type) {
                            case "@@STORE_SYNC_STATE":
                                m.info("Received store initial state"), this.store.commit("vweReplaceState", e.data), this.initialized = !0, this.processPendingMutations();
                                break;
                            case "@@STORE_SYNC_MUTATION":
                                if (m.debug("Received mutation ".concat(e.data.type)), !this.initialized) {
                                    m.info("Received mutation (".concat(e.data.type, ") but the store isn't initilized yet"));
                                    break
                                }
                                this.receivedMutations.push(e.data), this.store.commit(e.data.type, e.data.payload);
                                break;
                            case "@@STORE_SYNC_ACTION":
                                if (m.debug("Received action ".concat(e.data.type)), !this.initialized) {
                                    m.info("Received action (".concat(e.data.type, ") but the store isn't initilized yet"));
                                    break
                                }
                                this.receivedActions.push(e.data), this.store.dispatch(e.data)
                        }
                    }
                }, {
                    key: "hookMutation",
                    value: function (e) {
                        if (m.debug("Hooked mutation (".concat(e.type, ")")), "vweReplaceState" !== e.type)
                            if (this.settings.ignoredMutations.length > 0 && this.settings.ignoredMutations.includes(e.type)) m.info("Mutation (".concat(e.type, ") are on ignored mutations list, skiping..."));
                            else {
                                if (!this.initialized) return m.info("Hooked mutation (".concat(e.type, ") before initialization, enqued on pending mutations")), this.pendingMutations.push(e);
                                if (!this.receivedMutations.length) return this.sendMutation(e);
                                for (var t = this.receivedMutations.length - 1; t >= 0; t--) this.receivedMutations[t].type == e.type && this.receivedMutations[t].payload == e.payload ? (m.verbose("Mutation ".concat(this.receivedMutations[t].type, " it's received mutation, don't send to background again")), this.receivedMutations.splice(t, 1)) : 0 == t && this.sendMutation(e)
                            }
                        else m.debug("vweReplaceState mutation don't need send to other contexts")
                    }
                }, {
                    key: "hookAction",
                    value: function (e) {
                        if (m.debug("Hooked action (".concat(e.type, ")")), this.settings.ignoredActions.length > 0 && this.settings.ignoredActions.includes(e.type)) m.info("Action (".concat(e.type, ") are on ignored action list, skiping..."));
                        else {
                            if (!this.initialized) return m.info("Hooked action (".concat(e.type, ") before initialization, enqued on pending actions")), this.pendingActions.push(e);
                            if (!this.receivedActions.length) return this.sendAction(e);
                            for (var t = this.receivedActions.length - 1; t >= 0; t--) this.receivedActions[t].type == e.type && this.receivedActions[t].payload == e.payload ? (m.verbose("Action ".concat(this.receivedActions[t].type, " it's received action, don't send to background again")), this.receivedActions.splice(t, 1)) : 0 == t && this.sendAction(e)
                        }
                    }
                }, {
                    key: "sendMutation",
                    value: function (e) {
                        m.debug("Sending mutation (".concat(e.type, ") to background script")), this.connection.postMessage({
                            type: "@@STORE_SYNC_MUTATION",
                            data: e
                        })
                    }
                }, {
                    key: "sendAction",
                    value: function (e) {
                        m.debug("Sending action (".concat(e.type, ") to background script")), this.connection.postMessage({
                            type: "@@STORE_SYNC_ACTION",
                            data: e
                        })
                    }
                }, {
                    key: "processPendingMutations",
                    value: function () {
                        if (m.debug("Processing pending mutations list..."), this.pendingMutations.length)
                            for (var e = 0; e < this.pendingMutations.length; e++) m.verbose("Processing pending mutation (".concat(this.pendingMutations[e].type, ") with payload: ").concat(this.pendingMutations[e].payload)), this.store.commit(this.pendingMutations[e].type, this.pendingMutations[e].payload), this.pendingMutations.splice(e, 1);
                        else m.info("The pending mutations list are empty")
                    }
                }, {
                    key: "processPendingActions",
                    value: function () {
                        if (m.debug("Processing pending actions list..."), this.pendingActions.length)
                            for (var e = 0; e < this.pendingActions.length; e++) m.verbose("Processing pending action (".concat(this.pendingActions[e].type, ") with payload: ").concat(this.pendingActions[e].payload)), this.store.dispatch(this.pendingActions[e].type, this.pendingActions[e].payload), this.pendingActions.splice(e, 1);
                        else m.info("The pending actions list are empty")
                    }
                }]), e
            }();

        function C(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function D(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? C(Object(n), !0).forEach((function (t) {
                    u()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : C(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var E = {
                connectionName: "vuex-webextensions",
                loggerLevel: "warning",
                persistentStates: [],
                ignoredMutations: [],
                ignoredActions: [],
                syncActions: !0
            },
            P = n(6),
            A = n(23),
            x = n(17),
            T = new A.a;
        T.register(x.f), T.register(x.a), T.register(x.d), T.register(x.e), T.register(x.c), T.register(x.b);
        var M, I, L = T,
            j = function (e) {
                var t = e.isAppReady;
                return "ready" === t
            },
            R = function (e) {
                return e.isOnline
            },
            z = function (e) {
                var t = e.isMinimize;
                return t
            },
            B = function (e) {
                var t = e.processedUrls;
                return function (e) {
                    return t[e] || null
                }
            },
            F = function (e) {
                var t = e.popupRoute;
                return t
            },
            N = function (e) {
                return {
                    id: e.popupPlayerActiveMediaId,
                    type: e.popupPlayerActiveMediaType,
                    url: e.popupPlayerActiveMediaUrl,
                    name: e.popupPlayerActiveMediaName
                }
            },
            U = function (e) {
                return e.popupPlayerActiveMediaId
            },
            V = function (e) {
                return e.popupPlayerActiveMediaUrl
            },
            H = function (e) {
                return e.popupPlayerState
            },
            q = function (e) {
                return e.popupPlayerTime
            },
            K = function (e) {
                var t = e.popupPlayerActiveMediaDuration,
                    n = e.popupPlayerTime;
                return t && n ? Math.floor(100 / t * n) + "%" : "0%"
            },
            W = function (e) {
                return e.popupPlayerActiveMediaDuration
            },
            G = function (e) {
                return e.popupPlayerVideoMute
            },
            Y = function (e) {
                return e.imageSnifferEnabledTabs.length
            },
            Q = function (e) {
                var t = e.imageSnifferEnabledTabs;
                return function (e) {
                    return t.indexOf(e) > -1
                }
            },
            J = function (e) {
                return e.popupQRCodeURL
            },
            $ = (M = {}, u()(M, "SET_POPUP_ROUTE", (function (e, t) {
                e.popupRoute = t
            })), u()(M, "SET_CONNECTION_STATUS", (function (e, t) {
                e.isOnline = t
            })), u()(M, "SET_APP_STATUS", (function (e, t) {
                e.isAppReady = t
            })), u()(M, "TOGGLE_POPUP_VIEW", (function (e) {
                e.isMinimize = !e.isMinimize
            })), u()(M, "SET_PROCESSED_URL", (function (e, t) {
                var n = t.url,
                    i = t.id;
                e.processedUrls[n] = i
            })), u()(M, "REMOVE_PROCESSED_URL", (function (e, t) {
                e.isMinimize = !e.isMinimize, e.processedUrls && delete e.processedUrls[t]
            })), u()(M, "ENABLE_TAB_IMG_SNIFFER", (function (e, t) {
                e.imageSnifferEnabledTabs && e.imageSnifferEnabledTabs.push(t)
            })), u()(M, "DISABLE_TAB_IMG_SNIFFER", (function (e, t) {
                var n = e.imageSnifferEnabledTabs.indexOf(t);
                n > -1 && e.imageSnifferEnabledTabs.splice(n, 1)
            })), u()(M, "DISABLE_ALL_IMG_SNIFFERS", (function (e) {
                e.imageSnifferEnabledTabs = []
            })), u()(M, "SET_POPUP_PLAYER_MEDIA", (function (e, t) {
                var n = t.id,
                    i = t.type,
                    o = t.url,
                    a = t.name,
                    r = t.duration;
                e.popupPlayerActiveMediaId = n, e.popupPlayerActiveMediaType = i, e.popupPlayerActiveMediaUrl = o, e.popupPlayerActiveMediaName = a, e.popupPlayerActiveMediaDuration = r
            })), u()(M, "RESET_POPUP_PLAYER_MEDIA", (function (e) {
                e.popupPlayerActiveMediaId = null, e.popupPlayerActiveMediaType = null, e.popupPlayerActiveMediaUrl = null, e.popupPlayerActiveMediaName = null, e.popupPlayerActiveMediaDuration = null, e.popupPlayerTime = null, e.popupPlayerState = "stop"
            })), u()(M, "SET_POPUP_PLAYER_TIME", (function (e, t) {
                e.popupPlayerTime = t
            })), u()(M, "SET_POPUP_PLAYER_ACTIVE_MEDIA_DURATION", (function (e, t) {
                e.popupPlayerActiveMediaDuration = t
            })), u()(M, "SET_POPUP_PLAYER_STATE", (function (e, t) {
                e.popupPlayerState = t
            })), u()(M, "TOGGLE_POPUP_PLAYER_PLAY_PAUSE", (function (e) {
                "pause" === e.popupPlayerState || "stop" === e.popupPlayerState ? e.popupPlayerState = "play" : e.popupPlayerState = "pause"
            })), u()(M, "TOGGLE_POPUP_PLAYER_VIDEO_MUTE", (function (e) {
                e.popupPlayerVideoMute = !e.popupPlayerVideoMute
            })), u()(M, "SET_POPUP_QRCODE_URL", (function (e, t) {
                e.popupQRCodeURL = t
            })), M),
            X = function (e, t) {
                (0, e.commit)("SET_POPUP_ROUTE", t)
            },
            Z = function (e, t) {
                (0, e.commit)("SET_APP_STATUS", t)
            },
            ee = function (e, t) {
                (0, e.commit)("SET_CONNECTION_STATUS", t)
            },
            te = function (e) {
                (0, e.commit)("TOGGLE_POPUP_VIEW")
            },
            ne = function (e, t) {
                (0, e.commit)("SET_PROCESSED_URL", {
                    url: t.url,
                    id: t.id
                })
            },
            ie = function (e, t) {
                (0, e.commit)("REMOVE_PROCESSED_URL", t)
            },
            oe = function (e, t) {
                (0, e.commit)("ENABLE_TAB_IMG_SNIFFER", t)
            },
            ae = function (e, t) {
                (0, e.commit)("DISABLE_TAB_IMG_SNIFFER", t)
            },
            re = function (e) {
                (0, e.commit)("DISABLE_ALL_IMG_SNIFFERS")
            },
            se = function (e, t) {
                (0, e.commit)("SET_POPUP_PLAYER_MEDIA", t)
            },
            le = function (e) {
                var t = e.commit;
                return new Promise((function (e) {
                    t("RESET_POPUP_PLAYER_MEDIA"), e("reseted")
                }))
            },
            ce = function (e, t) {
                (0, e.commit)("SET_POPUP_PLAYER_TIME", t)
            },
            ue = function (e, t) {
                (0, e.commit)("SET_POPUP_PLAYER_ACTIVE_MEDIA_DURATION", t)
            },
            de = function (e, t) {
                (0, e.commit)("SET_POPUP_PLAYER_STATE", t)
            },
            fe = function (e) {
                (0, e.commit)("TOGGLE_POPUP_PLAYER_PLAY_PAUSE")
            },
            _e = function (e) {
                (0, e.commit)("TOGGLE_POPUP_PLAYER_VIDEO_MUTE")
            },
            pe = function (e, t) {
                (0, e.commit)("SET_POPUP_QRCODE_URL", t)
            },
            he = {
                namespaced: !0,
                state: {
                    isOnline: navigator.onLine || !1,
                    isAppReady: !1,
                    popupRoute: "manager",
                    isMinimize: !0,
                    processedUrls: {},
                    imageSnifferEnabledTabs: [],
                    popupPlayerActiveMediaId: null,
                    popupPlayerActiveMediaName: null,
                    popupPlayerActiveMediaType: null,
                    popupPlayerActiveMediaUrl: null,
                    popupPlayerActiveMediaDuration: null,
                    popupPlayerTime: null,
                    popupPlayerState: "stop",
                    popupPlayerVideoMute: !1,
                    popupQRCodeURL: null
                },
                getters: i,
                mutations: $,
                actions: o
            },
            ge = n(19),
            me = n.n(ge),
            ve = function (e) {
                return function (t) {
                    return e[t]
                }
            },
            be = function (e) {
                return e.locale
            },
            ye = function (e) {
                return e.defaultDownloadBar
            },
            we = function (e) {
                return e.iconIndicator
            },
            Se = function (e) {
                return e.darkIcon
            },
            Oe = function (e) {
                return e.contextMenu
            },
            ke = function (e) {
                var t = e.notificationsOption,
                    n = e.soundsOption,
                    i = e.selectedFileSize;
                return function (e, o) {
                    var a = o.fileSize,
                        r = t.enable,
                        s = t.types.find((function (t) {
                            return t.state === e.toLowerCase()
                        })),
                        l = s ? s.time : 0,
                        c = !!s && s.checked,
                        u = i.substring(0, 2),
                        d = parseInt(i.substring(3), 10),
                        f = ("kb" === u ? 1024 * d : "mb" === u ? 1048576 * d : "gb" === u ? 1073741824 * d : 0) <= a,
                        _ = n.enable,
                        p = n.types.find((function (t) {
                            return t.state === e.toLowerCase()
                        })),
                        h = p ? p.volume : 0,
                        g = !!p && p.checked;
                    return [r && c && f, l, _ && g, h]
                }
            },
            Ce = function (e) {
                return function (t) {
                    var n = e.downloadsFileTypes.find((function (e) {
                        var n = e.enable,
                            i = e.extensions;
                        return n && i.includes(Object(P.A)(t))
                    })).path;
                    return void 0 === n ? "other" : n
                }
            },
            De = function (e) {
                return e.defaultFileTypes
            },
            Ee = function (e) {
                var t = e.sniffersControl;
                return function (e) {
                    return t[e]
                }
            },
            Pe = function (e) {
                var t = e.sniffersControl;
                return function (e, n) {
                    return t[e][n]
                }
            },
            Ae = function (e) {
                var t = e.sniffersControl;
                return function (e, n) {
                    if ("none" === t[e].filtration) return !1;
                    var i = Object(P.t)(t[e].whitelist, n),
                        o = Object(P.t)(t[e].blacklist, n);
                    return !!("whitelist" !== t[e].filtration || -1 !== i && t[e].whitelist[i].enable) && ("blacklist" !== t[e].filtration || -1 === o || !t[e].blacklist[o].enable)
                }
            },
            xe = function (e) {
                return e.tutorialLanguage
            },
            Te = function (e) {
                var t = e.isTutorialViewed;
                return t
            },
            Me = function (e) {
                return e.downloadsAutoClean
            },
            Ie = function (e) {
                return e.linkCategoriesToSniff
            },
            Le = function (e) {
                return e.linkExtsToSniff
            };

        function je(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function Re(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? je(Object(n), !0).forEach((function (t) {
                    u()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : je(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var ze, Be = function (e, t, n) {
                var i = void 0;
                return e.some((function (e) {
                    var o = e.extensions.includes(t);
                    return o && (i = e[n]), o
                })), i
            },
            Fe = (I = {}, u()(I, "TOGGLE_LOCALE", (function (e, t) {
                e.locale = t
            })), u()(I, "TOGGLE_SETTINGS", (function (e, t) {
                e[t].enable = !e[t].enable
            })), u()(I, "TOGGLE_THEME_STYLE", (function (e, t) {
                e.themeStyle = t
            })), u()(I, "TOGGLE_ROUTING", (function (e) {
                e.isRouting = !e.isRouting
            })), u()(I, "SET_DEFAULT_DOWNLOAD_BAR", (function (e) {
                e.defaultDownloadBar = !e.defaultDownloadBar
            })), u()(I, "SET_ICON_INDICATOR", (function (e) {
                e.iconIndicator = !e.iconIndicator
            })), u()(I, "CHANGE_FILE_SIZE", (function (e, t) {
                e.selectedFileSize = t
            })), u()(I, "TOGGLE_NOTIFICATION_TYPE", (function (e, t) {
                var n = t.notification,
                    i = t.notificationType,
                    o = t.notificationParameters,
                    a = o.index,
                    r = o.param,
                    s = o.value;
                e[n].types.splice(a, 1, Re(Re({}, i), u()({}, r, s)))
            })), u()(I, "ADD_FILE_ROUTES_RULE", (function (e) {
                for (var t = e.downloadsFileTypes.map((function (e) {
                        return e.path
                    })), n = 1, i = "other"; t.includes(i);) i = "".concat("other").concat(n), n++;
                e.downloadsFileTypes.push({
                    enable: !0,
                    path: i,
                    extensions: []
                })
            })), u()(I, "REMOVE_FILE_ROUTES_RULE", (function (e, t) {
                e.downloadsFileTypes.splice(t, 1)
            })), u()(I, "UPDATE_FILE_ROUTE_TYPE", (function (e, t) {
                var n = t.index,
                    i = t.value;
                e.downloadsFileTypes[n].path = i
            })), u()(I, "TOGGLE_FILE_ROUTE_RULE", (function (e, t) {
                e.downloadsFileTypes[t].enable = !e.downloadsFileTypes[t].enable
            })), u()(I, "ADD_FILE_EXTENSION", (function (e, t) {
                var n = t.path,
                    i = t.ext,
                    o = e.defaultFileTypes.findIndex((function (e) {
                        return "Other" === e.type
                    })),
                    a = Be(e.defaultFileTypes, i, "type");
                ~o || e.defaultFileTypes.push({
                    type: "Other",
                    extensions: []
                }), !a && e.defaultFileTypes[o].extensions.push(i);
                var r = e.downloadsFileTypes.findIndex((function (e) {
                        return e.path === n
                    })),
                    s = Be(e.downloadsFileTypes, i, "path");
                if (s) {
                    var l = e.downloadsFileTypes.findIndex((function (e) {
                        return e.path === s
                    }));
                    e.downloadsFileTypes[l].extensions = e.downloadsFileTypes[l].extensions.filter((function (e) {
                        return e.toLowerCase() !== i.toLowerCase()
                    }))
                }
                e.downloadsFileTypes[r].extensions.push(i)
            })), u()(I, "REMOVE_FILE_EXTENSION", (function (e, t) {
                var n = t.path,
                    i = t.ext,
                    o = e.downloadsFileTypes.findIndex((function (e) {
                        return e.path === n
                    }));
                e.downloadsFileTypes[o].extensions = e.downloadsFileTypes[o].extensions.filter((function (e) {
                    return e.toLowerCase() !== i.toLowerCase()
                }))
            })), u()(I, "SET_SNIFFER_FILTRATION", (function (e, t) {
                var n = t.snifferType,
                    i = t.filtrationType;
                e.sniffersControl[n].filtration = i
            })), u()(I, "ADD_DOMAIN_TO_SNIFFER", (function (e, t) {
                var n = t.snifferType,
                    i = t.listType,
                    o = t.url;
                e.sniffersControl[n][i] = [].concat(me()(e.sniffersControl[n][i]), [{
                    url: o,
                    enable: !0
                }])
            })), u()(I, "UPDATE_DOMAIN_URL_IN_SNIFFER", (function (e, t) {
                var n = t.snifferType,
                    i = t.listType,
                    o = t.domainIndex,
                    a = t.newUrl;
                e.sniffersControl[n][i][o].url = a
            })), u()(I, "TOGGLE_DOMAIN_IN_SNIFFER", (function (e, t) {
                var n = t.snifferType,
                    i = t.listType,
                    o = t.domainIndex;
                e.sniffersControl[n][i][o].enable = !e.sniffersControl[n][i][o].enable
            })), u()(I, "REMOVE_DOMAIN_FROM_SNIFFER", (function (e, t) {
                var n = t.snifferType,
                    i = t.listType,
                    o = t.url;
                e.sniffersControl[n][i] = e.sniffersControl[n][i].filter((function (e) {
                    return e.url !== o
                }))
            })), u()(I, "SET_TUTORIAL_LANGUAGE", (function (e, t) {
                e.tutorialLanguage = t
            })), u()(I, "SET_TUTORIAL_VIEWED", (function (e) {
                e.isTutorialViewed = !0
            })), u()(I, "TOGGLE_DARK_ICON", (function (e) {
                e.darkIcon = !e.darkIcon
            })), u()(I, "TOGGLE_CONTEXT_MENU", (function (e) {
                e.contextMenu = !e.contextMenu
            })), u()(I, "SET_DOWNLOADS_AUTO_CLEAN", (function (e, t) {
                e.downloadsAutoClean = t
            })), u()(I, "SET_LINK_EXT_TO_SNIFF", (function (e, t) {
                e.linkExtsToSniff = [];
                for (var n = 0; n < t.length; n++) {
                    var i = t[n].toLowerCase(); - 1 === e.linkExtsToSniff.indexOf(i) && e.linkExtsToSniff.push(i)
                }
            })), u()(I, "SET_LINK_CATEGORIES_TO_SNIFF", (function (e, t) {
                e.linkCategoriesToSniff = me()(t)
            })), I),
            Ne = function (e, t) {
                var n = e.commit,
                    i = e.state,
                    o = t.settingsName,
                    a = t.settingsValue;
                "notifications" === o && n("TOGGLE_SETTINGS", "".concat(o, "Option")), "sounds" === o && n("TOGGLE_SETTINGS", "".concat(o, "Option")), "minimize" === o && n("TOGGLE_POPUP_VIEW"), "routing" === o && n("TOGGLE_ROUTING"), "theme" === o && n("TOGGLE_THEME_STYLE", a), "locale" === o && n("TOGGLE_LOCALE", a), "fileSize" === o && n("CHANGE_FILE_SIZE", a), "iconIndicator" === o && n("SET_ICON_INDICATOR"), "defaultDownloadBar" === o && chrome.runtime.sendMessage({
                    msg: "setDefaultDownloadBar",
                    value: !i.defaultDownloadBar
                }, (function () {
                    return n("SET_DEFAULT_DOWNLOAD_BAR")
                })), "contextMenu" === o && chrome.runtime.sendMessage({
                    msg: "setPageContextMenu",
                    value: !i.contextMenu
                }, (function () {
                    return n("TOGGLE_CONTEXT_MENU")
                })), "darkIcon" === o && (n("TOGGLE_DARK_ICON"), chrome.runtime.sendMessage({
                    msg: "determineIconState",
                    immediately: !0
                }))
            },
            Ue = function (e, t) {
                (0, e.commit)("TOGGLE_NOTIFICATION_TYPE", {
                    notification: t.notification,
                    notificationType: t.notificationType,
                    notificationParameters: t.notificationParameters
                })
            },
            Ve = function (e, t) {
                e.state;
                (0, e.commit)("TOGGLE_FILE_ROUTE_RULE", t)
            },
            He = function (e) {
                (0, e.commit)("ADD_FILE_ROUTES_RULE")
            },
            qe = function (e, t) {
                (0, e.commit)("REMOVE_FILE_ROUTES_RULE", t)
            },
            Ke = function (e, t) {
                e.state;
                (0, e.commit)("UPDATE_FILE_ROUTE_TYPE", {
                    index: t.index,
                    value: t.value
                })
            },
            We = function (e, t) {
                var n = e.commit,
                    i = t.path,
                    o = t.ext;
                Array.isArray(o) ? o.forEach((function (e) {
                    n("ADD_FILE_EXTENSION", {
                        path: i,
                        ext: e.toLowerCase()
                    })
                })) : n("ADD_FILE_EXTENSION", {
                    path: i,
                    ext: o.toLowerCase()
                })
            },
            Ge = function (e, t) {
                var n = e.commit,
                    i = t.path,
                    o = t.ext;
                Array.isArray(o) ? o.forEach((function (e) {
                    n("REMOVE_FILE_EXTENSION", {
                        path: i,
                        ext: e
                    })
                })) : n("REMOVE_FILE_EXTENSION", {
                    path: i,
                    ext: o
                })
            },
            Ye = function (e, t) {
                (0, e.commit)("SET_SNIFFER_FILTRATION", t)
            },
            Qe = function (e, t) {
                var n = e.state,
                    i = e.commit,
                    o = t.snifferType,
                    a = t.listType,
                    r = t.url;
                return new Promise((function (e, t) {
                    -1 === Object(P.t)(n.sniffersControl[o][a], r) ? (i("ADD_DOMAIN_TO_SNIFFER", {
                        snifferType: o,
                        listType: a,
                        url: r
                    }), e("success")) : t("domain_exist")
                }))
            },
            Je = function (e, t) {
                var n = e.state,
                    i = e.commit,
                    o = t.snifferType,
                    a = t.listType,
                    r = t.currentUrl,
                    s = t.newUrl;
                return new Promise((function (e, t) {
                    var l = Object(P.t)(n.sniffersControl[o][a], r); - 1 === Object(P.t)(n.sniffersControl[o][a], s) ? (i("UPDATE_DOMAIN_URL_IN_SNIFFER", {
                        snifferType: o,
                        listType: a,
                        domainIndex: l,
                        newUrl: s
                    }), e("success")) : t("domain_exist")
                }))
            },
            $e = function (e, t) {
                var n = e.state,
                    i = e.commit,
                    o = t.snifferType,
                    a = t.listType,
                    r = t.url;
                return new Promise((function (e, t) {
                    var s = Object(P.t)(n.sniffersControl[o][a], r); - 1 !== s ? (i("TOGGLE_DOMAIN_IN_SNIFFER", {
                        snifferType: o,
                        listType: a,
                        domainIndex: s
                    }), e("success")) : t("domain_not_exist")
                }))
            },
            Xe = function (e, t) {
                var n = e.state,
                    i = e.commit,
                    o = t.snifferType,
                    a = t.listType,
                    r = t.url;
                return new Promise((function (e, t) {
                    -1 !== Object(P.t)(n.sniffersControl[o][a], r) ? (i("REMOVE_DOMAIN_FROM_SNIFFER", {
                        snifferType: o,
                        listType: a,
                        url: r
                    }), e("success")) : t("domain_not_exist")
                }))
            },
            Ze = function (e, t) {
                (0, e.commit)("SET_TUTORIAL_LANGUAGE", t)
            },
            et = function (e) {
                (0, e.commit)("SET_TUTORIAL_VIEWED")
            },
            tt = function (e, t) {
                (0, e.commit)("SET_DOWNLOADS_AUTO_CLEAN", t)
            },
            nt = function (e, t) {
                (0, e.commit)("SET_LINK_CATEGORIES_TO_SNIFF", t)
            },
            it = function (e, t) {
                (0, e.commit)("SET_LINK_EXT_TO_SNIFF", t)
            },
            ot = n(2),
            at = {
                namespaced: !0,
                state: {
                    notificationsOption: {
                        enable: !0,
                        types: [{
                            name: "visual_start",
                            checked: !0,
                            time: "1",
                            state: "start"
                        }, {
                            name: "visual_finish",
                            checked: !0,
                            time: "1",
                            state: "complete"
                        }, {
                            name: "visual_error",
                            checked: !0,
                            time: "infinity",
                            state: "interrupted"
                        }]
                    },
                    soundsOption: {
                        enable: !0,
                        types: [{
                            name: "sound_start",
                            checked: !0,
                            volume: 50,
                            state: "start"
                        }, {
                            name: "sound_finish",
                            checked: !0,
                            volume: 50,
                            state: "complete"
                        }, {
                            name: "sound_error",
                            checked: !0,
                            volume: 50,
                            state: "interrupted"
                        }]
                    },
                    isRouting: !1,
                    defaultDownloadBar: !1,
                    iconIndicator: !0,
                    selectedFileSize: "",
                    themeStyle: "light",
                    locale: "en",
                    downloadsFileTypes: [{
                        enable: !0,
                        path: "pictures",
                        extensions: ["jpg", "jpeg", "peg", "png", "gif", "tiff", "tif", "svg", "bmp", "ai", "ico", "icns", "ppm", "pgm", "pnm", "pbm", "bgp", "webp"]
                    }, {
                        enable: !0,
                        path: "music",
                        extensions: ["mp3", "aac", "wav", "ogg", "flac", "wma", "ac3", "pcm", "aiff", "alac", "wpl", "aa", "act", "ape", "m4a", "m4p", "oga", "mogg", "tta"]
                    }, {
                        enable: !0,
                        path: "videos",
                        extensions: ["mkv", "avi", "3gp", "3g2", "mov", "bik", "wmv", "flv", "swf", "m2v", "m2p", "vob", "ifo", "mp4", "m4v", "mpg", "asf", "mpeg", "mpv", "qt", "webm", "ogv"]
                    }, {
                        enable: !0,
                        path: "programs",
                        extensions: ["exe", "apk", "com", "deb", "msi", "dmg", "bin", "vcd", "pl", "cgi", "jar", "py", "wsf"]
                    }, {
                        enable: !0,
                        path: "documents",
                        extensions: ["docx", "pdf", "doc", "txt", "rtf", "odt", "tex", "docm", "wks", "wps", "ppt", "ods", "pptx", "xlr", "xlt", "xls", "xlsx", "xml", "key", "rss", "cer", "csv"]
                    }, {
                        enable: !0,
                        path: "books",
                        extensions: ["djvu", "fb2", "fb3", "mobi", "epub", "azw", "lit", "odf", "kfx"]
                    }, {
                        enable: !0,
                        path: "archives",
                        extensions: ["zip", "rar", "7z", "gzip", "gz", "tar", "arj", "rpm"]
                    }, {
                        enable: !0,
                        path: "images",
                        extensions: ["iso", "adf", "cso", "md0", "md1", "md2", "mdf"]
                    }, {
                        enable: !0,
                        path: "system",
                        extensions: ["bak", "cab", "cfg", "cpl", "cur", "dll", "dmp", "drv", "ini", "lnk", "sys", "tmp"]
                    }, {
                        enable: !0,
                        path: "fonts",
                        extensions: ["fnt", "fon", "otf", "ttf"]
                    }, {
                        enable: !0,
                        path: "torrents",
                        extensions: ["torrent"]
                    }],
                    defaultFileTypes: me()(ot.f),
                    sniffersControl: {
                        video: {
                            translation: "video_sniffer_label",
                            filtration: "all",
                            whitelist: [],
                            blacklist: []
                        },
                        audio: {
                            translation: "audio_sniffer_label",
                            filtration: "all",
                            whitelist: [],
                            blacklist: []
                        },
                        image: {
                            translation: "video_sniffer_label",
                            filtration: "all",
                            whitelist: [],
                            blacklist: []
                        },
                        doc: {
                            translation: "doc_sniffer_label",
                            filtration: "all",
                            whitelist: [],
                            blacklist: []
                        }
                    },
                    tutorialLanguage: "en",
                    isTutorialViewed: !1,
                    darkIcon: !1,
                    contextMenu: !0,
                    downloadsAutoClean: "10",
                    linkCategoriesToSniff: [],
                    linkExtsToSniff: []
                },
                getters: a,
                mutations: Fe,
                actions: r
            },
            rt = function (e) {
                return e.appId
            },
            st = function (e) {
                return e.status === ot.p.loggedIn
            },
            lt = function (e) {
                return e.status
            },
            ct = function (e) {
                return e.userApiToken
            },
            ut = function (e) {
                return e.userData
            },
            dt = function (e) {
                return e.lastUpdateTimestamp
            },
            ft = function (e) {
                var t = e.status,
                    n = e.userData;
                return function (e) {
                    var i;
                    if (t !== ot.p.loggedIn) return !1;
                    var o = n.role,
                        a = n.subscription;
                    return "admin" === o || (!(!a || "Base" === a) || (i = "free", -1 === ot.o[i].indexOf(e)))
                }
            },
            _t = function (e) {
                var t = e.cloudServices;
                return function (e) {
                    return t && t[e]
                }
            },
            pt = function (e) {
                return e.userRating
            },
            ht = function (e) {
                var t = e.status,
                    n = e.userData,
                    i = e.upgradeProBanner;
                return function (e) {
                    if (t === ot.p.loggedIn && n.subscription) return !1;
                    var o = Date.now(),
                        a = 864e5,
                        r = i.downloadSection,
                        s = i.tabConvertions;
                    return "manager" === e && (!r.lastShow || o - r.lastShow > a) && r.totalViews < 5 ? "downloadSection" : (!s.lastShow || o - s.lastShow > a) && s.conversionsCnt >= 5 && o - s.initDate < 15 * a && "tabConvertions"
                }
            },
            gt = function (e) {
                return e.сustomSnifferViewed
            };

        function mt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function vt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? mt(Object(n), !0).forEach((function (t) {
                    u()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : mt(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var bt = (ze = {}, u()(ze, "SET_APP_ID", (function (e, t) {
                e.appId = t
            })), u()(ze, "SET_USER_API_TOKEN", (function (e, t) {
                e.userApiToken = t
            })), u()(ze, "SET_USER_STATUS", (function (e, t) {
                e.status = t
            })), u()(ze, "UPDATE_USER_DATA", (function (e, t) {
                e.userData = vt({}, t)
            })), u()(ze, "SET_LAST_UPDATE_TIMESTAMP", (function (e) {
                e.lastUpdateTimestamp = Date.now()
            })), u()(ze, "USER_LOG_OUT", (function (e) {
                e.userData = null, e.userApiToken = null
            })), u()(ze, "DROPBOX_LOG_IN", (function (e, t) {
                e.cloudServices.dropbox = vt({}, t)
            })), u()(ze, "DROPBOX_LOG_OUT", (function (e) {
                e.cloudServices.dropbox = {
                    loggedIn: !1
                }
            })), u()(ze, "GOOGLE_DRIVE_LOG_IN", (function (e, t) {
                e.cloudServices.googleDrive = vt({}, t)
            })), u()(ze, "GOOGLE_DRIVE_REFRESH_TOKEN", (function (e, t) {
                e.cloudServices.googleDrive = vt(vt(vt({}, e.cloudServices.googleDrive), t), {}, {
                    expires_in: Date.now() + 1e3 * t.expires_in
                })
            })), u()(ze, "GOOGLE_DRIVE_LOG_OUT", (function (e) {
                e.cloudServices.googleDrive = {
                    loggedIn: !1
                }
            })), u()(ze, "SET_USER_RATING", (function (e, t) {
                e.userRating = t
            })), u()(ze, "INCREASE_TAB_CONVERSIONS", (function (e) {
                e.upgradeProBanner.tabConvertions.conversionsCnt++
            })), u()(ze, "CLOSE_BANNER", (function (e, t) {
                e.upgradeProBanner.tabConvertions.initDate || (e.upgradeProBanner.tabConvertions.initDate = Date.now()), "tabConvertions" === t ? (e.upgradeProBanner.tabConvertions.conversionsCnt = 0, e.upgradeProBanner.tabConvertions.viewCnt < 2 ? (e.upgradeProBanner.tabConvertions.viewCnt++, e.upgradeProBanner.tabConvertions.lastShow = null) : (e.upgradeProBanner.tabConvertions.viewCnt = 0, e.upgradeProBanner.tabConvertions.lastShow = Date.now())) : "downloadSection" === t && (e.upgradeProBanner.downloadSection.totalViews++, e.upgradeProBanner.downloadSection.lastShow = Date.now())
            })), u()(ze, "SET_CUSTOM_SNIFFER_VIEWED", (function (e, t) {
                e.сustomSnifferViewed = t
            })), ze),
            yt = n(35),
            wt = n(42),
            St = n(36);

        function Ot(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function kt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ot(Object(n), !0).forEach((function (t) {
                    u()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ot(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }
        var Ct = function (e, t) {
                (0, e.commit)("SET_APP_ID", t)
            },
            Dt = function (e, t) {
                var n = e.commit;
                return new Promise((function (e) {
                    n("SET_USER_API_TOKEN", t), e(t)
                }))
            },
            Et = function (e) {
                var t = e.commit,
                    n = e.state,
                    i = n.userData,
                    o = n.userApiToken;
                return new Promise((function (e, a) {
                    i ? Object(yt.b)(n.userApiToken).then((function (n) {
                        t("UPDATE_USER_DATA", n), t("SET_LAST_UPDATE_TIMESTAMP"), e({
                            status: "success"
                        })
                    })).catch((function (e) {
                        t("USER_LOG_OUT"), t("SET_USER_STATUS", ot.p.loggedOut), a(e)
                    })) : Object(yt.c)(o).then(yt.b).then((function (n) {
                        t("UPDATE_USER_DATA", n), t("SET_LAST_UPDATE_TIMESTAMP"), t("SET_USER_STATUS", ot.p.loggedIn), chrome.runtime.setUninstallURL("".concat(ot.l.uninstall_page, "?token=").concat(o)), e({
                            status: "success"
                        })
                    })).catch((function (e) {
                        "device_limit_exceeded" === e && t("SET_USER_STATUS", ot.p.deviceLimitExceeded), t("USER_LOG_OUT"), a(e)
                    }))
                }))
            },
            Pt = function (e) {
                var t = e.state,
                    n = e.commit;
                return new Promise((function (e, i) {
                    Object(yt.d)(t.userApiToken).then((function (t) {
                        n("USER_LOG_OUT"), n("SET_USER_STATUS", ot.p.loggedOut), chrome.runtime.setUninstallURL(ot.l.uninstall_page), e(t)
                    })).catch((function (e) {
                        i(e)
                    }))
                }))
            },
            At = function (e, t) {
                var n = e.commit;
                return new Promise((function (e) {
                    e("token recieve"), Object(wt.b)(t).then((function (e) {
                        n("DROPBOX_LOG_IN", {
                            name: e.name.display_name,
                            token: t,
                            loggedIn: !0
                        })
                    }))
                }))
            },
            xt = function (e) {
                var t = e.commit,
                    n = e.state;
                Object(wt.d)(n.cloudServices.dropbox.token).then((function (e) {
                    t("DROPBOX_LOG_OUT")
                }))
            },
            Tt = function (e, t) {
                e.state;
                var n = e.commit;
                return new Promise((function (e) {
                    e("code recieve"), Object(St.b)(t.access_token).then((function (e) {
                        n("GOOGLE_DRIVE_LOG_IN", kt(kt(kt({}, e), t), {}, {
                            expires_in: Date.now() + 1e3 * t.expires_in,
                            loggedIn: !0
                        }))
                    }))
                }))
            },
            Mt = function (e) {
                var t = e.commit,
                    n = e.state;
                return new Promise((function (e) {
                    Object(St.f)(n.cloudServices.googleDrive.refresh_token).then((function (n) {
                        t("GOOGLE_DRIVE_REFRESH_TOKEN", n), e("refreshed")
                    }))
                }))
            },
            It = function (e) {
                var t = e.commit,
                    n = e.state;
                Object(St.e)(n.cloudServices.googleDrive.access_token).then((function (e) {
                    t("GOOGLE_DRIVE_LOG_OUT")
                }))
            },
            Lt = function (e, t) {
                (0, e.commit)("SET_USER_RATING", t)
            },
            jt = function (e) {
                (0, e.commit)("INCREASE_TAB_CONVERSIONS")
            },
            Rt = function (e, t) {
                (0, e.commit)("CLOSE_BANNER", t)
            },
            zt = function (e, t) {
                (0, e.commit)("SET_CUSTOM_SNIFFER_VIEWED", t)
            },
            Bt = {
                namespaced: !0,
                state: {
                    appId: null,
                    userApiToken: null,
                    userData: null,
                    lastUpdateTimestamp: 0,
                    status: ot.p.loggedOut,
                    cloudServices: {
                        dropbox: {
                            loggedIn: !1
                        },
                        googleDrive: {
                            loggedIn: !1
                        },
                        oneDrive: {
                            loggedIn: !1
                        }
                    },
                    userRating: 0,
                    upgradeProBanner: {
                        downloadSection: {
                            lastShow: null,
                            totalViews: 0
                        },
                        tabConvertions: {
                            initDate: null,
                            lastShow: null,
                            viewCnt: 0,
                            conversionsCnt: 0
                        }
                    },
                    "сustomSnifferViewed": !1
                },
                getters: s,
                mutations: bt,
                actions: l
            };
        d.a.use(f.a);
        var Ft = new f.a.Store({
            modules: {
                app: he,
                options: at,
                user: Bt
            },
            plugins: [function (e) {
                if ("undefined" == typeof window) return function () {};
                var t = D(D({}, E), e);
                m.setLoggerLevel(t.loggerLevel);
                var n = new O;
                return function (e) {
                    e.registerModule("@@VWE_Helper", {
                        mutations: {
                            vweReplaceState: function (t, n) {
                                Object.keys(e.state).forEach((function (t) {
                                    e.state[t] = n[t]
                                }))
                            }
                        }
                    }), n.isBackgroundScript(window).then((function (i) {
                        return i ? new w(e, n, t) : new k(e, n, t)
                    }))
                }
            }({
                persistentStates: ["options", "user"],
                syncActions: !1
            }), A.c.install(L, {
                namespace: "ormDB"
            })]
        });
        t.a = Ft, JSON.stringify(at.state)
    }
});